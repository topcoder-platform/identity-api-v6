
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.14.0
 * Query Engine version: 717184b7b35ea05dfa71a3236b7af656013e1e49
 */
Prisma.prismaVersion = {
  client: "6.14.0",
  engine: "717184b7b35ea05dfa71a3236b7af656013e1e49"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Achievement_type_luScalarFieldEnum = {
  achievement_type_id: 'achievement_type_id',
  achievement_type_desc: 'achievement_type_desc'
};

exports.Prisma.CountryScalarFieldEnum = {
  country_code: 'country_code',
  country_name: 'country_name',
  modify_date: 'modify_date',
  participating: 'participating',
  default_taxform_id: 'default_taxform_id',
  longitude: 'longitude',
  latitude: 'latitude',
  region: 'region',
  iso_name: 'iso_name',
  iso_alpha2_code: 'iso_alpha2_code',
  iso_alpha3_code: 'iso_alpha3_code'
};

exports.Prisma.Dice_connectionScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  connection: 'connection',
  accepted: 'accepted',
  created_at: 'created_at',
  short_url: 'short_url',
  con_created_at: 'con_created_at'
};

exports.Prisma.EmailScalarFieldEnum = {
  user_id: 'user_id',
  email_id: 'email_id',
  email_type_id: 'email_type_id',
  address: 'address',
  create_date: 'create_date',
  modify_date: 'modify_date',
  primary_ind: 'primary_ind',
  status_id: 'status_id'
};

exports.Prisma.Email_status_luScalarFieldEnum = {
  status_id: 'status_id',
  status_desc: 'status_desc',
  create_date: 'create_date',
  modify_date: 'modify_date'
};

exports.Prisma.Email_type_luScalarFieldEnum = {
  email_type_id: 'email_type_id',
  email_type_desc: 'email_type_desc',
  create_date: 'create_date',
  modify_date: 'modify_date'
};

exports.Prisma.Id_sequencesScalarFieldEnum = {
  name: 'name',
  next_block_start: 'next_block_start',
  block_size: 'block_size',
  exhausted: 'exhausted'
};

exports.Prisma.Invalid_handlesScalarFieldEnum = {
  invalid_handle_id: 'invalid_handle_id',
  invalid_handle: 'invalid_handle'
};

exports.Prisma.Security_groupsScalarFieldEnum = {
  group_id: 'group_id',
  description: 'description',
  challenge_group_ind: 'challenge_group_ind',
  create_user_id: 'create_user_id'
};

exports.Prisma.Security_status_luScalarFieldEnum = {
  security_status_id: 'security_status_id',
  status_desc: 'status_desc'
};

exports.Prisma.Security_userScalarFieldEnum = {
  login_id: 'login_id',
  user_id: 'user_id',
  password: 'password',
  create_user_id: 'create_user_id',
  modify_date: 'modify_date'
};

exports.Prisma.Social_login_providerScalarFieldEnum = {
  social_login_provider_id: 'social_login_provider_id',
  name: 'name'
};

exports.Prisma.Sso_login_providerScalarFieldEnum = {
  sso_login_provider_id: 'sso_login_provider_id',
  name: 'name',
  type: 'type',
  identify_email_enabled: 'identify_email_enabled',
  identify_handle_enabled: 'identify_handle_enabled'
};

exports.Prisma.UserScalarFieldEnum = {
  user_id: 'user_id',
  first_name: 'first_name',
  last_name: 'last_name',
  create_date: 'create_date',
  modify_date: 'modify_date',
  handle: 'handle',
  last_login: 'last_login',
  status: 'status',
  activation_code: 'activation_code',
  middle_name: 'middle_name',
  handle_lower: 'handle_lower',
  timezone_id: 'timezone_id',
  last_site_hit_date: 'last_site_hit_date',
  name_in_another_language: 'name_in_another_language',
  password: 'password',
  open_id: 'open_id',
  reg_source: 'reg_source',
  utm_source: 'utm_source',
  utm_medium: 'utm_medium',
  utm_campaign: 'utm_campaign'
};

exports.Prisma.User_2faScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  mfa_enabled: 'mfa_enabled',
  dice_enabled: 'dice_enabled',
  created_by: 'created_by',
  created_at: 'created_at',
  modified_by: 'modified_by',
  modified_at: 'modified_at'
};

exports.Prisma.User_achievementScalarFieldEnum = {
  user_id: 'user_id',
  achievement_date: 'achievement_date',
  achievement_type_id: 'achievement_type_id',
  description: 'description',
  create_date: 'create_date'
};

exports.Prisma.User_group_xrefScalarFieldEnum = {
  user_group_id: 'user_group_id',
  login_id: 'login_id',
  group_id: 'group_id',
  create_user_id: 'create_user_id',
  security_status_id: 'security_status_id',
  create_date: 'create_date'
};

exports.Prisma.User_otp_emailScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  mode: 'mode',
  otp: 'otp',
  expire_at: 'expire_at',
  resend: 'resend',
  fail_count: 'fail_count'
};

exports.Prisma.User_social_loginScalarFieldEnum = {
  social_user_id: 'social_user_id',
  user_id: 'user_id',
  social_login_provider_id: 'social_login_provider_id',
  social_user_name: 'social_user_name',
  social_email: 'social_email',
  social_email_verified: 'social_email_verified',
  create_date: 'create_date',
  modify_date: 'modify_date'
};

exports.Prisma.User_sso_loginScalarFieldEnum = {
  user_id: 'user_id',
  sso_user_id: 'sso_user_id',
  sso_user_name: 'sso_user_name',
  provider_id: 'provider_id',
  email: 'email'
};

exports.Prisma.User_statusScalarFieldEnum = {
  user_id: 'user_id',
  user_status_type_id: 'user_status_type_id',
  user_status_id: 'user_status_id'
};

exports.Prisma.User_status_luScalarFieldEnum = {
  user_status_id: 'user_status_id',
  description: 'description'
};

exports.Prisma.User_status_type_luScalarFieldEnum = {
  user_status_type_id: 'user_status_type_id',
  description: 'description'
};

exports.Prisma.User_email_xrefScalarFieldEnum = {
  user_id: 'user_id',
  email_id: 'email_id',
  is_primary: 'is_primary',
  status_id: 'status_id',
  create_date: 'create_date',
  modify_date: 'modify_date'
};

exports.Prisma.ClientScalarFieldEnum = {
  id: 'id',
  clientId: 'clientId',
  name: 'name',
  redirectUri: 'redirectUri',
  secret: 'secret',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  modifiedBy: 'modifiedBy',
  modifiedAt: 'modifiedAt'
};

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  modifiedBy: 'modifiedBy',
  modifiedAt: 'modifiedAt'
};

exports.Prisma.RoleAssignmentScalarFieldEnum = {
  id: 'id',
  roleId: 'roleId',
  subjectId: 'subjectId',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  modifiedBy: 'modifiedBy',
  modifiedAt: 'modifiedAt',
  subjectType: 'subjectType'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  achievement_type_lu: 'achievement_type_lu',
  country: 'country',
  dice_connection: 'dice_connection',
  email: 'email',
  email_status_lu: 'email_status_lu',
  email_type_lu: 'email_type_lu',
  id_sequences: 'id_sequences',
  invalid_handles: 'invalid_handles',
  security_groups: 'security_groups',
  security_status_lu: 'security_status_lu',
  security_user: 'security_user',
  social_login_provider: 'social_login_provider',
  sso_login_provider: 'sso_login_provider',
  user: 'user',
  user_2fa: 'user_2fa',
  user_achievement: 'user_achievement',
  user_group_xref: 'user_group_xref',
  user_otp_email: 'user_otp_email',
  user_social_login: 'user_social_login',
  user_sso_login: 'user_sso_login',
  user_status: 'user_status',
  user_status_lu: 'user_status_lu',
  user_status_type_lu: 'user_status_type_lu',
  user_email_xref: 'user_email_xref',
  Client: 'Client',
  Role: 'Role',
  RoleAssignment: 'RoleAssignment'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
