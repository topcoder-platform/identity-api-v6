
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model achievement_type_lu
 * 
 */
export type achievement_type_lu = $Result.DefaultSelection<Prisma.$achievement_type_luPayload>
/**
 * Model country
 * 
 */
export type country = $Result.DefaultSelection<Prisma.$countryPayload>
/**
 * Model dice_connection
 * 
 */
export type dice_connection = $Result.DefaultSelection<Prisma.$dice_connectionPayload>
/**
 * Model email
 * 
 */
export type email = $Result.DefaultSelection<Prisma.$emailPayload>
/**
 * Model email_status_lu
 * 
 */
export type email_status_lu = $Result.DefaultSelection<Prisma.$email_status_luPayload>
/**
 * Model email_type_lu
 * 
 */
export type email_type_lu = $Result.DefaultSelection<Prisma.$email_type_luPayload>
/**
 * Model id_sequences
 * 
 */
export type id_sequences = $Result.DefaultSelection<Prisma.$id_sequencesPayload>
/**
 * Model invalid_handles
 * 
 */
export type invalid_handles = $Result.DefaultSelection<Prisma.$invalid_handlesPayload>
/**
 * Model security_groups
 * 
 */
export type security_groups = $Result.DefaultSelection<Prisma.$security_groupsPayload>
/**
 * Model security_status_lu
 * 
 */
export type security_status_lu = $Result.DefaultSelection<Prisma.$security_status_luPayload>
/**
 * Model security_user
 * 
 */
export type security_user = $Result.DefaultSelection<Prisma.$security_userPayload>
/**
 * Model social_login_provider
 * 
 */
export type social_login_provider = $Result.DefaultSelection<Prisma.$social_login_providerPayload>
/**
 * Model sso_login_provider
 * 
 */
export type sso_login_provider = $Result.DefaultSelection<Prisma.$sso_login_providerPayload>
/**
 * Model user
 * 
 */
export type user = $Result.DefaultSelection<Prisma.$userPayload>
/**
 * Model user_2fa
 * 
 */
export type user_2fa = $Result.DefaultSelection<Prisma.$user_2faPayload>
/**
 * Model user_achievement
 * The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 */
export type user_achievement = $Result.DefaultSelection<Prisma.$user_achievementPayload>
/**
 * Model user_group_xref
 * 
 */
export type user_group_xref = $Result.DefaultSelection<Prisma.$user_group_xrefPayload>
/**
 * Model user_otp_email
 * 
 */
export type user_otp_email = $Result.DefaultSelection<Prisma.$user_otp_emailPayload>
/**
 * Model user_social_login
 * 
 */
export type user_social_login = $Result.DefaultSelection<Prisma.$user_social_loginPayload>
/**
 * Model user_sso_login
 * 
 */
export type user_sso_login = $Result.DefaultSelection<Prisma.$user_sso_loginPayload>
/**
 * Model user_status
 * 
 */
export type user_status = $Result.DefaultSelection<Prisma.$user_statusPayload>
/**
 * Model user_status_lu
 * 
 */
export type user_status_lu = $Result.DefaultSelection<Prisma.$user_status_luPayload>
/**
 * Model user_status_type_lu
 * 
 */
export type user_status_type_lu = $Result.DefaultSelection<Prisma.$user_status_type_luPayload>
/**
 * Model user_email_xref
 * 
 */
export type user_email_xref = $Result.DefaultSelection<Prisma.$user_email_xrefPayload>
/**
 * Model Client
 * 
 */
export type Client = $Result.DefaultSelection<Prisma.$ClientPayload>
/**
 * Model Role
 * 
 */
export type Role = $Result.DefaultSelection<Prisma.$RolePayload>
/**
 * Model RoleAssignment
 * 
 */
export type RoleAssignment = $Result.DefaultSelection<Prisma.$RoleAssignmentPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Achievement_type_lus
 * const achievement_type_lus = await prisma.achievement_type_lu.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Achievement_type_lus
   * const achievement_type_lus = await prisma.achievement_type_lu.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.achievement_type_lu`: Exposes CRUD operations for the **achievement_type_lu** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Achievement_type_lus
    * const achievement_type_lus = await prisma.achievement_type_lu.findMany()
    * ```
    */
  get achievement_type_lu(): Prisma.achievement_type_luDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.country`: Exposes CRUD operations for the **country** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Countries
    * const countries = await prisma.country.findMany()
    * ```
    */
  get country(): Prisma.countryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.dice_connection`: Exposes CRUD operations for the **dice_connection** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Dice_connections
    * const dice_connections = await prisma.dice_connection.findMany()
    * ```
    */
  get dice_connection(): Prisma.dice_connectionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.email`: Exposes CRUD operations for the **email** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Emails
    * const emails = await prisma.email.findMany()
    * ```
    */
  get email(): Prisma.emailDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.email_status_lu`: Exposes CRUD operations for the **email_status_lu** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Email_status_lus
    * const email_status_lus = await prisma.email_status_lu.findMany()
    * ```
    */
  get email_status_lu(): Prisma.email_status_luDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.email_type_lu`: Exposes CRUD operations for the **email_type_lu** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Email_type_lus
    * const email_type_lus = await prisma.email_type_lu.findMany()
    * ```
    */
  get email_type_lu(): Prisma.email_type_luDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.id_sequences`: Exposes CRUD operations for the **id_sequences** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Id_sequences
    * const id_sequences = await prisma.id_sequences.findMany()
    * ```
    */
  get id_sequences(): Prisma.id_sequencesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.invalid_handles`: Exposes CRUD operations for the **invalid_handles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Invalid_handles
    * const invalid_handles = await prisma.invalid_handles.findMany()
    * ```
    */
  get invalid_handles(): Prisma.invalid_handlesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.security_groups`: Exposes CRUD operations for the **security_groups** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Security_groups
    * const security_groups = await prisma.security_groups.findMany()
    * ```
    */
  get security_groups(): Prisma.security_groupsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.security_status_lu`: Exposes CRUD operations for the **security_status_lu** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Security_status_lus
    * const security_status_lus = await prisma.security_status_lu.findMany()
    * ```
    */
  get security_status_lu(): Prisma.security_status_luDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.security_user`: Exposes CRUD operations for the **security_user** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Security_users
    * const security_users = await prisma.security_user.findMany()
    * ```
    */
  get security_user(): Prisma.security_userDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.social_login_provider`: Exposes CRUD operations for the **social_login_provider** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Social_login_providers
    * const social_login_providers = await prisma.social_login_provider.findMany()
    * ```
    */
  get social_login_provider(): Prisma.social_login_providerDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sso_login_provider`: Exposes CRUD operations for the **sso_login_provider** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sso_login_providers
    * const sso_login_providers = await prisma.sso_login_provider.findMany()
    * ```
    */
  get sso_login_provider(): Prisma.sso_login_providerDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **user** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.userDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_2fa`: Exposes CRUD operations for the **user_2fa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_2fas
    * const user_2fas = await prisma.user_2fa.findMany()
    * ```
    */
  get user_2fa(): Prisma.user_2faDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_achievement`: Exposes CRUD operations for the **user_achievement** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_achievements
    * const user_achievements = await prisma.user_achievement.findMany()
    * ```
    */
  get user_achievement(): Prisma.user_achievementDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_group_xref`: Exposes CRUD operations for the **user_group_xref** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_group_xrefs
    * const user_group_xrefs = await prisma.user_group_xref.findMany()
    * ```
    */
  get user_group_xref(): Prisma.user_group_xrefDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_otp_email`: Exposes CRUD operations for the **user_otp_email** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_otp_emails
    * const user_otp_emails = await prisma.user_otp_email.findMany()
    * ```
    */
  get user_otp_email(): Prisma.user_otp_emailDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_social_login`: Exposes CRUD operations for the **user_social_login** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_social_logins
    * const user_social_logins = await prisma.user_social_login.findMany()
    * ```
    */
  get user_social_login(): Prisma.user_social_loginDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_sso_login`: Exposes CRUD operations for the **user_sso_login** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_sso_logins
    * const user_sso_logins = await prisma.user_sso_login.findMany()
    * ```
    */
  get user_sso_login(): Prisma.user_sso_loginDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_status`: Exposes CRUD operations for the **user_status** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_statuses
    * const user_statuses = await prisma.user_status.findMany()
    * ```
    */
  get user_status(): Prisma.user_statusDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_status_lu`: Exposes CRUD operations for the **user_status_lu** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_status_lus
    * const user_status_lus = await prisma.user_status_lu.findMany()
    * ```
    */
  get user_status_lu(): Prisma.user_status_luDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_status_type_lu`: Exposes CRUD operations for the **user_status_type_lu** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_status_type_lus
    * const user_status_type_lus = await prisma.user_status_type_lu.findMany()
    * ```
    */
  get user_status_type_lu(): Prisma.user_status_type_luDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_email_xref`: Exposes CRUD operations for the **user_email_xref** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_email_xrefs
    * const user_email_xrefs = await prisma.user_email_xref.findMany()
    * ```
    */
  get user_email_xref(): Prisma.user_email_xrefDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.client`: Exposes CRUD operations for the **Client** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clients
    * const clients = await prisma.client.findMany()
    * ```
    */
  get client(): Prisma.ClientDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.role`: Exposes CRUD operations for the **Role** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.role.findMany()
    * ```
    */
  get role(): Prisma.RoleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.roleAssignment`: Exposes CRUD operations for the **RoleAssignment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RoleAssignments
    * const roleAssignments = await prisma.roleAssignment.findMany()
    * ```
    */
  get roleAssignment(): Prisma.RoleAssignmentDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.14.0
   * Query Engine version: 717184b7b35ea05dfa71a3236b7af656013e1e49
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    achievement_type_lu: 'achievement_type_lu',
    country: 'country',
    dice_connection: 'dice_connection',
    email: 'email',
    email_status_lu: 'email_status_lu',
    email_type_lu: 'email_type_lu',
    id_sequences: 'id_sequences',
    invalid_handles: 'invalid_handles',
    security_groups: 'security_groups',
    security_status_lu: 'security_status_lu',
    security_user: 'security_user',
    social_login_provider: 'social_login_provider',
    sso_login_provider: 'sso_login_provider',
    user: 'user',
    user_2fa: 'user_2fa',
    user_achievement: 'user_achievement',
    user_group_xref: 'user_group_xref',
    user_otp_email: 'user_otp_email',
    user_social_login: 'user_social_login',
    user_sso_login: 'user_sso_login',
    user_status: 'user_status',
    user_status_lu: 'user_status_lu',
    user_status_type_lu: 'user_status_type_lu',
    user_email_xref: 'user_email_xref',
    Client: 'Client',
    Role: 'Role',
    RoleAssignment: 'RoleAssignment'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "achievement_type_lu" | "country" | "dice_connection" | "email" | "email_status_lu" | "email_type_lu" | "id_sequences" | "invalid_handles" | "security_groups" | "security_status_lu" | "security_user" | "social_login_provider" | "sso_login_provider" | "user" | "user_2fa" | "user_achievement" | "user_group_xref" | "user_otp_email" | "user_social_login" | "user_sso_login" | "user_status" | "user_status_lu" | "user_status_type_lu" | "user_email_xref" | "client" | "role" | "roleAssignment"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      achievement_type_lu: {
        payload: Prisma.$achievement_type_luPayload<ExtArgs>
        fields: Prisma.achievement_type_luFieldRefs
        operations: {
          findUnique: {
            args: Prisma.achievement_type_luFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$achievement_type_luPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.achievement_type_luFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$achievement_type_luPayload>
          }
          findFirst: {
            args: Prisma.achievement_type_luFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$achievement_type_luPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.achievement_type_luFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$achievement_type_luPayload>
          }
          findMany: {
            args: Prisma.achievement_type_luFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$achievement_type_luPayload>[]
          }
          create: {
            args: Prisma.achievement_type_luCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$achievement_type_luPayload>
          }
          createMany: {
            args: Prisma.achievement_type_luCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.achievement_type_luCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$achievement_type_luPayload>[]
          }
          delete: {
            args: Prisma.achievement_type_luDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$achievement_type_luPayload>
          }
          update: {
            args: Prisma.achievement_type_luUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$achievement_type_luPayload>
          }
          deleteMany: {
            args: Prisma.achievement_type_luDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.achievement_type_luUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.achievement_type_luUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$achievement_type_luPayload>[]
          }
          upsert: {
            args: Prisma.achievement_type_luUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$achievement_type_luPayload>
          }
          aggregate: {
            args: Prisma.Achievement_type_luAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAchievement_type_lu>
          }
          groupBy: {
            args: Prisma.achievement_type_luGroupByArgs<ExtArgs>
            result: $Utils.Optional<Achievement_type_luGroupByOutputType>[]
          }
          count: {
            args: Prisma.achievement_type_luCountArgs<ExtArgs>
            result: $Utils.Optional<Achievement_type_luCountAggregateOutputType> | number
          }
        }
      }
      country: {
        payload: Prisma.$countryPayload<ExtArgs>
        fields: Prisma.countryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.countryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$countryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.countryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$countryPayload>
          }
          findFirst: {
            args: Prisma.countryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$countryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.countryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$countryPayload>
          }
          findMany: {
            args: Prisma.countryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$countryPayload>[]
          }
          create: {
            args: Prisma.countryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$countryPayload>
          }
          createMany: {
            args: Prisma.countryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.countryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$countryPayload>[]
          }
          delete: {
            args: Prisma.countryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$countryPayload>
          }
          update: {
            args: Prisma.countryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$countryPayload>
          }
          deleteMany: {
            args: Prisma.countryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.countryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.countryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$countryPayload>[]
          }
          upsert: {
            args: Prisma.countryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$countryPayload>
          }
          aggregate: {
            args: Prisma.CountryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCountry>
          }
          groupBy: {
            args: Prisma.countryGroupByArgs<ExtArgs>
            result: $Utils.Optional<CountryGroupByOutputType>[]
          }
          count: {
            args: Prisma.countryCountArgs<ExtArgs>
            result: $Utils.Optional<CountryCountAggregateOutputType> | number
          }
        }
      }
      dice_connection: {
        payload: Prisma.$dice_connectionPayload<ExtArgs>
        fields: Prisma.dice_connectionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.dice_connectionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dice_connectionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.dice_connectionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dice_connectionPayload>
          }
          findFirst: {
            args: Prisma.dice_connectionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dice_connectionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.dice_connectionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dice_connectionPayload>
          }
          findMany: {
            args: Prisma.dice_connectionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dice_connectionPayload>[]
          }
          create: {
            args: Prisma.dice_connectionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dice_connectionPayload>
          }
          createMany: {
            args: Prisma.dice_connectionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.dice_connectionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dice_connectionPayload>[]
          }
          delete: {
            args: Prisma.dice_connectionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dice_connectionPayload>
          }
          update: {
            args: Prisma.dice_connectionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dice_connectionPayload>
          }
          deleteMany: {
            args: Prisma.dice_connectionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.dice_connectionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.dice_connectionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dice_connectionPayload>[]
          }
          upsert: {
            args: Prisma.dice_connectionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dice_connectionPayload>
          }
          aggregate: {
            args: Prisma.Dice_connectionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDice_connection>
          }
          groupBy: {
            args: Prisma.dice_connectionGroupByArgs<ExtArgs>
            result: $Utils.Optional<Dice_connectionGroupByOutputType>[]
          }
          count: {
            args: Prisma.dice_connectionCountArgs<ExtArgs>
            result: $Utils.Optional<Dice_connectionCountAggregateOutputType> | number
          }
        }
      }
      email: {
        payload: Prisma.$emailPayload<ExtArgs>
        fields: Prisma.emailFieldRefs
        operations: {
          findUnique: {
            args: Prisma.emailFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.emailFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailPayload>
          }
          findFirst: {
            args: Prisma.emailFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.emailFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailPayload>
          }
          findMany: {
            args: Prisma.emailFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailPayload>[]
          }
          create: {
            args: Prisma.emailCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailPayload>
          }
          createMany: {
            args: Prisma.emailCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.emailCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailPayload>[]
          }
          delete: {
            args: Prisma.emailDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailPayload>
          }
          update: {
            args: Prisma.emailUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailPayload>
          }
          deleteMany: {
            args: Prisma.emailDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.emailUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.emailUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailPayload>[]
          }
          upsert: {
            args: Prisma.emailUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailPayload>
          }
          aggregate: {
            args: Prisma.EmailAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmail>
          }
          groupBy: {
            args: Prisma.emailGroupByArgs<ExtArgs>
            result: $Utils.Optional<EmailGroupByOutputType>[]
          }
          count: {
            args: Prisma.emailCountArgs<ExtArgs>
            result: $Utils.Optional<EmailCountAggregateOutputType> | number
          }
        }
      }
      email_status_lu: {
        payload: Prisma.$email_status_luPayload<ExtArgs>
        fields: Prisma.email_status_luFieldRefs
        operations: {
          findUnique: {
            args: Prisma.email_status_luFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_status_luPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.email_status_luFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_status_luPayload>
          }
          findFirst: {
            args: Prisma.email_status_luFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_status_luPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.email_status_luFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_status_luPayload>
          }
          findMany: {
            args: Prisma.email_status_luFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_status_luPayload>[]
          }
          create: {
            args: Prisma.email_status_luCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_status_luPayload>
          }
          createMany: {
            args: Prisma.email_status_luCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.email_status_luCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_status_luPayload>[]
          }
          delete: {
            args: Prisma.email_status_luDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_status_luPayload>
          }
          update: {
            args: Prisma.email_status_luUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_status_luPayload>
          }
          deleteMany: {
            args: Prisma.email_status_luDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.email_status_luUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.email_status_luUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_status_luPayload>[]
          }
          upsert: {
            args: Prisma.email_status_luUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_status_luPayload>
          }
          aggregate: {
            args: Prisma.Email_status_luAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmail_status_lu>
          }
          groupBy: {
            args: Prisma.email_status_luGroupByArgs<ExtArgs>
            result: $Utils.Optional<Email_status_luGroupByOutputType>[]
          }
          count: {
            args: Prisma.email_status_luCountArgs<ExtArgs>
            result: $Utils.Optional<Email_status_luCountAggregateOutputType> | number
          }
        }
      }
      email_type_lu: {
        payload: Prisma.$email_type_luPayload<ExtArgs>
        fields: Prisma.email_type_luFieldRefs
        operations: {
          findUnique: {
            args: Prisma.email_type_luFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_type_luPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.email_type_luFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_type_luPayload>
          }
          findFirst: {
            args: Prisma.email_type_luFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_type_luPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.email_type_luFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_type_luPayload>
          }
          findMany: {
            args: Prisma.email_type_luFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_type_luPayload>[]
          }
          create: {
            args: Prisma.email_type_luCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_type_luPayload>
          }
          createMany: {
            args: Prisma.email_type_luCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.email_type_luCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_type_luPayload>[]
          }
          delete: {
            args: Prisma.email_type_luDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_type_luPayload>
          }
          update: {
            args: Prisma.email_type_luUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_type_luPayload>
          }
          deleteMany: {
            args: Prisma.email_type_luDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.email_type_luUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.email_type_luUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_type_luPayload>[]
          }
          upsert: {
            args: Prisma.email_type_luUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_type_luPayload>
          }
          aggregate: {
            args: Prisma.Email_type_luAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmail_type_lu>
          }
          groupBy: {
            args: Prisma.email_type_luGroupByArgs<ExtArgs>
            result: $Utils.Optional<Email_type_luGroupByOutputType>[]
          }
          count: {
            args: Prisma.email_type_luCountArgs<ExtArgs>
            result: $Utils.Optional<Email_type_luCountAggregateOutputType> | number
          }
        }
      }
      id_sequences: {
        payload: Prisma.$id_sequencesPayload<ExtArgs>
        fields: Prisma.id_sequencesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.id_sequencesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$id_sequencesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.id_sequencesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$id_sequencesPayload>
          }
          findFirst: {
            args: Prisma.id_sequencesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$id_sequencesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.id_sequencesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$id_sequencesPayload>
          }
          findMany: {
            args: Prisma.id_sequencesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$id_sequencesPayload>[]
          }
          create: {
            args: Prisma.id_sequencesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$id_sequencesPayload>
          }
          createMany: {
            args: Prisma.id_sequencesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.id_sequencesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$id_sequencesPayload>[]
          }
          delete: {
            args: Prisma.id_sequencesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$id_sequencesPayload>
          }
          update: {
            args: Prisma.id_sequencesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$id_sequencesPayload>
          }
          deleteMany: {
            args: Prisma.id_sequencesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.id_sequencesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.id_sequencesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$id_sequencesPayload>[]
          }
          upsert: {
            args: Prisma.id_sequencesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$id_sequencesPayload>
          }
          aggregate: {
            args: Prisma.Id_sequencesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateId_sequences>
          }
          groupBy: {
            args: Prisma.id_sequencesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Id_sequencesGroupByOutputType>[]
          }
          count: {
            args: Prisma.id_sequencesCountArgs<ExtArgs>
            result: $Utils.Optional<Id_sequencesCountAggregateOutputType> | number
          }
        }
      }
      invalid_handles: {
        payload: Prisma.$invalid_handlesPayload<ExtArgs>
        fields: Prisma.invalid_handlesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.invalid_handlesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invalid_handlesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.invalid_handlesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invalid_handlesPayload>
          }
          findFirst: {
            args: Prisma.invalid_handlesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invalid_handlesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.invalid_handlesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invalid_handlesPayload>
          }
          findMany: {
            args: Prisma.invalid_handlesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invalid_handlesPayload>[]
          }
          create: {
            args: Prisma.invalid_handlesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invalid_handlesPayload>
          }
          createMany: {
            args: Prisma.invalid_handlesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.invalid_handlesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invalid_handlesPayload>[]
          }
          delete: {
            args: Prisma.invalid_handlesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invalid_handlesPayload>
          }
          update: {
            args: Prisma.invalid_handlesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invalid_handlesPayload>
          }
          deleteMany: {
            args: Prisma.invalid_handlesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.invalid_handlesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.invalid_handlesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invalid_handlesPayload>[]
          }
          upsert: {
            args: Prisma.invalid_handlesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invalid_handlesPayload>
          }
          aggregate: {
            args: Prisma.Invalid_handlesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInvalid_handles>
          }
          groupBy: {
            args: Prisma.invalid_handlesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Invalid_handlesGroupByOutputType>[]
          }
          count: {
            args: Prisma.invalid_handlesCountArgs<ExtArgs>
            result: $Utils.Optional<Invalid_handlesCountAggregateOutputType> | number
          }
        }
      }
      security_groups: {
        payload: Prisma.$security_groupsPayload<ExtArgs>
        fields: Prisma.security_groupsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.security_groupsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_groupsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.security_groupsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_groupsPayload>
          }
          findFirst: {
            args: Prisma.security_groupsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_groupsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.security_groupsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_groupsPayload>
          }
          findMany: {
            args: Prisma.security_groupsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_groupsPayload>[]
          }
          create: {
            args: Prisma.security_groupsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_groupsPayload>
          }
          createMany: {
            args: Prisma.security_groupsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.security_groupsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_groupsPayload>[]
          }
          delete: {
            args: Prisma.security_groupsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_groupsPayload>
          }
          update: {
            args: Prisma.security_groupsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_groupsPayload>
          }
          deleteMany: {
            args: Prisma.security_groupsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.security_groupsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.security_groupsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_groupsPayload>[]
          }
          upsert: {
            args: Prisma.security_groupsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_groupsPayload>
          }
          aggregate: {
            args: Prisma.Security_groupsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSecurity_groups>
          }
          groupBy: {
            args: Prisma.security_groupsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Security_groupsGroupByOutputType>[]
          }
          count: {
            args: Prisma.security_groupsCountArgs<ExtArgs>
            result: $Utils.Optional<Security_groupsCountAggregateOutputType> | number
          }
        }
      }
      security_status_lu: {
        payload: Prisma.$security_status_luPayload<ExtArgs>
        fields: Prisma.security_status_luFieldRefs
        operations: {
          findUnique: {
            args: Prisma.security_status_luFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_status_luPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.security_status_luFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_status_luPayload>
          }
          findFirst: {
            args: Prisma.security_status_luFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_status_luPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.security_status_luFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_status_luPayload>
          }
          findMany: {
            args: Prisma.security_status_luFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_status_luPayload>[]
          }
          create: {
            args: Prisma.security_status_luCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_status_luPayload>
          }
          createMany: {
            args: Prisma.security_status_luCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.security_status_luCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_status_luPayload>[]
          }
          delete: {
            args: Prisma.security_status_luDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_status_luPayload>
          }
          update: {
            args: Prisma.security_status_luUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_status_luPayload>
          }
          deleteMany: {
            args: Prisma.security_status_luDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.security_status_luUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.security_status_luUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_status_luPayload>[]
          }
          upsert: {
            args: Prisma.security_status_luUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_status_luPayload>
          }
          aggregate: {
            args: Prisma.Security_status_luAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSecurity_status_lu>
          }
          groupBy: {
            args: Prisma.security_status_luGroupByArgs<ExtArgs>
            result: $Utils.Optional<Security_status_luGroupByOutputType>[]
          }
          count: {
            args: Prisma.security_status_luCountArgs<ExtArgs>
            result: $Utils.Optional<Security_status_luCountAggregateOutputType> | number
          }
        }
      }
      security_user: {
        payload: Prisma.$security_userPayload<ExtArgs>
        fields: Prisma.security_userFieldRefs
        operations: {
          findUnique: {
            args: Prisma.security_userFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_userPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.security_userFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_userPayload>
          }
          findFirst: {
            args: Prisma.security_userFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_userPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.security_userFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_userPayload>
          }
          findMany: {
            args: Prisma.security_userFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_userPayload>[]
          }
          create: {
            args: Prisma.security_userCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_userPayload>
          }
          createMany: {
            args: Prisma.security_userCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.security_userCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_userPayload>[]
          }
          delete: {
            args: Prisma.security_userDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_userPayload>
          }
          update: {
            args: Prisma.security_userUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_userPayload>
          }
          deleteMany: {
            args: Prisma.security_userDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.security_userUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.security_userUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_userPayload>[]
          }
          upsert: {
            args: Prisma.security_userUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$security_userPayload>
          }
          aggregate: {
            args: Prisma.Security_userAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSecurity_user>
          }
          groupBy: {
            args: Prisma.security_userGroupByArgs<ExtArgs>
            result: $Utils.Optional<Security_userGroupByOutputType>[]
          }
          count: {
            args: Prisma.security_userCountArgs<ExtArgs>
            result: $Utils.Optional<Security_userCountAggregateOutputType> | number
          }
        }
      }
      social_login_provider: {
        payload: Prisma.$social_login_providerPayload<ExtArgs>
        fields: Prisma.social_login_providerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.social_login_providerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$social_login_providerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.social_login_providerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$social_login_providerPayload>
          }
          findFirst: {
            args: Prisma.social_login_providerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$social_login_providerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.social_login_providerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$social_login_providerPayload>
          }
          findMany: {
            args: Prisma.social_login_providerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$social_login_providerPayload>[]
          }
          create: {
            args: Prisma.social_login_providerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$social_login_providerPayload>
          }
          createMany: {
            args: Prisma.social_login_providerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.social_login_providerCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$social_login_providerPayload>[]
          }
          delete: {
            args: Prisma.social_login_providerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$social_login_providerPayload>
          }
          update: {
            args: Prisma.social_login_providerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$social_login_providerPayload>
          }
          deleteMany: {
            args: Prisma.social_login_providerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.social_login_providerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.social_login_providerUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$social_login_providerPayload>[]
          }
          upsert: {
            args: Prisma.social_login_providerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$social_login_providerPayload>
          }
          aggregate: {
            args: Prisma.Social_login_providerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSocial_login_provider>
          }
          groupBy: {
            args: Prisma.social_login_providerGroupByArgs<ExtArgs>
            result: $Utils.Optional<Social_login_providerGroupByOutputType>[]
          }
          count: {
            args: Prisma.social_login_providerCountArgs<ExtArgs>
            result: $Utils.Optional<Social_login_providerCountAggregateOutputType> | number
          }
        }
      }
      sso_login_provider: {
        payload: Prisma.$sso_login_providerPayload<ExtArgs>
        fields: Prisma.sso_login_providerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sso_login_providerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_login_providerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sso_login_providerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_login_providerPayload>
          }
          findFirst: {
            args: Prisma.sso_login_providerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_login_providerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sso_login_providerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_login_providerPayload>
          }
          findMany: {
            args: Prisma.sso_login_providerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_login_providerPayload>[]
          }
          create: {
            args: Prisma.sso_login_providerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_login_providerPayload>
          }
          createMany: {
            args: Prisma.sso_login_providerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.sso_login_providerCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_login_providerPayload>[]
          }
          delete: {
            args: Prisma.sso_login_providerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_login_providerPayload>
          }
          update: {
            args: Prisma.sso_login_providerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_login_providerPayload>
          }
          deleteMany: {
            args: Prisma.sso_login_providerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sso_login_providerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.sso_login_providerUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_login_providerPayload>[]
          }
          upsert: {
            args: Prisma.sso_login_providerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_login_providerPayload>
          }
          aggregate: {
            args: Prisma.Sso_login_providerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSso_login_provider>
          }
          groupBy: {
            args: Prisma.sso_login_providerGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sso_login_providerGroupByOutputType>[]
          }
          count: {
            args: Prisma.sso_login_providerCountArgs<ExtArgs>
            result: $Utils.Optional<Sso_login_providerCountAggregateOutputType> | number
          }
        }
      }
      user: {
        payload: Prisma.$userPayload<ExtArgs>
        fields: Prisma.userFieldRefs
        operations: {
          findUnique: {
            args: Prisma.userFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.userFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          findFirst: {
            args: Prisma.userFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.userFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          findMany: {
            args: Prisma.userFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>[]
          }
          create: {
            args: Prisma.userCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          createMany: {
            args: Prisma.userCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.userCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>[]
          }
          delete: {
            args: Prisma.userDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          update: {
            args: Prisma.userUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          deleteMany: {
            args: Prisma.userDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.userUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.userUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>[]
          }
          upsert: {
            args: Prisma.userUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.userGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.userCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      user_2fa: {
        payload: Prisma.$user_2faPayload<ExtArgs>
        fields: Prisma.user_2faFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_2faFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_2faPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_2faFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_2faPayload>
          }
          findFirst: {
            args: Prisma.user_2faFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_2faPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_2faFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_2faPayload>
          }
          findMany: {
            args: Prisma.user_2faFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_2faPayload>[]
          }
          create: {
            args: Prisma.user_2faCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_2faPayload>
          }
          createMany: {
            args: Prisma.user_2faCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_2faCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_2faPayload>[]
          }
          delete: {
            args: Prisma.user_2faDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_2faPayload>
          }
          update: {
            args: Prisma.user_2faUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_2faPayload>
          }
          deleteMany: {
            args: Prisma.user_2faDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_2faUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_2faUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_2faPayload>[]
          }
          upsert: {
            args: Prisma.user_2faUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_2faPayload>
          }
          aggregate: {
            args: Prisma.User_2faAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_2fa>
          }
          groupBy: {
            args: Prisma.user_2faGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_2faGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_2faCountArgs<ExtArgs>
            result: $Utils.Optional<User_2faCountAggregateOutputType> | number
          }
        }
      }
      user_achievement: {
        payload: Prisma.$user_achievementPayload<ExtArgs>
        fields: Prisma.user_achievementFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_achievementFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_achievementPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_achievementFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_achievementPayload>
          }
          findFirst: {
            args: Prisma.user_achievementFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_achievementPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_achievementFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_achievementPayload>
          }
          findMany: {
            args: Prisma.user_achievementFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_achievementPayload>[]
          }
          create: {
            args: Prisma.user_achievementCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_achievementPayload>
          }
          createMany: {
            args: Prisma.user_achievementCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_achievementCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_achievementPayload>[]
          }
          delete: {
            args: Prisma.user_achievementDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_achievementPayload>
          }
          update: {
            args: Prisma.user_achievementUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_achievementPayload>
          }
          deleteMany: {
            args: Prisma.user_achievementDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_achievementUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_achievementUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_achievementPayload>[]
          }
          upsert: {
            args: Prisma.user_achievementUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_achievementPayload>
          }
          aggregate: {
            args: Prisma.User_achievementAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_achievement>
          }
          groupBy: {
            args: Prisma.user_achievementGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_achievementGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_achievementCountArgs<ExtArgs>
            result: $Utils.Optional<User_achievementCountAggregateOutputType> | number
          }
        }
      }
      user_group_xref: {
        payload: Prisma.$user_group_xrefPayload<ExtArgs>
        fields: Prisma.user_group_xrefFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_group_xrefFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_group_xrefPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_group_xrefFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_group_xrefPayload>
          }
          findFirst: {
            args: Prisma.user_group_xrefFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_group_xrefPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_group_xrefFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_group_xrefPayload>
          }
          findMany: {
            args: Prisma.user_group_xrefFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_group_xrefPayload>[]
          }
          create: {
            args: Prisma.user_group_xrefCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_group_xrefPayload>
          }
          createMany: {
            args: Prisma.user_group_xrefCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_group_xrefCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_group_xrefPayload>[]
          }
          delete: {
            args: Prisma.user_group_xrefDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_group_xrefPayload>
          }
          update: {
            args: Prisma.user_group_xrefUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_group_xrefPayload>
          }
          deleteMany: {
            args: Prisma.user_group_xrefDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_group_xrefUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_group_xrefUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_group_xrefPayload>[]
          }
          upsert: {
            args: Prisma.user_group_xrefUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_group_xrefPayload>
          }
          aggregate: {
            args: Prisma.User_group_xrefAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_group_xref>
          }
          groupBy: {
            args: Prisma.user_group_xrefGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_group_xrefGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_group_xrefCountArgs<ExtArgs>
            result: $Utils.Optional<User_group_xrefCountAggregateOutputType> | number
          }
        }
      }
      user_otp_email: {
        payload: Prisma.$user_otp_emailPayload<ExtArgs>
        fields: Prisma.user_otp_emailFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_otp_emailFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_otp_emailPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_otp_emailFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_otp_emailPayload>
          }
          findFirst: {
            args: Prisma.user_otp_emailFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_otp_emailPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_otp_emailFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_otp_emailPayload>
          }
          findMany: {
            args: Prisma.user_otp_emailFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_otp_emailPayload>[]
          }
          create: {
            args: Prisma.user_otp_emailCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_otp_emailPayload>
          }
          createMany: {
            args: Prisma.user_otp_emailCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_otp_emailCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_otp_emailPayload>[]
          }
          delete: {
            args: Prisma.user_otp_emailDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_otp_emailPayload>
          }
          update: {
            args: Prisma.user_otp_emailUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_otp_emailPayload>
          }
          deleteMany: {
            args: Prisma.user_otp_emailDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_otp_emailUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_otp_emailUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_otp_emailPayload>[]
          }
          upsert: {
            args: Prisma.user_otp_emailUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_otp_emailPayload>
          }
          aggregate: {
            args: Prisma.User_otp_emailAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_otp_email>
          }
          groupBy: {
            args: Prisma.user_otp_emailGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_otp_emailGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_otp_emailCountArgs<ExtArgs>
            result: $Utils.Optional<User_otp_emailCountAggregateOutputType> | number
          }
        }
      }
      user_social_login: {
        payload: Prisma.$user_social_loginPayload<ExtArgs>
        fields: Prisma.user_social_loginFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_social_loginFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_social_loginPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_social_loginFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_social_loginPayload>
          }
          findFirst: {
            args: Prisma.user_social_loginFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_social_loginPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_social_loginFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_social_loginPayload>
          }
          findMany: {
            args: Prisma.user_social_loginFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_social_loginPayload>[]
          }
          create: {
            args: Prisma.user_social_loginCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_social_loginPayload>
          }
          createMany: {
            args: Prisma.user_social_loginCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_social_loginCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_social_loginPayload>[]
          }
          delete: {
            args: Prisma.user_social_loginDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_social_loginPayload>
          }
          update: {
            args: Prisma.user_social_loginUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_social_loginPayload>
          }
          deleteMany: {
            args: Prisma.user_social_loginDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_social_loginUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_social_loginUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_social_loginPayload>[]
          }
          upsert: {
            args: Prisma.user_social_loginUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_social_loginPayload>
          }
          aggregate: {
            args: Prisma.User_social_loginAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_social_login>
          }
          groupBy: {
            args: Prisma.user_social_loginGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_social_loginGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_social_loginCountArgs<ExtArgs>
            result: $Utils.Optional<User_social_loginCountAggregateOutputType> | number
          }
        }
      }
      user_sso_login: {
        payload: Prisma.$user_sso_loginPayload<ExtArgs>
        fields: Prisma.user_sso_loginFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_sso_loginFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sso_loginPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_sso_loginFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sso_loginPayload>
          }
          findFirst: {
            args: Prisma.user_sso_loginFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sso_loginPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_sso_loginFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sso_loginPayload>
          }
          findMany: {
            args: Prisma.user_sso_loginFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sso_loginPayload>[]
          }
          create: {
            args: Prisma.user_sso_loginCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sso_loginPayload>
          }
          createMany: {
            args: Prisma.user_sso_loginCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_sso_loginCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sso_loginPayload>[]
          }
          delete: {
            args: Prisma.user_sso_loginDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sso_loginPayload>
          }
          update: {
            args: Prisma.user_sso_loginUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sso_loginPayload>
          }
          deleteMany: {
            args: Prisma.user_sso_loginDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_sso_loginUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_sso_loginUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sso_loginPayload>[]
          }
          upsert: {
            args: Prisma.user_sso_loginUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sso_loginPayload>
          }
          aggregate: {
            args: Prisma.User_sso_loginAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_sso_login>
          }
          groupBy: {
            args: Prisma.user_sso_loginGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_sso_loginGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_sso_loginCountArgs<ExtArgs>
            result: $Utils.Optional<User_sso_loginCountAggregateOutputType> | number
          }
        }
      }
      user_status: {
        payload: Prisma.$user_statusPayload<ExtArgs>
        fields: Prisma.user_statusFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_statusFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_statusPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_statusFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_statusPayload>
          }
          findFirst: {
            args: Prisma.user_statusFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_statusPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_statusFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_statusPayload>
          }
          findMany: {
            args: Prisma.user_statusFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_statusPayload>[]
          }
          create: {
            args: Prisma.user_statusCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_statusPayload>
          }
          createMany: {
            args: Prisma.user_statusCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_statusCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_statusPayload>[]
          }
          delete: {
            args: Prisma.user_statusDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_statusPayload>
          }
          update: {
            args: Prisma.user_statusUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_statusPayload>
          }
          deleteMany: {
            args: Prisma.user_statusDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_statusUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_statusUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_statusPayload>[]
          }
          upsert: {
            args: Prisma.user_statusUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_statusPayload>
          }
          aggregate: {
            args: Prisma.User_statusAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_status>
          }
          groupBy: {
            args: Prisma.user_statusGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_statusGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_statusCountArgs<ExtArgs>
            result: $Utils.Optional<User_statusCountAggregateOutputType> | number
          }
        }
      }
      user_status_lu: {
        payload: Prisma.$user_status_luPayload<ExtArgs>
        fields: Prisma.user_status_luFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_status_luFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_status_luPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_status_luFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_status_luPayload>
          }
          findFirst: {
            args: Prisma.user_status_luFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_status_luPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_status_luFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_status_luPayload>
          }
          findMany: {
            args: Prisma.user_status_luFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_status_luPayload>[]
          }
          create: {
            args: Prisma.user_status_luCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_status_luPayload>
          }
          createMany: {
            args: Prisma.user_status_luCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_status_luCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_status_luPayload>[]
          }
          delete: {
            args: Prisma.user_status_luDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_status_luPayload>
          }
          update: {
            args: Prisma.user_status_luUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_status_luPayload>
          }
          deleteMany: {
            args: Prisma.user_status_luDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_status_luUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_status_luUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_status_luPayload>[]
          }
          upsert: {
            args: Prisma.user_status_luUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_status_luPayload>
          }
          aggregate: {
            args: Prisma.User_status_luAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_status_lu>
          }
          groupBy: {
            args: Prisma.user_status_luGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_status_luGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_status_luCountArgs<ExtArgs>
            result: $Utils.Optional<User_status_luCountAggregateOutputType> | number
          }
        }
      }
      user_status_type_lu: {
        payload: Prisma.$user_status_type_luPayload<ExtArgs>
        fields: Prisma.user_status_type_luFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_status_type_luFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_status_type_luPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_status_type_luFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_status_type_luPayload>
          }
          findFirst: {
            args: Prisma.user_status_type_luFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_status_type_luPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_status_type_luFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_status_type_luPayload>
          }
          findMany: {
            args: Prisma.user_status_type_luFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_status_type_luPayload>[]
          }
          create: {
            args: Prisma.user_status_type_luCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_status_type_luPayload>
          }
          createMany: {
            args: Prisma.user_status_type_luCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_status_type_luCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_status_type_luPayload>[]
          }
          delete: {
            args: Prisma.user_status_type_luDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_status_type_luPayload>
          }
          update: {
            args: Prisma.user_status_type_luUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_status_type_luPayload>
          }
          deleteMany: {
            args: Prisma.user_status_type_luDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_status_type_luUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_status_type_luUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_status_type_luPayload>[]
          }
          upsert: {
            args: Prisma.user_status_type_luUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_status_type_luPayload>
          }
          aggregate: {
            args: Prisma.User_status_type_luAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_status_type_lu>
          }
          groupBy: {
            args: Prisma.user_status_type_luGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_status_type_luGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_status_type_luCountArgs<ExtArgs>
            result: $Utils.Optional<User_status_type_luCountAggregateOutputType> | number
          }
        }
      }
      user_email_xref: {
        payload: Prisma.$user_email_xrefPayload<ExtArgs>
        fields: Prisma.user_email_xrefFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_email_xrefFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_email_xrefPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_email_xrefFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_email_xrefPayload>
          }
          findFirst: {
            args: Prisma.user_email_xrefFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_email_xrefPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_email_xrefFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_email_xrefPayload>
          }
          findMany: {
            args: Prisma.user_email_xrefFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_email_xrefPayload>[]
          }
          create: {
            args: Prisma.user_email_xrefCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_email_xrefPayload>
          }
          createMany: {
            args: Prisma.user_email_xrefCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_email_xrefCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_email_xrefPayload>[]
          }
          delete: {
            args: Prisma.user_email_xrefDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_email_xrefPayload>
          }
          update: {
            args: Prisma.user_email_xrefUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_email_xrefPayload>
          }
          deleteMany: {
            args: Prisma.user_email_xrefDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_email_xrefUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_email_xrefUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_email_xrefPayload>[]
          }
          upsert: {
            args: Prisma.user_email_xrefUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_email_xrefPayload>
          }
          aggregate: {
            args: Prisma.User_email_xrefAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_email_xref>
          }
          groupBy: {
            args: Prisma.user_email_xrefGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_email_xrefGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_email_xrefCountArgs<ExtArgs>
            result: $Utils.Optional<User_email_xrefCountAggregateOutputType> | number
          }
        }
      }
      Client: {
        payload: Prisma.$ClientPayload<ExtArgs>
        fields: Prisma.ClientFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClientFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClientFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          findFirst: {
            args: Prisma.ClientFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClientFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          findMany: {
            args: Prisma.ClientFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>[]
          }
          create: {
            args: Prisma.ClientCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          createMany: {
            args: Prisma.ClientCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ClientCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>[]
          }
          delete: {
            args: Prisma.ClientDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          update: {
            args: Prisma.ClientUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          deleteMany: {
            args: Prisma.ClientDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClientUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ClientUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>[]
          }
          upsert: {
            args: Prisma.ClientUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          aggregate: {
            args: Prisma.ClientAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClient>
          }
          groupBy: {
            args: Prisma.ClientGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClientGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClientCountArgs<ExtArgs>
            result: $Utils.Optional<ClientCountAggregateOutputType> | number
          }
        }
      }
      Role: {
        payload: Prisma.$RolePayload<ExtArgs>
        fields: Prisma.RoleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RoleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RoleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findFirst: {
            args: Prisma.RoleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RoleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findMany: {
            args: Prisma.RoleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          create: {
            args: Prisma.RoleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          createMany: {
            args: Prisma.RoleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RoleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          delete: {
            args: Prisma.RoleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          update: {
            args: Prisma.RoleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          deleteMany: {
            args: Prisma.RoleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RoleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RoleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          upsert: {
            args: Prisma.RoleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          aggregate: {
            args: Prisma.RoleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRole>
          }
          groupBy: {
            args: Prisma.RoleGroupByArgs<ExtArgs>
            result: $Utils.Optional<RoleGroupByOutputType>[]
          }
          count: {
            args: Prisma.RoleCountArgs<ExtArgs>
            result: $Utils.Optional<RoleCountAggregateOutputType> | number
          }
        }
      }
      RoleAssignment: {
        payload: Prisma.$RoleAssignmentPayload<ExtArgs>
        fields: Prisma.RoleAssignmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RoleAssignmentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleAssignmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RoleAssignmentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleAssignmentPayload>
          }
          findFirst: {
            args: Prisma.RoleAssignmentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleAssignmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RoleAssignmentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleAssignmentPayload>
          }
          findMany: {
            args: Prisma.RoleAssignmentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleAssignmentPayload>[]
          }
          create: {
            args: Prisma.RoleAssignmentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleAssignmentPayload>
          }
          createMany: {
            args: Prisma.RoleAssignmentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RoleAssignmentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleAssignmentPayload>[]
          }
          delete: {
            args: Prisma.RoleAssignmentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleAssignmentPayload>
          }
          update: {
            args: Prisma.RoleAssignmentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleAssignmentPayload>
          }
          deleteMany: {
            args: Prisma.RoleAssignmentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RoleAssignmentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RoleAssignmentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleAssignmentPayload>[]
          }
          upsert: {
            args: Prisma.RoleAssignmentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleAssignmentPayload>
          }
          aggregate: {
            args: Prisma.RoleAssignmentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRoleAssignment>
          }
          groupBy: {
            args: Prisma.RoleAssignmentGroupByArgs<ExtArgs>
            result: $Utils.Optional<RoleAssignmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.RoleAssignmentCountArgs<ExtArgs>
            result: $Utils.Optional<RoleAssignmentCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    achievement_type_lu?: achievement_type_luOmit
    country?: countryOmit
    dice_connection?: dice_connectionOmit
    email?: emailOmit
    email_status_lu?: email_status_luOmit
    email_type_lu?: email_type_luOmit
    id_sequences?: id_sequencesOmit
    invalid_handles?: invalid_handlesOmit
    security_groups?: security_groupsOmit
    security_status_lu?: security_status_luOmit
    security_user?: security_userOmit
    social_login_provider?: social_login_providerOmit
    sso_login_provider?: sso_login_providerOmit
    user?: userOmit
    user_2fa?: user_2faOmit
    user_achievement?: user_achievementOmit
    user_group_xref?: user_group_xrefOmit
    user_otp_email?: user_otp_emailOmit
    user_social_login?: user_social_loginOmit
    user_sso_login?: user_sso_loginOmit
    user_status?: user_statusOmit
    user_status_lu?: user_status_luOmit
    user_status_type_lu?: user_status_type_luOmit
    user_email_xref?: user_email_xrefOmit
    client?: ClientOmit
    role?: RoleOmit
    roleAssignment?: RoleAssignmentOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type Achievement_type_luCountOutputType
   */

  export type Achievement_type_luCountOutputType = {
    user_achievement: number
  }

  export type Achievement_type_luCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_achievement?: boolean | Achievement_type_luCountOutputTypeCountUser_achievementArgs
  }

  // Custom InputTypes
  /**
   * Achievement_type_luCountOutputType without action
   */
  export type Achievement_type_luCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Achievement_type_luCountOutputType
     */
    select?: Achievement_type_luCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Achievement_type_luCountOutputType without action
   */
  export type Achievement_type_luCountOutputTypeCountUser_achievementArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_achievementWhereInput
  }


  /**
   * Count Type EmailCountOutputType
   */

  export type EmailCountOutputType = {
    user_email_xref: number
  }

  export type EmailCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_email_xref?: boolean | EmailCountOutputTypeCountUser_email_xrefArgs
  }

  // Custom InputTypes
  /**
   * EmailCountOutputType without action
   */
  export type EmailCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmailCountOutputType
     */
    select?: EmailCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EmailCountOutputType without action
   */
  export type EmailCountOutputTypeCountUser_email_xrefArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_email_xrefWhereInput
  }


  /**
   * Count Type Email_status_luCountOutputType
   */

  export type Email_status_luCountOutputType = {
    email: number
    user_email_xref: number
  }

  export type Email_status_luCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    email?: boolean | Email_status_luCountOutputTypeCountEmailArgs
    user_email_xref?: boolean | Email_status_luCountOutputTypeCountUser_email_xrefArgs
  }

  // Custom InputTypes
  /**
   * Email_status_luCountOutputType without action
   */
  export type Email_status_luCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Email_status_luCountOutputType
     */
    select?: Email_status_luCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Email_status_luCountOutputType without action
   */
  export type Email_status_luCountOutputTypeCountEmailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: emailWhereInput
  }

  /**
   * Email_status_luCountOutputType without action
   */
  export type Email_status_luCountOutputTypeCountUser_email_xrefArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_email_xrefWhereInput
  }


  /**
   * Count Type Email_type_luCountOutputType
   */

  export type Email_type_luCountOutputType = {
    email: number
  }

  export type Email_type_luCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    email?: boolean | Email_type_luCountOutputTypeCountEmailArgs
  }

  // Custom InputTypes
  /**
   * Email_type_luCountOutputType without action
   */
  export type Email_type_luCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Email_type_luCountOutputType
     */
    select?: Email_type_luCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Email_type_luCountOutputType without action
   */
  export type Email_type_luCountOutputTypeCountEmailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: emailWhereInput
  }


  /**
   * Count Type Security_groupsCountOutputType
   */

  export type Security_groupsCountOutputType = {
    user_group_xref: number
  }

  export type Security_groupsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_group_xref?: boolean | Security_groupsCountOutputTypeCountUser_group_xrefArgs
  }

  // Custom InputTypes
  /**
   * Security_groupsCountOutputType without action
   */
  export type Security_groupsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Security_groupsCountOutputType
     */
    select?: Security_groupsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Security_groupsCountOutputType without action
   */
  export type Security_groupsCountOutputTypeCountUser_group_xrefArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_group_xrefWhereInput
  }


  /**
   * Count Type Security_status_luCountOutputType
   */

  export type Security_status_luCountOutputType = {
    user_group_xref: number
  }

  export type Security_status_luCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_group_xref?: boolean | Security_status_luCountOutputTypeCountUser_group_xrefArgs
  }

  // Custom InputTypes
  /**
   * Security_status_luCountOutputType without action
   */
  export type Security_status_luCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Security_status_luCountOutputType
     */
    select?: Security_status_luCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Security_status_luCountOutputType without action
   */
  export type Security_status_luCountOutputTypeCountUser_group_xrefArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_group_xrefWhereInput
  }


  /**
   * Count Type Security_userCountOutputType
   */

  export type Security_userCountOutputType = {
    user_group_xref: number
  }

  export type Security_userCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_group_xref?: boolean | Security_userCountOutputTypeCountUser_group_xrefArgs
  }

  // Custom InputTypes
  /**
   * Security_userCountOutputType without action
   */
  export type Security_userCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Security_userCountOutputType
     */
    select?: Security_userCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Security_userCountOutputType without action
   */
  export type Security_userCountOutputTypeCountUser_group_xrefArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_group_xrefWhereInput
  }


  /**
   * Count Type Social_login_providerCountOutputType
   */

  export type Social_login_providerCountOutputType = {
    user_social_login: number
  }

  export type Social_login_providerCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_social_login?: boolean | Social_login_providerCountOutputTypeCountUser_social_loginArgs
  }

  // Custom InputTypes
  /**
   * Social_login_providerCountOutputType without action
   */
  export type Social_login_providerCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Social_login_providerCountOutputType
     */
    select?: Social_login_providerCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Social_login_providerCountOutputType without action
   */
  export type Social_login_providerCountOutputTypeCountUser_social_loginArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_social_loginWhereInput
  }


  /**
   * Count Type Sso_login_providerCountOutputType
   */

  export type Sso_login_providerCountOutputType = {
    user_sso_login: number
  }

  export type Sso_login_providerCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_sso_login?: boolean | Sso_login_providerCountOutputTypeCountUser_sso_loginArgs
  }

  // Custom InputTypes
  /**
   * Sso_login_providerCountOutputType without action
   */
  export type Sso_login_providerCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sso_login_providerCountOutputType
     */
    select?: Sso_login_providerCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Sso_login_providerCountOutputType without action
   */
  export type Sso_login_providerCountOutputTypeCountUser_sso_loginArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_sso_loginWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    user_achievement: number
    user_otp_email: number
    user_social_login: number
    user_sso_login: number
    user_status: number
    user_email_xref: number
    emails: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_achievement?: boolean | UserCountOutputTypeCountUser_achievementArgs
    user_otp_email?: boolean | UserCountOutputTypeCountUser_otp_emailArgs
    user_social_login?: boolean | UserCountOutputTypeCountUser_social_loginArgs
    user_sso_login?: boolean | UserCountOutputTypeCountUser_sso_loginArgs
    user_status?: boolean | UserCountOutputTypeCountUser_statusArgs
    user_email_xref?: boolean | UserCountOutputTypeCountUser_email_xrefArgs
    emails?: boolean | UserCountOutputTypeCountEmailsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUser_achievementArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_achievementWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUser_otp_emailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_otp_emailWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUser_social_loginArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_social_loginWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUser_sso_loginArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_sso_loginWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUser_statusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_statusWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUser_email_xrefArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_email_xrefWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountEmailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: emailWhereInput
  }


  /**
   * Count Type User_status_luCountOutputType
   */

  export type User_status_luCountOutputType = {
    user_status: number
  }

  export type User_status_luCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_status?: boolean | User_status_luCountOutputTypeCountUser_statusArgs
  }

  // Custom InputTypes
  /**
   * User_status_luCountOutputType without action
   */
  export type User_status_luCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_status_luCountOutputType
     */
    select?: User_status_luCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * User_status_luCountOutputType without action
   */
  export type User_status_luCountOutputTypeCountUser_statusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_statusWhereInput
  }


  /**
   * Count Type User_status_type_luCountOutputType
   */

  export type User_status_type_luCountOutputType = {
    user_status: number
  }

  export type User_status_type_luCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_status?: boolean | User_status_type_luCountOutputTypeCountUser_statusArgs
  }

  // Custom InputTypes
  /**
   * User_status_type_luCountOutputType without action
   */
  export type User_status_type_luCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_status_type_luCountOutputType
     */
    select?: User_status_type_luCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * User_status_type_luCountOutputType without action
   */
  export type User_status_type_luCountOutputTypeCountUser_statusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_statusWhereInput
  }


  /**
   * Count Type RoleCountOutputType
   */

  export type RoleCountOutputType = {
    roleAssignments: number
  }

  export type RoleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    roleAssignments?: boolean | RoleCountOutputTypeCountRoleAssignmentsArgs
  }

  // Custom InputTypes
  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleCountOutputType
     */
    select?: RoleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountRoleAssignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleAssignmentWhereInput
  }


  /**
   * Models
   */

  /**
   * Model achievement_type_lu
   */

  export type AggregateAchievement_type_lu = {
    _count: Achievement_type_luCountAggregateOutputType | null
    _avg: Achievement_type_luAvgAggregateOutputType | null
    _sum: Achievement_type_luSumAggregateOutputType | null
    _min: Achievement_type_luMinAggregateOutputType | null
    _max: Achievement_type_luMaxAggregateOutputType | null
  }

  export type Achievement_type_luAvgAggregateOutputType = {
    achievement_type_id: Decimal | null
  }

  export type Achievement_type_luSumAggregateOutputType = {
    achievement_type_id: Decimal | null
  }

  export type Achievement_type_luMinAggregateOutputType = {
    achievement_type_id: Decimal | null
    achievement_type_desc: string | null
  }

  export type Achievement_type_luMaxAggregateOutputType = {
    achievement_type_id: Decimal | null
    achievement_type_desc: string | null
  }

  export type Achievement_type_luCountAggregateOutputType = {
    achievement_type_id: number
    achievement_type_desc: number
    _all: number
  }


  export type Achievement_type_luAvgAggregateInputType = {
    achievement_type_id?: true
  }

  export type Achievement_type_luSumAggregateInputType = {
    achievement_type_id?: true
  }

  export type Achievement_type_luMinAggregateInputType = {
    achievement_type_id?: true
    achievement_type_desc?: true
  }

  export type Achievement_type_luMaxAggregateInputType = {
    achievement_type_id?: true
    achievement_type_desc?: true
  }

  export type Achievement_type_luCountAggregateInputType = {
    achievement_type_id?: true
    achievement_type_desc?: true
    _all?: true
  }

  export type Achievement_type_luAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which achievement_type_lu to aggregate.
     */
    where?: achievement_type_luWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of achievement_type_lus to fetch.
     */
    orderBy?: achievement_type_luOrderByWithRelationInput | achievement_type_luOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: achievement_type_luWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` achievement_type_lus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` achievement_type_lus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned achievement_type_lus
    **/
    _count?: true | Achievement_type_luCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Achievement_type_luAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Achievement_type_luSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Achievement_type_luMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Achievement_type_luMaxAggregateInputType
  }

  export type GetAchievement_type_luAggregateType<T extends Achievement_type_luAggregateArgs> = {
        [P in keyof T & keyof AggregateAchievement_type_lu]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAchievement_type_lu[P]>
      : GetScalarType<T[P], AggregateAchievement_type_lu[P]>
  }




  export type achievement_type_luGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: achievement_type_luWhereInput
    orderBy?: achievement_type_luOrderByWithAggregationInput | achievement_type_luOrderByWithAggregationInput[]
    by: Achievement_type_luScalarFieldEnum[] | Achievement_type_luScalarFieldEnum
    having?: achievement_type_luScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Achievement_type_luCountAggregateInputType | true
    _avg?: Achievement_type_luAvgAggregateInputType
    _sum?: Achievement_type_luSumAggregateInputType
    _min?: Achievement_type_luMinAggregateInputType
    _max?: Achievement_type_luMaxAggregateInputType
  }

  export type Achievement_type_luGroupByOutputType = {
    achievement_type_id: Decimal
    achievement_type_desc: string
    _count: Achievement_type_luCountAggregateOutputType | null
    _avg: Achievement_type_luAvgAggregateOutputType | null
    _sum: Achievement_type_luSumAggregateOutputType | null
    _min: Achievement_type_luMinAggregateOutputType | null
    _max: Achievement_type_luMaxAggregateOutputType | null
  }

  type GetAchievement_type_luGroupByPayload<T extends achievement_type_luGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Achievement_type_luGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Achievement_type_luGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Achievement_type_luGroupByOutputType[P]>
            : GetScalarType<T[P], Achievement_type_luGroupByOutputType[P]>
        }
      >
    >


  export type achievement_type_luSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    achievement_type_id?: boolean
    achievement_type_desc?: boolean
    user_achievement?: boolean | achievement_type_lu$user_achievementArgs<ExtArgs>
    _count?: boolean | Achievement_type_luCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["achievement_type_lu"]>

  export type achievement_type_luSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    achievement_type_id?: boolean
    achievement_type_desc?: boolean
  }, ExtArgs["result"]["achievement_type_lu"]>

  export type achievement_type_luSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    achievement_type_id?: boolean
    achievement_type_desc?: boolean
  }, ExtArgs["result"]["achievement_type_lu"]>

  export type achievement_type_luSelectScalar = {
    achievement_type_id?: boolean
    achievement_type_desc?: boolean
  }

  export type achievement_type_luOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"achievement_type_id" | "achievement_type_desc", ExtArgs["result"]["achievement_type_lu"]>
  export type achievement_type_luInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_achievement?: boolean | achievement_type_lu$user_achievementArgs<ExtArgs>
    _count?: boolean | Achievement_type_luCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type achievement_type_luIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type achievement_type_luIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $achievement_type_luPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "achievement_type_lu"
    objects: {
      user_achievement: Prisma.$user_achievementPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      achievement_type_id: Prisma.Decimal
      achievement_type_desc: string
    }, ExtArgs["result"]["achievement_type_lu"]>
    composites: {}
  }

  type achievement_type_luGetPayload<S extends boolean | null | undefined | achievement_type_luDefaultArgs> = $Result.GetResult<Prisma.$achievement_type_luPayload, S>

  type achievement_type_luCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<achievement_type_luFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Achievement_type_luCountAggregateInputType | true
    }

  export interface achievement_type_luDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['achievement_type_lu'], meta: { name: 'achievement_type_lu' } }
    /**
     * Find zero or one Achievement_type_lu that matches the filter.
     * @param {achievement_type_luFindUniqueArgs} args - Arguments to find a Achievement_type_lu
     * @example
     * // Get one Achievement_type_lu
     * const achievement_type_lu = await prisma.achievement_type_lu.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends achievement_type_luFindUniqueArgs>(args: SelectSubset<T, achievement_type_luFindUniqueArgs<ExtArgs>>): Prisma__achievement_type_luClient<$Result.GetResult<Prisma.$achievement_type_luPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Achievement_type_lu that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {achievement_type_luFindUniqueOrThrowArgs} args - Arguments to find a Achievement_type_lu
     * @example
     * // Get one Achievement_type_lu
     * const achievement_type_lu = await prisma.achievement_type_lu.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends achievement_type_luFindUniqueOrThrowArgs>(args: SelectSubset<T, achievement_type_luFindUniqueOrThrowArgs<ExtArgs>>): Prisma__achievement_type_luClient<$Result.GetResult<Prisma.$achievement_type_luPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Achievement_type_lu that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {achievement_type_luFindFirstArgs} args - Arguments to find a Achievement_type_lu
     * @example
     * // Get one Achievement_type_lu
     * const achievement_type_lu = await prisma.achievement_type_lu.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends achievement_type_luFindFirstArgs>(args?: SelectSubset<T, achievement_type_luFindFirstArgs<ExtArgs>>): Prisma__achievement_type_luClient<$Result.GetResult<Prisma.$achievement_type_luPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Achievement_type_lu that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {achievement_type_luFindFirstOrThrowArgs} args - Arguments to find a Achievement_type_lu
     * @example
     * // Get one Achievement_type_lu
     * const achievement_type_lu = await prisma.achievement_type_lu.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends achievement_type_luFindFirstOrThrowArgs>(args?: SelectSubset<T, achievement_type_luFindFirstOrThrowArgs<ExtArgs>>): Prisma__achievement_type_luClient<$Result.GetResult<Prisma.$achievement_type_luPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Achievement_type_lus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {achievement_type_luFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Achievement_type_lus
     * const achievement_type_lus = await prisma.achievement_type_lu.findMany()
     * 
     * // Get first 10 Achievement_type_lus
     * const achievement_type_lus = await prisma.achievement_type_lu.findMany({ take: 10 })
     * 
     * // Only select the `achievement_type_id`
     * const achievement_type_luWithAchievement_type_idOnly = await prisma.achievement_type_lu.findMany({ select: { achievement_type_id: true } })
     * 
     */
    findMany<T extends achievement_type_luFindManyArgs>(args?: SelectSubset<T, achievement_type_luFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$achievement_type_luPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Achievement_type_lu.
     * @param {achievement_type_luCreateArgs} args - Arguments to create a Achievement_type_lu.
     * @example
     * // Create one Achievement_type_lu
     * const Achievement_type_lu = await prisma.achievement_type_lu.create({
     *   data: {
     *     // ... data to create a Achievement_type_lu
     *   }
     * })
     * 
     */
    create<T extends achievement_type_luCreateArgs>(args: SelectSubset<T, achievement_type_luCreateArgs<ExtArgs>>): Prisma__achievement_type_luClient<$Result.GetResult<Prisma.$achievement_type_luPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Achievement_type_lus.
     * @param {achievement_type_luCreateManyArgs} args - Arguments to create many Achievement_type_lus.
     * @example
     * // Create many Achievement_type_lus
     * const achievement_type_lu = await prisma.achievement_type_lu.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends achievement_type_luCreateManyArgs>(args?: SelectSubset<T, achievement_type_luCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Achievement_type_lus and returns the data saved in the database.
     * @param {achievement_type_luCreateManyAndReturnArgs} args - Arguments to create many Achievement_type_lus.
     * @example
     * // Create many Achievement_type_lus
     * const achievement_type_lu = await prisma.achievement_type_lu.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Achievement_type_lus and only return the `achievement_type_id`
     * const achievement_type_luWithAchievement_type_idOnly = await prisma.achievement_type_lu.createManyAndReturn({
     *   select: { achievement_type_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends achievement_type_luCreateManyAndReturnArgs>(args?: SelectSubset<T, achievement_type_luCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$achievement_type_luPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Achievement_type_lu.
     * @param {achievement_type_luDeleteArgs} args - Arguments to delete one Achievement_type_lu.
     * @example
     * // Delete one Achievement_type_lu
     * const Achievement_type_lu = await prisma.achievement_type_lu.delete({
     *   where: {
     *     // ... filter to delete one Achievement_type_lu
     *   }
     * })
     * 
     */
    delete<T extends achievement_type_luDeleteArgs>(args: SelectSubset<T, achievement_type_luDeleteArgs<ExtArgs>>): Prisma__achievement_type_luClient<$Result.GetResult<Prisma.$achievement_type_luPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Achievement_type_lu.
     * @param {achievement_type_luUpdateArgs} args - Arguments to update one Achievement_type_lu.
     * @example
     * // Update one Achievement_type_lu
     * const achievement_type_lu = await prisma.achievement_type_lu.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends achievement_type_luUpdateArgs>(args: SelectSubset<T, achievement_type_luUpdateArgs<ExtArgs>>): Prisma__achievement_type_luClient<$Result.GetResult<Prisma.$achievement_type_luPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Achievement_type_lus.
     * @param {achievement_type_luDeleteManyArgs} args - Arguments to filter Achievement_type_lus to delete.
     * @example
     * // Delete a few Achievement_type_lus
     * const { count } = await prisma.achievement_type_lu.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends achievement_type_luDeleteManyArgs>(args?: SelectSubset<T, achievement_type_luDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Achievement_type_lus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {achievement_type_luUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Achievement_type_lus
     * const achievement_type_lu = await prisma.achievement_type_lu.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends achievement_type_luUpdateManyArgs>(args: SelectSubset<T, achievement_type_luUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Achievement_type_lus and returns the data updated in the database.
     * @param {achievement_type_luUpdateManyAndReturnArgs} args - Arguments to update many Achievement_type_lus.
     * @example
     * // Update many Achievement_type_lus
     * const achievement_type_lu = await prisma.achievement_type_lu.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Achievement_type_lus and only return the `achievement_type_id`
     * const achievement_type_luWithAchievement_type_idOnly = await prisma.achievement_type_lu.updateManyAndReturn({
     *   select: { achievement_type_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends achievement_type_luUpdateManyAndReturnArgs>(args: SelectSubset<T, achievement_type_luUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$achievement_type_luPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Achievement_type_lu.
     * @param {achievement_type_luUpsertArgs} args - Arguments to update or create a Achievement_type_lu.
     * @example
     * // Update or create a Achievement_type_lu
     * const achievement_type_lu = await prisma.achievement_type_lu.upsert({
     *   create: {
     *     // ... data to create a Achievement_type_lu
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Achievement_type_lu we want to update
     *   }
     * })
     */
    upsert<T extends achievement_type_luUpsertArgs>(args: SelectSubset<T, achievement_type_luUpsertArgs<ExtArgs>>): Prisma__achievement_type_luClient<$Result.GetResult<Prisma.$achievement_type_luPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Achievement_type_lus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {achievement_type_luCountArgs} args - Arguments to filter Achievement_type_lus to count.
     * @example
     * // Count the number of Achievement_type_lus
     * const count = await prisma.achievement_type_lu.count({
     *   where: {
     *     // ... the filter for the Achievement_type_lus we want to count
     *   }
     * })
    **/
    count<T extends achievement_type_luCountArgs>(
      args?: Subset<T, achievement_type_luCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Achievement_type_luCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Achievement_type_lu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Achievement_type_luAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Achievement_type_luAggregateArgs>(args: Subset<T, Achievement_type_luAggregateArgs>): Prisma.PrismaPromise<GetAchievement_type_luAggregateType<T>>

    /**
     * Group by Achievement_type_lu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {achievement_type_luGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends achievement_type_luGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: achievement_type_luGroupByArgs['orderBy'] }
        : { orderBy?: achievement_type_luGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, achievement_type_luGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAchievement_type_luGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the achievement_type_lu model
   */
  readonly fields: achievement_type_luFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for achievement_type_lu.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__achievement_type_luClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user_achievement<T extends achievement_type_lu$user_achievementArgs<ExtArgs> = {}>(args?: Subset<T, achievement_type_lu$user_achievementArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_achievementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the achievement_type_lu model
   */
  interface achievement_type_luFieldRefs {
    readonly achievement_type_id: FieldRef<"achievement_type_lu", 'Decimal'>
    readonly achievement_type_desc: FieldRef<"achievement_type_lu", 'String'>
  }
    

  // Custom InputTypes
  /**
   * achievement_type_lu findUnique
   */
  export type achievement_type_luFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the achievement_type_lu
     */
    select?: achievement_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the achievement_type_lu
     */
    omit?: achievement_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: achievement_type_luInclude<ExtArgs> | null
    /**
     * Filter, which achievement_type_lu to fetch.
     */
    where: achievement_type_luWhereUniqueInput
  }

  /**
   * achievement_type_lu findUniqueOrThrow
   */
  export type achievement_type_luFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the achievement_type_lu
     */
    select?: achievement_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the achievement_type_lu
     */
    omit?: achievement_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: achievement_type_luInclude<ExtArgs> | null
    /**
     * Filter, which achievement_type_lu to fetch.
     */
    where: achievement_type_luWhereUniqueInput
  }

  /**
   * achievement_type_lu findFirst
   */
  export type achievement_type_luFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the achievement_type_lu
     */
    select?: achievement_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the achievement_type_lu
     */
    omit?: achievement_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: achievement_type_luInclude<ExtArgs> | null
    /**
     * Filter, which achievement_type_lu to fetch.
     */
    where?: achievement_type_luWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of achievement_type_lus to fetch.
     */
    orderBy?: achievement_type_luOrderByWithRelationInput | achievement_type_luOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for achievement_type_lus.
     */
    cursor?: achievement_type_luWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` achievement_type_lus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` achievement_type_lus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of achievement_type_lus.
     */
    distinct?: Achievement_type_luScalarFieldEnum | Achievement_type_luScalarFieldEnum[]
  }

  /**
   * achievement_type_lu findFirstOrThrow
   */
  export type achievement_type_luFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the achievement_type_lu
     */
    select?: achievement_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the achievement_type_lu
     */
    omit?: achievement_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: achievement_type_luInclude<ExtArgs> | null
    /**
     * Filter, which achievement_type_lu to fetch.
     */
    where?: achievement_type_luWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of achievement_type_lus to fetch.
     */
    orderBy?: achievement_type_luOrderByWithRelationInput | achievement_type_luOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for achievement_type_lus.
     */
    cursor?: achievement_type_luWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` achievement_type_lus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` achievement_type_lus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of achievement_type_lus.
     */
    distinct?: Achievement_type_luScalarFieldEnum | Achievement_type_luScalarFieldEnum[]
  }

  /**
   * achievement_type_lu findMany
   */
  export type achievement_type_luFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the achievement_type_lu
     */
    select?: achievement_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the achievement_type_lu
     */
    omit?: achievement_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: achievement_type_luInclude<ExtArgs> | null
    /**
     * Filter, which achievement_type_lus to fetch.
     */
    where?: achievement_type_luWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of achievement_type_lus to fetch.
     */
    orderBy?: achievement_type_luOrderByWithRelationInput | achievement_type_luOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing achievement_type_lus.
     */
    cursor?: achievement_type_luWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` achievement_type_lus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` achievement_type_lus.
     */
    skip?: number
    distinct?: Achievement_type_luScalarFieldEnum | Achievement_type_luScalarFieldEnum[]
  }

  /**
   * achievement_type_lu create
   */
  export type achievement_type_luCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the achievement_type_lu
     */
    select?: achievement_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the achievement_type_lu
     */
    omit?: achievement_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: achievement_type_luInclude<ExtArgs> | null
    /**
     * The data needed to create a achievement_type_lu.
     */
    data: XOR<achievement_type_luCreateInput, achievement_type_luUncheckedCreateInput>
  }

  /**
   * achievement_type_lu createMany
   */
  export type achievement_type_luCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many achievement_type_lus.
     */
    data: achievement_type_luCreateManyInput | achievement_type_luCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * achievement_type_lu createManyAndReturn
   */
  export type achievement_type_luCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the achievement_type_lu
     */
    select?: achievement_type_luSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the achievement_type_lu
     */
    omit?: achievement_type_luOmit<ExtArgs> | null
    /**
     * The data used to create many achievement_type_lus.
     */
    data: achievement_type_luCreateManyInput | achievement_type_luCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * achievement_type_lu update
   */
  export type achievement_type_luUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the achievement_type_lu
     */
    select?: achievement_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the achievement_type_lu
     */
    omit?: achievement_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: achievement_type_luInclude<ExtArgs> | null
    /**
     * The data needed to update a achievement_type_lu.
     */
    data: XOR<achievement_type_luUpdateInput, achievement_type_luUncheckedUpdateInput>
    /**
     * Choose, which achievement_type_lu to update.
     */
    where: achievement_type_luWhereUniqueInput
  }

  /**
   * achievement_type_lu updateMany
   */
  export type achievement_type_luUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update achievement_type_lus.
     */
    data: XOR<achievement_type_luUpdateManyMutationInput, achievement_type_luUncheckedUpdateManyInput>
    /**
     * Filter which achievement_type_lus to update
     */
    where?: achievement_type_luWhereInput
    /**
     * Limit how many achievement_type_lus to update.
     */
    limit?: number
  }

  /**
   * achievement_type_lu updateManyAndReturn
   */
  export type achievement_type_luUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the achievement_type_lu
     */
    select?: achievement_type_luSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the achievement_type_lu
     */
    omit?: achievement_type_luOmit<ExtArgs> | null
    /**
     * The data used to update achievement_type_lus.
     */
    data: XOR<achievement_type_luUpdateManyMutationInput, achievement_type_luUncheckedUpdateManyInput>
    /**
     * Filter which achievement_type_lus to update
     */
    where?: achievement_type_luWhereInput
    /**
     * Limit how many achievement_type_lus to update.
     */
    limit?: number
  }

  /**
   * achievement_type_lu upsert
   */
  export type achievement_type_luUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the achievement_type_lu
     */
    select?: achievement_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the achievement_type_lu
     */
    omit?: achievement_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: achievement_type_luInclude<ExtArgs> | null
    /**
     * The filter to search for the achievement_type_lu to update in case it exists.
     */
    where: achievement_type_luWhereUniqueInput
    /**
     * In case the achievement_type_lu found by the `where` argument doesn't exist, create a new achievement_type_lu with this data.
     */
    create: XOR<achievement_type_luCreateInput, achievement_type_luUncheckedCreateInput>
    /**
     * In case the achievement_type_lu was found with the provided `where` argument, update it with this data.
     */
    update: XOR<achievement_type_luUpdateInput, achievement_type_luUncheckedUpdateInput>
  }

  /**
   * achievement_type_lu delete
   */
  export type achievement_type_luDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the achievement_type_lu
     */
    select?: achievement_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the achievement_type_lu
     */
    omit?: achievement_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: achievement_type_luInclude<ExtArgs> | null
    /**
     * Filter which achievement_type_lu to delete.
     */
    where: achievement_type_luWhereUniqueInput
  }

  /**
   * achievement_type_lu deleteMany
   */
  export type achievement_type_luDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which achievement_type_lus to delete
     */
    where?: achievement_type_luWhereInput
    /**
     * Limit how many achievement_type_lus to delete.
     */
    limit?: number
  }

  /**
   * achievement_type_lu.user_achievement
   */
  export type achievement_type_lu$user_achievementArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_achievement
     */
    select?: user_achievementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_achievement
     */
    omit?: user_achievementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_achievementInclude<ExtArgs> | null
    where?: user_achievementWhereInput
    orderBy?: user_achievementOrderByWithRelationInput | user_achievementOrderByWithRelationInput[]
    cursor?: user_achievementWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_achievementScalarFieldEnum | User_achievementScalarFieldEnum[]
  }

  /**
   * achievement_type_lu without action
   */
  export type achievement_type_luDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the achievement_type_lu
     */
    select?: achievement_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the achievement_type_lu
     */
    omit?: achievement_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: achievement_type_luInclude<ExtArgs> | null
  }


  /**
   * Model country
   */

  export type AggregateCountry = {
    _count: CountryCountAggregateOutputType | null
    _avg: CountryAvgAggregateOutputType | null
    _sum: CountrySumAggregateOutputType | null
    _min: CountryMinAggregateOutputType | null
    _max: CountryMaxAggregateOutputType | null
  }

  export type CountryAvgAggregateOutputType = {
    participating: Decimal | null
    default_taxform_id: Decimal | null
    longitude: Decimal | null
    latitude: Decimal | null
  }

  export type CountrySumAggregateOutputType = {
    participating: Decimal | null
    default_taxform_id: Decimal | null
    longitude: Decimal | null
    latitude: Decimal | null
  }

  export type CountryMinAggregateOutputType = {
    country_code: string | null
    country_name: string | null
    modify_date: Date | null
    participating: Decimal | null
    default_taxform_id: Decimal | null
    longitude: Decimal | null
    latitude: Decimal | null
    region: string | null
    iso_name: string | null
    iso_alpha2_code: string | null
    iso_alpha3_code: string | null
  }

  export type CountryMaxAggregateOutputType = {
    country_code: string | null
    country_name: string | null
    modify_date: Date | null
    participating: Decimal | null
    default_taxform_id: Decimal | null
    longitude: Decimal | null
    latitude: Decimal | null
    region: string | null
    iso_name: string | null
    iso_alpha2_code: string | null
    iso_alpha3_code: string | null
  }

  export type CountryCountAggregateOutputType = {
    country_code: number
    country_name: number
    modify_date: number
    participating: number
    default_taxform_id: number
    longitude: number
    latitude: number
    region: number
    iso_name: number
    iso_alpha2_code: number
    iso_alpha3_code: number
    _all: number
  }


  export type CountryAvgAggregateInputType = {
    participating?: true
    default_taxform_id?: true
    longitude?: true
    latitude?: true
  }

  export type CountrySumAggregateInputType = {
    participating?: true
    default_taxform_id?: true
    longitude?: true
    latitude?: true
  }

  export type CountryMinAggregateInputType = {
    country_code?: true
    country_name?: true
    modify_date?: true
    participating?: true
    default_taxform_id?: true
    longitude?: true
    latitude?: true
    region?: true
    iso_name?: true
    iso_alpha2_code?: true
    iso_alpha3_code?: true
  }

  export type CountryMaxAggregateInputType = {
    country_code?: true
    country_name?: true
    modify_date?: true
    participating?: true
    default_taxform_id?: true
    longitude?: true
    latitude?: true
    region?: true
    iso_name?: true
    iso_alpha2_code?: true
    iso_alpha3_code?: true
  }

  export type CountryCountAggregateInputType = {
    country_code?: true
    country_name?: true
    modify_date?: true
    participating?: true
    default_taxform_id?: true
    longitude?: true
    latitude?: true
    region?: true
    iso_name?: true
    iso_alpha2_code?: true
    iso_alpha3_code?: true
    _all?: true
  }

  export type CountryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which country to aggregate.
     */
    where?: countryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of countries to fetch.
     */
    orderBy?: countryOrderByWithRelationInput | countryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: countryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` countries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` countries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned countries
    **/
    _count?: true | CountryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CountryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CountrySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CountryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CountryMaxAggregateInputType
  }

  export type GetCountryAggregateType<T extends CountryAggregateArgs> = {
        [P in keyof T & keyof AggregateCountry]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCountry[P]>
      : GetScalarType<T[P], AggregateCountry[P]>
  }




  export type countryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: countryWhereInput
    orderBy?: countryOrderByWithAggregationInput | countryOrderByWithAggregationInput[]
    by: CountryScalarFieldEnum[] | CountryScalarFieldEnum
    having?: countryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CountryCountAggregateInputType | true
    _avg?: CountryAvgAggregateInputType
    _sum?: CountrySumAggregateInputType
    _min?: CountryMinAggregateInputType
    _max?: CountryMaxAggregateInputType
  }

  export type CountryGroupByOutputType = {
    country_code: string
    country_name: string
    modify_date: Date | null
    participating: Decimal | null
    default_taxform_id: Decimal | null
    longitude: Decimal | null
    latitude: Decimal | null
    region: string | null
    iso_name: string | null
    iso_alpha2_code: string | null
    iso_alpha3_code: string | null
    _count: CountryCountAggregateOutputType | null
    _avg: CountryAvgAggregateOutputType | null
    _sum: CountrySumAggregateOutputType | null
    _min: CountryMinAggregateOutputType | null
    _max: CountryMaxAggregateOutputType | null
  }

  type GetCountryGroupByPayload<T extends countryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CountryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CountryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CountryGroupByOutputType[P]>
            : GetScalarType<T[P], CountryGroupByOutputType[P]>
        }
      >
    >


  export type countrySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    country_code?: boolean
    country_name?: boolean
    modify_date?: boolean
    participating?: boolean
    default_taxform_id?: boolean
    longitude?: boolean
    latitude?: boolean
    region?: boolean
    iso_name?: boolean
    iso_alpha2_code?: boolean
    iso_alpha3_code?: boolean
  }, ExtArgs["result"]["country"]>

  export type countrySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    country_code?: boolean
    country_name?: boolean
    modify_date?: boolean
    participating?: boolean
    default_taxform_id?: boolean
    longitude?: boolean
    latitude?: boolean
    region?: boolean
    iso_name?: boolean
    iso_alpha2_code?: boolean
    iso_alpha3_code?: boolean
  }, ExtArgs["result"]["country"]>

  export type countrySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    country_code?: boolean
    country_name?: boolean
    modify_date?: boolean
    participating?: boolean
    default_taxform_id?: boolean
    longitude?: boolean
    latitude?: boolean
    region?: boolean
    iso_name?: boolean
    iso_alpha2_code?: boolean
    iso_alpha3_code?: boolean
  }, ExtArgs["result"]["country"]>

  export type countrySelectScalar = {
    country_code?: boolean
    country_name?: boolean
    modify_date?: boolean
    participating?: boolean
    default_taxform_id?: boolean
    longitude?: boolean
    latitude?: boolean
    region?: boolean
    iso_name?: boolean
    iso_alpha2_code?: boolean
    iso_alpha3_code?: boolean
  }

  export type countryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"country_code" | "country_name" | "modify_date" | "participating" | "default_taxform_id" | "longitude" | "latitude" | "region" | "iso_name" | "iso_alpha2_code" | "iso_alpha3_code", ExtArgs["result"]["country"]>

  export type $countryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "country"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      country_code: string
      country_name: string
      modify_date: Date | null
      participating: Prisma.Decimal | null
      default_taxform_id: Prisma.Decimal | null
      longitude: Prisma.Decimal | null
      latitude: Prisma.Decimal | null
      region: string | null
      iso_name: string | null
      iso_alpha2_code: string | null
      iso_alpha3_code: string | null
    }, ExtArgs["result"]["country"]>
    composites: {}
  }

  type countryGetPayload<S extends boolean | null | undefined | countryDefaultArgs> = $Result.GetResult<Prisma.$countryPayload, S>

  type countryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<countryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CountryCountAggregateInputType | true
    }

  export interface countryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['country'], meta: { name: 'country' } }
    /**
     * Find zero or one Country that matches the filter.
     * @param {countryFindUniqueArgs} args - Arguments to find a Country
     * @example
     * // Get one Country
     * const country = await prisma.country.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends countryFindUniqueArgs>(args: SelectSubset<T, countryFindUniqueArgs<ExtArgs>>): Prisma__countryClient<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Country that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {countryFindUniqueOrThrowArgs} args - Arguments to find a Country
     * @example
     * // Get one Country
     * const country = await prisma.country.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends countryFindUniqueOrThrowArgs>(args: SelectSubset<T, countryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__countryClient<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Country that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {countryFindFirstArgs} args - Arguments to find a Country
     * @example
     * // Get one Country
     * const country = await prisma.country.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends countryFindFirstArgs>(args?: SelectSubset<T, countryFindFirstArgs<ExtArgs>>): Prisma__countryClient<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Country that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {countryFindFirstOrThrowArgs} args - Arguments to find a Country
     * @example
     * // Get one Country
     * const country = await prisma.country.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends countryFindFirstOrThrowArgs>(args?: SelectSubset<T, countryFindFirstOrThrowArgs<ExtArgs>>): Prisma__countryClient<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Countries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {countryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Countries
     * const countries = await prisma.country.findMany()
     * 
     * // Get first 10 Countries
     * const countries = await prisma.country.findMany({ take: 10 })
     * 
     * // Only select the `country_code`
     * const countryWithCountry_codeOnly = await prisma.country.findMany({ select: { country_code: true } })
     * 
     */
    findMany<T extends countryFindManyArgs>(args?: SelectSubset<T, countryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Country.
     * @param {countryCreateArgs} args - Arguments to create a Country.
     * @example
     * // Create one Country
     * const Country = await prisma.country.create({
     *   data: {
     *     // ... data to create a Country
     *   }
     * })
     * 
     */
    create<T extends countryCreateArgs>(args: SelectSubset<T, countryCreateArgs<ExtArgs>>): Prisma__countryClient<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Countries.
     * @param {countryCreateManyArgs} args - Arguments to create many Countries.
     * @example
     * // Create many Countries
     * const country = await prisma.country.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends countryCreateManyArgs>(args?: SelectSubset<T, countryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Countries and returns the data saved in the database.
     * @param {countryCreateManyAndReturnArgs} args - Arguments to create many Countries.
     * @example
     * // Create many Countries
     * const country = await prisma.country.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Countries and only return the `country_code`
     * const countryWithCountry_codeOnly = await prisma.country.createManyAndReturn({
     *   select: { country_code: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends countryCreateManyAndReturnArgs>(args?: SelectSubset<T, countryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Country.
     * @param {countryDeleteArgs} args - Arguments to delete one Country.
     * @example
     * // Delete one Country
     * const Country = await prisma.country.delete({
     *   where: {
     *     // ... filter to delete one Country
     *   }
     * })
     * 
     */
    delete<T extends countryDeleteArgs>(args: SelectSubset<T, countryDeleteArgs<ExtArgs>>): Prisma__countryClient<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Country.
     * @param {countryUpdateArgs} args - Arguments to update one Country.
     * @example
     * // Update one Country
     * const country = await prisma.country.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends countryUpdateArgs>(args: SelectSubset<T, countryUpdateArgs<ExtArgs>>): Prisma__countryClient<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Countries.
     * @param {countryDeleteManyArgs} args - Arguments to filter Countries to delete.
     * @example
     * // Delete a few Countries
     * const { count } = await prisma.country.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends countryDeleteManyArgs>(args?: SelectSubset<T, countryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Countries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {countryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Countries
     * const country = await prisma.country.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends countryUpdateManyArgs>(args: SelectSubset<T, countryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Countries and returns the data updated in the database.
     * @param {countryUpdateManyAndReturnArgs} args - Arguments to update many Countries.
     * @example
     * // Update many Countries
     * const country = await prisma.country.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Countries and only return the `country_code`
     * const countryWithCountry_codeOnly = await prisma.country.updateManyAndReturn({
     *   select: { country_code: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends countryUpdateManyAndReturnArgs>(args: SelectSubset<T, countryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Country.
     * @param {countryUpsertArgs} args - Arguments to update or create a Country.
     * @example
     * // Update or create a Country
     * const country = await prisma.country.upsert({
     *   create: {
     *     // ... data to create a Country
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Country we want to update
     *   }
     * })
     */
    upsert<T extends countryUpsertArgs>(args: SelectSubset<T, countryUpsertArgs<ExtArgs>>): Prisma__countryClient<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Countries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {countryCountArgs} args - Arguments to filter Countries to count.
     * @example
     * // Count the number of Countries
     * const count = await prisma.country.count({
     *   where: {
     *     // ... the filter for the Countries we want to count
     *   }
     * })
    **/
    count<T extends countryCountArgs>(
      args?: Subset<T, countryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CountryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Country.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CountryAggregateArgs>(args: Subset<T, CountryAggregateArgs>): Prisma.PrismaPromise<GetCountryAggregateType<T>>

    /**
     * Group by Country.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {countryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends countryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: countryGroupByArgs['orderBy'] }
        : { orderBy?: countryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, countryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCountryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the country model
   */
  readonly fields: countryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for country.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__countryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the country model
   */
  interface countryFieldRefs {
    readonly country_code: FieldRef<"country", 'String'>
    readonly country_name: FieldRef<"country", 'String'>
    readonly modify_date: FieldRef<"country", 'DateTime'>
    readonly participating: FieldRef<"country", 'Decimal'>
    readonly default_taxform_id: FieldRef<"country", 'Decimal'>
    readonly longitude: FieldRef<"country", 'Decimal'>
    readonly latitude: FieldRef<"country", 'Decimal'>
    readonly region: FieldRef<"country", 'String'>
    readonly iso_name: FieldRef<"country", 'String'>
    readonly iso_alpha2_code: FieldRef<"country", 'String'>
    readonly iso_alpha3_code: FieldRef<"country", 'String'>
  }
    

  // Custom InputTypes
  /**
   * country findUnique
   */
  export type countryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
    /**
     * Filter, which country to fetch.
     */
    where: countryWhereUniqueInput
  }

  /**
   * country findUniqueOrThrow
   */
  export type countryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
    /**
     * Filter, which country to fetch.
     */
    where: countryWhereUniqueInput
  }

  /**
   * country findFirst
   */
  export type countryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
    /**
     * Filter, which country to fetch.
     */
    where?: countryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of countries to fetch.
     */
    orderBy?: countryOrderByWithRelationInput | countryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for countries.
     */
    cursor?: countryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` countries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` countries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of countries.
     */
    distinct?: CountryScalarFieldEnum | CountryScalarFieldEnum[]
  }

  /**
   * country findFirstOrThrow
   */
  export type countryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
    /**
     * Filter, which country to fetch.
     */
    where?: countryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of countries to fetch.
     */
    orderBy?: countryOrderByWithRelationInput | countryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for countries.
     */
    cursor?: countryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` countries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` countries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of countries.
     */
    distinct?: CountryScalarFieldEnum | CountryScalarFieldEnum[]
  }

  /**
   * country findMany
   */
  export type countryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
    /**
     * Filter, which countries to fetch.
     */
    where?: countryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of countries to fetch.
     */
    orderBy?: countryOrderByWithRelationInput | countryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing countries.
     */
    cursor?: countryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` countries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` countries.
     */
    skip?: number
    distinct?: CountryScalarFieldEnum | CountryScalarFieldEnum[]
  }

  /**
   * country create
   */
  export type countryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
    /**
     * The data needed to create a country.
     */
    data: XOR<countryCreateInput, countryUncheckedCreateInput>
  }

  /**
   * country createMany
   */
  export type countryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many countries.
     */
    data: countryCreateManyInput | countryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * country createManyAndReturn
   */
  export type countryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
    /**
     * The data used to create many countries.
     */
    data: countryCreateManyInput | countryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * country update
   */
  export type countryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
    /**
     * The data needed to update a country.
     */
    data: XOR<countryUpdateInput, countryUncheckedUpdateInput>
    /**
     * Choose, which country to update.
     */
    where: countryWhereUniqueInput
  }

  /**
   * country updateMany
   */
  export type countryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update countries.
     */
    data: XOR<countryUpdateManyMutationInput, countryUncheckedUpdateManyInput>
    /**
     * Filter which countries to update
     */
    where?: countryWhereInput
    /**
     * Limit how many countries to update.
     */
    limit?: number
  }

  /**
   * country updateManyAndReturn
   */
  export type countryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
    /**
     * The data used to update countries.
     */
    data: XOR<countryUpdateManyMutationInput, countryUncheckedUpdateManyInput>
    /**
     * Filter which countries to update
     */
    where?: countryWhereInput
    /**
     * Limit how many countries to update.
     */
    limit?: number
  }

  /**
   * country upsert
   */
  export type countryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
    /**
     * The filter to search for the country to update in case it exists.
     */
    where: countryWhereUniqueInput
    /**
     * In case the country found by the `where` argument doesn't exist, create a new country with this data.
     */
    create: XOR<countryCreateInput, countryUncheckedCreateInput>
    /**
     * In case the country was found with the provided `where` argument, update it with this data.
     */
    update: XOR<countryUpdateInput, countryUncheckedUpdateInput>
  }

  /**
   * country delete
   */
  export type countryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
    /**
     * Filter which country to delete.
     */
    where: countryWhereUniqueInput
  }

  /**
   * country deleteMany
   */
  export type countryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which countries to delete
     */
    where?: countryWhereInput
    /**
     * Limit how many countries to delete.
     */
    limit?: number
  }

  /**
   * country without action
   */
  export type countryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
  }


  /**
   * Model dice_connection
   */

  export type AggregateDice_connection = {
    _count: Dice_connectionCountAggregateOutputType | null
    _avg: Dice_connectionAvgAggregateOutputType | null
    _sum: Dice_connectionSumAggregateOutputType | null
    _min: Dice_connectionMinAggregateOutputType | null
    _max: Dice_connectionMaxAggregateOutputType | null
  }

  export type Dice_connectionAvgAggregateOutputType = {
    id: number | null
    user_id: Decimal | null
  }

  export type Dice_connectionSumAggregateOutputType = {
    id: number | null
    user_id: Decimal | null
  }

  export type Dice_connectionMinAggregateOutputType = {
    id: number | null
    user_id: Decimal | null
    connection: string | null
    accepted: boolean | null
    created_at: Date | null
    short_url: string | null
    con_created_at: Date | null
  }

  export type Dice_connectionMaxAggregateOutputType = {
    id: number | null
    user_id: Decimal | null
    connection: string | null
    accepted: boolean | null
    created_at: Date | null
    short_url: string | null
    con_created_at: Date | null
  }

  export type Dice_connectionCountAggregateOutputType = {
    id: number
    user_id: number
    connection: number
    accepted: number
    created_at: number
    short_url: number
    con_created_at: number
    _all: number
  }


  export type Dice_connectionAvgAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type Dice_connectionSumAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type Dice_connectionMinAggregateInputType = {
    id?: true
    user_id?: true
    connection?: true
    accepted?: true
    created_at?: true
    short_url?: true
    con_created_at?: true
  }

  export type Dice_connectionMaxAggregateInputType = {
    id?: true
    user_id?: true
    connection?: true
    accepted?: true
    created_at?: true
    short_url?: true
    con_created_at?: true
  }

  export type Dice_connectionCountAggregateInputType = {
    id?: true
    user_id?: true
    connection?: true
    accepted?: true
    created_at?: true
    short_url?: true
    con_created_at?: true
    _all?: true
  }

  export type Dice_connectionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which dice_connection to aggregate.
     */
    where?: dice_connectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of dice_connections to fetch.
     */
    orderBy?: dice_connectionOrderByWithRelationInput | dice_connectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: dice_connectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` dice_connections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` dice_connections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned dice_connections
    **/
    _count?: true | Dice_connectionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Dice_connectionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Dice_connectionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Dice_connectionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Dice_connectionMaxAggregateInputType
  }

  export type GetDice_connectionAggregateType<T extends Dice_connectionAggregateArgs> = {
        [P in keyof T & keyof AggregateDice_connection]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDice_connection[P]>
      : GetScalarType<T[P], AggregateDice_connection[P]>
  }




  export type dice_connectionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: dice_connectionWhereInput
    orderBy?: dice_connectionOrderByWithAggregationInput | dice_connectionOrderByWithAggregationInput[]
    by: Dice_connectionScalarFieldEnum[] | Dice_connectionScalarFieldEnum
    having?: dice_connectionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Dice_connectionCountAggregateInputType | true
    _avg?: Dice_connectionAvgAggregateInputType
    _sum?: Dice_connectionSumAggregateInputType
    _min?: Dice_connectionMinAggregateInputType
    _max?: Dice_connectionMaxAggregateInputType
  }

  export type Dice_connectionGroupByOutputType = {
    id: number
    user_id: Decimal
    connection: string | null
    accepted: boolean
    created_at: Date
    short_url: string | null
    con_created_at: Date | null
    _count: Dice_connectionCountAggregateOutputType | null
    _avg: Dice_connectionAvgAggregateOutputType | null
    _sum: Dice_connectionSumAggregateOutputType | null
    _min: Dice_connectionMinAggregateOutputType | null
    _max: Dice_connectionMaxAggregateOutputType | null
  }

  type GetDice_connectionGroupByPayload<T extends dice_connectionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Dice_connectionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Dice_connectionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Dice_connectionGroupByOutputType[P]>
            : GetScalarType<T[P], Dice_connectionGroupByOutputType[P]>
        }
      >
    >


  export type dice_connectionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    connection?: boolean
    accepted?: boolean
    created_at?: boolean
    short_url?: boolean
    con_created_at?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["dice_connection"]>

  export type dice_connectionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    connection?: boolean
    accepted?: boolean
    created_at?: boolean
    short_url?: boolean
    con_created_at?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["dice_connection"]>

  export type dice_connectionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    connection?: boolean
    accepted?: boolean
    created_at?: boolean
    short_url?: boolean
    con_created_at?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["dice_connection"]>

  export type dice_connectionSelectScalar = {
    id?: boolean
    user_id?: boolean
    connection?: boolean
    accepted?: boolean
    created_at?: boolean
    short_url?: boolean
    con_created_at?: boolean
  }

  export type dice_connectionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "connection" | "accepted" | "created_at" | "short_url" | "con_created_at", ExtArgs["result"]["dice_connection"]>
  export type dice_connectionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type dice_connectionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type dice_connectionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $dice_connectionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "dice_connection"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: Prisma.Decimal
      connection: string | null
      accepted: boolean
      created_at: Date
      short_url: string | null
      con_created_at: Date | null
    }, ExtArgs["result"]["dice_connection"]>
    composites: {}
  }

  type dice_connectionGetPayload<S extends boolean | null | undefined | dice_connectionDefaultArgs> = $Result.GetResult<Prisma.$dice_connectionPayload, S>

  type dice_connectionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<dice_connectionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Dice_connectionCountAggregateInputType | true
    }

  export interface dice_connectionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['dice_connection'], meta: { name: 'dice_connection' } }
    /**
     * Find zero or one Dice_connection that matches the filter.
     * @param {dice_connectionFindUniqueArgs} args - Arguments to find a Dice_connection
     * @example
     * // Get one Dice_connection
     * const dice_connection = await prisma.dice_connection.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends dice_connectionFindUniqueArgs>(args: SelectSubset<T, dice_connectionFindUniqueArgs<ExtArgs>>): Prisma__dice_connectionClient<$Result.GetResult<Prisma.$dice_connectionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Dice_connection that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {dice_connectionFindUniqueOrThrowArgs} args - Arguments to find a Dice_connection
     * @example
     * // Get one Dice_connection
     * const dice_connection = await prisma.dice_connection.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends dice_connectionFindUniqueOrThrowArgs>(args: SelectSubset<T, dice_connectionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__dice_connectionClient<$Result.GetResult<Prisma.$dice_connectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Dice_connection that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dice_connectionFindFirstArgs} args - Arguments to find a Dice_connection
     * @example
     * // Get one Dice_connection
     * const dice_connection = await prisma.dice_connection.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends dice_connectionFindFirstArgs>(args?: SelectSubset<T, dice_connectionFindFirstArgs<ExtArgs>>): Prisma__dice_connectionClient<$Result.GetResult<Prisma.$dice_connectionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Dice_connection that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dice_connectionFindFirstOrThrowArgs} args - Arguments to find a Dice_connection
     * @example
     * // Get one Dice_connection
     * const dice_connection = await prisma.dice_connection.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends dice_connectionFindFirstOrThrowArgs>(args?: SelectSubset<T, dice_connectionFindFirstOrThrowArgs<ExtArgs>>): Prisma__dice_connectionClient<$Result.GetResult<Prisma.$dice_connectionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Dice_connections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dice_connectionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Dice_connections
     * const dice_connections = await prisma.dice_connection.findMany()
     * 
     * // Get first 10 Dice_connections
     * const dice_connections = await prisma.dice_connection.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const dice_connectionWithIdOnly = await prisma.dice_connection.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends dice_connectionFindManyArgs>(args?: SelectSubset<T, dice_connectionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$dice_connectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Dice_connection.
     * @param {dice_connectionCreateArgs} args - Arguments to create a Dice_connection.
     * @example
     * // Create one Dice_connection
     * const Dice_connection = await prisma.dice_connection.create({
     *   data: {
     *     // ... data to create a Dice_connection
     *   }
     * })
     * 
     */
    create<T extends dice_connectionCreateArgs>(args: SelectSubset<T, dice_connectionCreateArgs<ExtArgs>>): Prisma__dice_connectionClient<$Result.GetResult<Prisma.$dice_connectionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Dice_connections.
     * @param {dice_connectionCreateManyArgs} args - Arguments to create many Dice_connections.
     * @example
     * // Create many Dice_connections
     * const dice_connection = await prisma.dice_connection.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends dice_connectionCreateManyArgs>(args?: SelectSubset<T, dice_connectionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Dice_connections and returns the data saved in the database.
     * @param {dice_connectionCreateManyAndReturnArgs} args - Arguments to create many Dice_connections.
     * @example
     * // Create many Dice_connections
     * const dice_connection = await prisma.dice_connection.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Dice_connections and only return the `id`
     * const dice_connectionWithIdOnly = await prisma.dice_connection.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends dice_connectionCreateManyAndReturnArgs>(args?: SelectSubset<T, dice_connectionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$dice_connectionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Dice_connection.
     * @param {dice_connectionDeleteArgs} args - Arguments to delete one Dice_connection.
     * @example
     * // Delete one Dice_connection
     * const Dice_connection = await prisma.dice_connection.delete({
     *   where: {
     *     // ... filter to delete one Dice_connection
     *   }
     * })
     * 
     */
    delete<T extends dice_connectionDeleteArgs>(args: SelectSubset<T, dice_connectionDeleteArgs<ExtArgs>>): Prisma__dice_connectionClient<$Result.GetResult<Prisma.$dice_connectionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Dice_connection.
     * @param {dice_connectionUpdateArgs} args - Arguments to update one Dice_connection.
     * @example
     * // Update one Dice_connection
     * const dice_connection = await prisma.dice_connection.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends dice_connectionUpdateArgs>(args: SelectSubset<T, dice_connectionUpdateArgs<ExtArgs>>): Prisma__dice_connectionClient<$Result.GetResult<Prisma.$dice_connectionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Dice_connections.
     * @param {dice_connectionDeleteManyArgs} args - Arguments to filter Dice_connections to delete.
     * @example
     * // Delete a few Dice_connections
     * const { count } = await prisma.dice_connection.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends dice_connectionDeleteManyArgs>(args?: SelectSubset<T, dice_connectionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Dice_connections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dice_connectionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Dice_connections
     * const dice_connection = await prisma.dice_connection.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends dice_connectionUpdateManyArgs>(args: SelectSubset<T, dice_connectionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Dice_connections and returns the data updated in the database.
     * @param {dice_connectionUpdateManyAndReturnArgs} args - Arguments to update many Dice_connections.
     * @example
     * // Update many Dice_connections
     * const dice_connection = await prisma.dice_connection.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Dice_connections and only return the `id`
     * const dice_connectionWithIdOnly = await prisma.dice_connection.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends dice_connectionUpdateManyAndReturnArgs>(args: SelectSubset<T, dice_connectionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$dice_connectionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Dice_connection.
     * @param {dice_connectionUpsertArgs} args - Arguments to update or create a Dice_connection.
     * @example
     * // Update or create a Dice_connection
     * const dice_connection = await prisma.dice_connection.upsert({
     *   create: {
     *     // ... data to create a Dice_connection
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Dice_connection we want to update
     *   }
     * })
     */
    upsert<T extends dice_connectionUpsertArgs>(args: SelectSubset<T, dice_connectionUpsertArgs<ExtArgs>>): Prisma__dice_connectionClient<$Result.GetResult<Prisma.$dice_connectionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Dice_connections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dice_connectionCountArgs} args - Arguments to filter Dice_connections to count.
     * @example
     * // Count the number of Dice_connections
     * const count = await prisma.dice_connection.count({
     *   where: {
     *     // ... the filter for the Dice_connections we want to count
     *   }
     * })
    **/
    count<T extends dice_connectionCountArgs>(
      args?: Subset<T, dice_connectionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Dice_connectionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Dice_connection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Dice_connectionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Dice_connectionAggregateArgs>(args: Subset<T, Dice_connectionAggregateArgs>): Prisma.PrismaPromise<GetDice_connectionAggregateType<T>>

    /**
     * Group by Dice_connection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dice_connectionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends dice_connectionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: dice_connectionGroupByArgs['orderBy'] }
        : { orderBy?: dice_connectionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, dice_connectionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDice_connectionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the dice_connection model
   */
  readonly fields: dice_connectionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for dice_connection.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__dice_connectionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the dice_connection model
   */
  interface dice_connectionFieldRefs {
    readonly id: FieldRef<"dice_connection", 'Int'>
    readonly user_id: FieldRef<"dice_connection", 'Decimal'>
    readonly connection: FieldRef<"dice_connection", 'String'>
    readonly accepted: FieldRef<"dice_connection", 'Boolean'>
    readonly created_at: FieldRef<"dice_connection", 'DateTime'>
    readonly short_url: FieldRef<"dice_connection", 'String'>
    readonly con_created_at: FieldRef<"dice_connection", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * dice_connection findUnique
   */
  export type dice_connectionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dice_connection
     */
    select?: dice_connectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dice_connection
     */
    omit?: dice_connectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dice_connectionInclude<ExtArgs> | null
    /**
     * Filter, which dice_connection to fetch.
     */
    where: dice_connectionWhereUniqueInput
  }

  /**
   * dice_connection findUniqueOrThrow
   */
  export type dice_connectionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dice_connection
     */
    select?: dice_connectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dice_connection
     */
    omit?: dice_connectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dice_connectionInclude<ExtArgs> | null
    /**
     * Filter, which dice_connection to fetch.
     */
    where: dice_connectionWhereUniqueInput
  }

  /**
   * dice_connection findFirst
   */
  export type dice_connectionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dice_connection
     */
    select?: dice_connectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dice_connection
     */
    omit?: dice_connectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dice_connectionInclude<ExtArgs> | null
    /**
     * Filter, which dice_connection to fetch.
     */
    where?: dice_connectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of dice_connections to fetch.
     */
    orderBy?: dice_connectionOrderByWithRelationInput | dice_connectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for dice_connections.
     */
    cursor?: dice_connectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` dice_connections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` dice_connections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of dice_connections.
     */
    distinct?: Dice_connectionScalarFieldEnum | Dice_connectionScalarFieldEnum[]
  }

  /**
   * dice_connection findFirstOrThrow
   */
  export type dice_connectionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dice_connection
     */
    select?: dice_connectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dice_connection
     */
    omit?: dice_connectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dice_connectionInclude<ExtArgs> | null
    /**
     * Filter, which dice_connection to fetch.
     */
    where?: dice_connectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of dice_connections to fetch.
     */
    orderBy?: dice_connectionOrderByWithRelationInput | dice_connectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for dice_connections.
     */
    cursor?: dice_connectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` dice_connections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` dice_connections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of dice_connections.
     */
    distinct?: Dice_connectionScalarFieldEnum | Dice_connectionScalarFieldEnum[]
  }

  /**
   * dice_connection findMany
   */
  export type dice_connectionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dice_connection
     */
    select?: dice_connectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dice_connection
     */
    omit?: dice_connectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dice_connectionInclude<ExtArgs> | null
    /**
     * Filter, which dice_connections to fetch.
     */
    where?: dice_connectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of dice_connections to fetch.
     */
    orderBy?: dice_connectionOrderByWithRelationInput | dice_connectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing dice_connections.
     */
    cursor?: dice_connectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` dice_connections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` dice_connections.
     */
    skip?: number
    distinct?: Dice_connectionScalarFieldEnum | Dice_connectionScalarFieldEnum[]
  }

  /**
   * dice_connection create
   */
  export type dice_connectionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dice_connection
     */
    select?: dice_connectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dice_connection
     */
    omit?: dice_connectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dice_connectionInclude<ExtArgs> | null
    /**
     * The data needed to create a dice_connection.
     */
    data: XOR<dice_connectionCreateInput, dice_connectionUncheckedCreateInput>
  }

  /**
   * dice_connection createMany
   */
  export type dice_connectionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many dice_connections.
     */
    data: dice_connectionCreateManyInput | dice_connectionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * dice_connection createManyAndReturn
   */
  export type dice_connectionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dice_connection
     */
    select?: dice_connectionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the dice_connection
     */
    omit?: dice_connectionOmit<ExtArgs> | null
    /**
     * The data used to create many dice_connections.
     */
    data: dice_connectionCreateManyInput | dice_connectionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dice_connectionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * dice_connection update
   */
  export type dice_connectionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dice_connection
     */
    select?: dice_connectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dice_connection
     */
    omit?: dice_connectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dice_connectionInclude<ExtArgs> | null
    /**
     * The data needed to update a dice_connection.
     */
    data: XOR<dice_connectionUpdateInput, dice_connectionUncheckedUpdateInput>
    /**
     * Choose, which dice_connection to update.
     */
    where: dice_connectionWhereUniqueInput
  }

  /**
   * dice_connection updateMany
   */
  export type dice_connectionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update dice_connections.
     */
    data: XOR<dice_connectionUpdateManyMutationInput, dice_connectionUncheckedUpdateManyInput>
    /**
     * Filter which dice_connections to update
     */
    where?: dice_connectionWhereInput
    /**
     * Limit how many dice_connections to update.
     */
    limit?: number
  }

  /**
   * dice_connection updateManyAndReturn
   */
  export type dice_connectionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dice_connection
     */
    select?: dice_connectionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the dice_connection
     */
    omit?: dice_connectionOmit<ExtArgs> | null
    /**
     * The data used to update dice_connections.
     */
    data: XOR<dice_connectionUpdateManyMutationInput, dice_connectionUncheckedUpdateManyInput>
    /**
     * Filter which dice_connections to update
     */
    where?: dice_connectionWhereInput
    /**
     * Limit how many dice_connections to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dice_connectionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * dice_connection upsert
   */
  export type dice_connectionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dice_connection
     */
    select?: dice_connectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dice_connection
     */
    omit?: dice_connectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dice_connectionInclude<ExtArgs> | null
    /**
     * The filter to search for the dice_connection to update in case it exists.
     */
    where: dice_connectionWhereUniqueInput
    /**
     * In case the dice_connection found by the `where` argument doesn't exist, create a new dice_connection with this data.
     */
    create: XOR<dice_connectionCreateInput, dice_connectionUncheckedCreateInput>
    /**
     * In case the dice_connection was found with the provided `where` argument, update it with this data.
     */
    update: XOR<dice_connectionUpdateInput, dice_connectionUncheckedUpdateInput>
  }

  /**
   * dice_connection delete
   */
  export type dice_connectionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dice_connection
     */
    select?: dice_connectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dice_connection
     */
    omit?: dice_connectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dice_connectionInclude<ExtArgs> | null
    /**
     * Filter which dice_connection to delete.
     */
    where: dice_connectionWhereUniqueInput
  }

  /**
   * dice_connection deleteMany
   */
  export type dice_connectionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which dice_connections to delete
     */
    where?: dice_connectionWhereInput
    /**
     * Limit how many dice_connections to delete.
     */
    limit?: number
  }

  /**
   * dice_connection without action
   */
  export type dice_connectionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dice_connection
     */
    select?: dice_connectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dice_connection
     */
    omit?: dice_connectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dice_connectionInclude<ExtArgs> | null
  }


  /**
   * Model email
   */

  export type AggregateEmail = {
    _count: EmailCountAggregateOutputType | null
    _avg: EmailAvgAggregateOutputType | null
    _sum: EmailSumAggregateOutputType | null
    _min: EmailMinAggregateOutputType | null
    _max: EmailMaxAggregateOutputType | null
  }

  export type EmailAvgAggregateOutputType = {
    user_id: Decimal | null
    email_id: Decimal | null
    email_type_id: Decimal | null
    primary_ind: Decimal | null
    status_id: Decimal | null
  }

  export type EmailSumAggregateOutputType = {
    user_id: Decimal | null
    email_id: Decimal | null
    email_type_id: Decimal | null
    primary_ind: Decimal | null
    status_id: Decimal | null
  }

  export type EmailMinAggregateOutputType = {
    user_id: Decimal | null
    email_id: Decimal | null
    email_type_id: Decimal | null
    address: string | null
    create_date: Date | null
    modify_date: Date | null
    primary_ind: Decimal | null
    status_id: Decimal | null
  }

  export type EmailMaxAggregateOutputType = {
    user_id: Decimal | null
    email_id: Decimal | null
    email_type_id: Decimal | null
    address: string | null
    create_date: Date | null
    modify_date: Date | null
    primary_ind: Decimal | null
    status_id: Decimal | null
  }

  export type EmailCountAggregateOutputType = {
    user_id: number
    email_id: number
    email_type_id: number
    address: number
    create_date: number
    modify_date: number
    primary_ind: number
    status_id: number
    _all: number
  }


  export type EmailAvgAggregateInputType = {
    user_id?: true
    email_id?: true
    email_type_id?: true
    primary_ind?: true
    status_id?: true
  }

  export type EmailSumAggregateInputType = {
    user_id?: true
    email_id?: true
    email_type_id?: true
    primary_ind?: true
    status_id?: true
  }

  export type EmailMinAggregateInputType = {
    user_id?: true
    email_id?: true
    email_type_id?: true
    address?: true
    create_date?: true
    modify_date?: true
    primary_ind?: true
    status_id?: true
  }

  export type EmailMaxAggregateInputType = {
    user_id?: true
    email_id?: true
    email_type_id?: true
    address?: true
    create_date?: true
    modify_date?: true
    primary_ind?: true
    status_id?: true
  }

  export type EmailCountAggregateInputType = {
    user_id?: true
    email_id?: true
    email_type_id?: true
    address?: true
    create_date?: true
    modify_date?: true
    primary_ind?: true
    status_id?: true
    _all?: true
  }

  export type EmailAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which email to aggregate.
     */
    where?: emailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of emails to fetch.
     */
    orderBy?: emailOrderByWithRelationInput | emailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: emailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` emails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` emails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned emails
    **/
    _count?: true | EmailCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EmailAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EmailSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EmailMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EmailMaxAggregateInputType
  }

  export type GetEmailAggregateType<T extends EmailAggregateArgs> = {
        [P in keyof T & keyof AggregateEmail]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmail[P]>
      : GetScalarType<T[P], AggregateEmail[P]>
  }




  export type emailGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: emailWhereInput
    orderBy?: emailOrderByWithAggregationInput | emailOrderByWithAggregationInput[]
    by: EmailScalarFieldEnum[] | EmailScalarFieldEnum
    having?: emailScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EmailCountAggregateInputType | true
    _avg?: EmailAvgAggregateInputType
    _sum?: EmailSumAggregateInputType
    _min?: EmailMinAggregateInputType
    _max?: EmailMaxAggregateInputType
  }

  export type EmailGroupByOutputType = {
    user_id: Decimal | null
    email_id: Decimal
    email_type_id: Decimal | null
    address: string | null
    create_date: Date | null
    modify_date: Date | null
    primary_ind: Decimal | null
    status_id: Decimal | null
    _count: EmailCountAggregateOutputType | null
    _avg: EmailAvgAggregateOutputType | null
    _sum: EmailSumAggregateOutputType | null
    _min: EmailMinAggregateOutputType | null
    _max: EmailMaxAggregateOutputType | null
  }

  type GetEmailGroupByPayload<T extends emailGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EmailGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EmailGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EmailGroupByOutputType[P]>
            : GetScalarType<T[P], EmailGroupByOutputType[P]>
        }
      >
    >


  export type emailSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    email_id?: boolean
    email_type_id?: boolean
    address?: boolean
    create_date?: boolean
    modify_date?: boolean
    primary_ind?: boolean
    status_id?: boolean
    email_status_lu?: boolean | email$email_status_luArgs<ExtArgs>
    email_type_lu?: boolean | email$email_type_luArgs<ExtArgs>
    user_email_xref?: boolean | email$user_email_xrefArgs<ExtArgs>
    user?: boolean | email$userArgs<ExtArgs>
    _count?: boolean | EmailCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["email"]>

  export type emailSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    email_id?: boolean
    email_type_id?: boolean
    address?: boolean
    create_date?: boolean
    modify_date?: boolean
    primary_ind?: boolean
    status_id?: boolean
    email_status_lu?: boolean | email$email_status_luArgs<ExtArgs>
    email_type_lu?: boolean | email$email_type_luArgs<ExtArgs>
    user?: boolean | email$userArgs<ExtArgs>
  }, ExtArgs["result"]["email"]>

  export type emailSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    email_id?: boolean
    email_type_id?: boolean
    address?: boolean
    create_date?: boolean
    modify_date?: boolean
    primary_ind?: boolean
    status_id?: boolean
    email_status_lu?: boolean | email$email_status_luArgs<ExtArgs>
    email_type_lu?: boolean | email$email_type_luArgs<ExtArgs>
    user?: boolean | email$userArgs<ExtArgs>
  }, ExtArgs["result"]["email"]>

  export type emailSelectScalar = {
    user_id?: boolean
    email_id?: boolean
    email_type_id?: boolean
    address?: boolean
    create_date?: boolean
    modify_date?: boolean
    primary_ind?: boolean
    status_id?: boolean
  }

  export type emailOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"user_id" | "email_id" | "email_type_id" | "address" | "create_date" | "modify_date" | "primary_ind" | "status_id", ExtArgs["result"]["email"]>
  export type emailInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    email_status_lu?: boolean | email$email_status_luArgs<ExtArgs>
    email_type_lu?: boolean | email$email_type_luArgs<ExtArgs>
    user_email_xref?: boolean | email$user_email_xrefArgs<ExtArgs>
    user?: boolean | email$userArgs<ExtArgs>
    _count?: boolean | EmailCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type emailIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    email_status_lu?: boolean | email$email_status_luArgs<ExtArgs>
    email_type_lu?: boolean | email$email_type_luArgs<ExtArgs>
    user?: boolean | email$userArgs<ExtArgs>
  }
  export type emailIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    email_status_lu?: boolean | email$email_status_luArgs<ExtArgs>
    email_type_lu?: boolean | email$email_type_luArgs<ExtArgs>
    user?: boolean | email$userArgs<ExtArgs>
  }

  export type $emailPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "email"
    objects: {
      email_status_lu: Prisma.$email_status_luPayload<ExtArgs> | null
      email_type_lu: Prisma.$email_type_luPayload<ExtArgs> | null
      user_email_xref: Prisma.$user_email_xrefPayload<ExtArgs>[]
      user: Prisma.$userPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      user_id: Prisma.Decimal | null
      email_id: Prisma.Decimal
      email_type_id: Prisma.Decimal | null
      address: string | null
      create_date: Date | null
      modify_date: Date | null
      primary_ind: Prisma.Decimal | null
      status_id: Prisma.Decimal | null
    }, ExtArgs["result"]["email"]>
    composites: {}
  }

  type emailGetPayload<S extends boolean | null | undefined | emailDefaultArgs> = $Result.GetResult<Prisma.$emailPayload, S>

  type emailCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<emailFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EmailCountAggregateInputType | true
    }

  export interface emailDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['email'], meta: { name: 'email' } }
    /**
     * Find zero or one Email that matches the filter.
     * @param {emailFindUniqueArgs} args - Arguments to find a Email
     * @example
     * // Get one Email
     * const email = await prisma.email.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends emailFindUniqueArgs>(args: SelectSubset<T, emailFindUniqueArgs<ExtArgs>>): Prisma__emailClient<$Result.GetResult<Prisma.$emailPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Email that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {emailFindUniqueOrThrowArgs} args - Arguments to find a Email
     * @example
     * // Get one Email
     * const email = await prisma.email.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends emailFindUniqueOrThrowArgs>(args: SelectSubset<T, emailFindUniqueOrThrowArgs<ExtArgs>>): Prisma__emailClient<$Result.GetResult<Prisma.$emailPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Email that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {emailFindFirstArgs} args - Arguments to find a Email
     * @example
     * // Get one Email
     * const email = await prisma.email.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends emailFindFirstArgs>(args?: SelectSubset<T, emailFindFirstArgs<ExtArgs>>): Prisma__emailClient<$Result.GetResult<Prisma.$emailPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Email that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {emailFindFirstOrThrowArgs} args - Arguments to find a Email
     * @example
     * // Get one Email
     * const email = await prisma.email.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends emailFindFirstOrThrowArgs>(args?: SelectSubset<T, emailFindFirstOrThrowArgs<ExtArgs>>): Prisma__emailClient<$Result.GetResult<Prisma.$emailPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Emails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {emailFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Emails
     * const emails = await prisma.email.findMany()
     * 
     * // Get first 10 Emails
     * const emails = await prisma.email.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const emailWithUser_idOnly = await prisma.email.findMany({ select: { user_id: true } })
     * 
     */
    findMany<T extends emailFindManyArgs>(args?: SelectSubset<T, emailFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$emailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Email.
     * @param {emailCreateArgs} args - Arguments to create a Email.
     * @example
     * // Create one Email
     * const Email = await prisma.email.create({
     *   data: {
     *     // ... data to create a Email
     *   }
     * })
     * 
     */
    create<T extends emailCreateArgs>(args: SelectSubset<T, emailCreateArgs<ExtArgs>>): Prisma__emailClient<$Result.GetResult<Prisma.$emailPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Emails.
     * @param {emailCreateManyArgs} args - Arguments to create many Emails.
     * @example
     * // Create many Emails
     * const email = await prisma.email.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends emailCreateManyArgs>(args?: SelectSubset<T, emailCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Emails and returns the data saved in the database.
     * @param {emailCreateManyAndReturnArgs} args - Arguments to create many Emails.
     * @example
     * // Create many Emails
     * const email = await prisma.email.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Emails and only return the `user_id`
     * const emailWithUser_idOnly = await prisma.email.createManyAndReturn({
     *   select: { user_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends emailCreateManyAndReturnArgs>(args?: SelectSubset<T, emailCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$emailPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Email.
     * @param {emailDeleteArgs} args - Arguments to delete one Email.
     * @example
     * // Delete one Email
     * const Email = await prisma.email.delete({
     *   where: {
     *     // ... filter to delete one Email
     *   }
     * })
     * 
     */
    delete<T extends emailDeleteArgs>(args: SelectSubset<T, emailDeleteArgs<ExtArgs>>): Prisma__emailClient<$Result.GetResult<Prisma.$emailPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Email.
     * @param {emailUpdateArgs} args - Arguments to update one Email.
     * @example
     * // Update one Email
     * const email = await prisma.email.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends emailUpdateArgs>(args: SelectSubset<T, emailUpdateArgs<ExtArgs>>): Prisma__emailClient<$Result.GetResult<Prisma.$emailPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Emails.
     * @param {emailDeleteManyArgs} args - Arguments to filter Emails to delete.
     * @example
     * // Delete a few Emails
     * const { count } = await prisma.email.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends emailDeleteManyArgs>(args?: SelectSubset<T, emailDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Emails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {emailUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Emails
     * const email = await prisma.email.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends emailUpdateManyArgs>(args: SelectSubset<T, emailUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Emails and returns the data updated in the database.
     * @param {emailUpdateManyAndReturnArgs} args - Arguments to update many Emails.
     * @example
     * // Update many Emails
     * const email = await prisma.email.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Emails and only return the `user_id`
     * const emailWithUser_idOnly = await prisma.email.updateManyAndReturn({
     *   select: { user_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends emailUpdateManyAndReturnArgs>(args: SelectSubset<T, emailUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$emailPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Email.
     * @param {emailUpsertArgs} args - Arguments to update or create a Email.
     * @example
     * // Update or create a Email
     * const email = await prisma.email.upsert({
     *   create: {
     *     // ... data to create a Email
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Email we want to update
     *   }
     * })
     */
    upsert<T extends emailUpsertArgs>(args: SelectSubset<T, emailUpsertArgs<ExtArgs>>): Prisma__emailClient<$Result.GetResult<Prisma.$emailPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Emails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {emailCountArgs} args - Arguments to filter Emails to count.
     * @example
     * // Count the number of Emails
     * const count = await prisma.email.count({
     *   where: {
     *     // ... the filter for the Emails we want to count
     *   }
     * })
    **/
    count<T extends emailCountArgs>(
      args?: Subset<T, emailCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EmailCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Email.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmailAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EmailAggregateArgs>(args: Subset<T, EmailAggregateArgs>): Prisma.PrismaPromise<GetEmailAggregateType<T>>

    /**
     * Group by Email.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {emailGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends emailGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: emailGroupByArgs['orderBy'] }
        : { orderBy?: emailGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, emailGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmailGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the email model
   */
  readonly fields: emailFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for email.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__emailClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    email_status_lu<T extends email$email_status_luArgs<ExtArgs> = {}>(args?: Subset<T, email$email_status_luArgs<ExtArgs>>): Prisma__email_status_luClient<$Result.GetResult<Prisma.$email_status_luPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    email_type_lu<T extends email$email_type_luArgs<ExtArgs> = {}>(args?: Subset<T, email$email_type_luArgs<ExtArgs>>): Prisma__email_type_luClient<$Result.GetResult<Prisma.$email_type_luPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user_email_xref<T extends email$user_email_xrefArgs<ExtArgs> = {}>(args?: Subset<T, email$user_email_xrefArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_email_xrefPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user<T extends email$userArgs<ExtArgs> = {}>(args?: Subset<T, email$userArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the email model
   */
  interface emailFieldRefs {
    readonly user_id: FieldRef<"email", 'Decimal'>
    readonly email_id: FieldRef<"email", 'Decimal'>
    readonly email_type_id: FieldRef<"email", 'Decimal'>
    readonly address: FieldRef<"email", 'String'>
    readonly create_date: FieldRef<"email", 'DateTime'>
    readonly modify_date: FieldRef<"email", 'DateTime'>
    readonly primary_ind: FieldRef<"email", 'Decimal'>
    readonly status_id: FieldRef<"email", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * email findUnique
   */
  export type emailFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email
     */
    select?: emailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email
     */
    omit?: emailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: emailInclude<ExtArgs> | null
    /**
     * Filter, which email to fetch.
     */
    where: emailWhereUniqueInput
  }

  /**
   * email findUniqueOrThrow
   */
  export type emailFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email
     */
    select?: emailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email
     */
    omit?: emailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: emailInclude<ExtArgs> | null
    /**
     * Filter, which email to fetch.
     */
    where: emailWhereUniqueInput
  }

  /**
   * email findFirst
   */
  export type emailFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email
     */
    select?: emailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email
     */
    omit?: emailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: emailInclude<ExtArgs> | null
    /**
     * Filter, which email to fetch.
     */
    where?: emailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of emails to fetch.
     */
    orderBy?: emailOrderByWithRelationInput | emailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for emails.
     */
    cursor?: emailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` emails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` emails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of emails.
     */
    distinct?: EmailScalarFieldEnum | EmailScalarFieldEnum[]
  }

  /**
   * email findFirstOrThrow
   */
  export type emailFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email
     */
    select?: emailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email
     */
    omit?: emailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: emailInclude<ExtArgs> | null
    /**
     * Filter, which email to fetch.
     */
    where?: emailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of emails to fetch.
     */
    orderBy?: emailOrderByWithRelationInput | emailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for emails.
     */
    cursor?: emailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` emails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` emails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of emails.
     */
    distinct?: EmailScalarFieldEnum | EmailScalarFieldEnum[]
  }

  /**
   * email findMany
   */
  export type emailFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email
     */
    select?: emailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email
     */
    omit?: emailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: emailInclude<ExtArgs> | null
    /**
     * Filter, which emails to fetch.
     */
    where?: emailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of emails to fetch.
     */
    orderBy?: emailOrderByWithRelationInput | emailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing emails.
     */
    cursor?: emailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` emails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` emails.
     */
    skip?: number
    distinct?: EmailScalarFieldEnum | EmailScalarFieldEnum[]
  }

  /**
   * email create
   */
  export type emailCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email
     */
    select?: emailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email
     */
    omit?: emailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: emailInclude<ExtArgs> | null
    /**
     * The data needed to create a email.
     */
    data?: XOR<emailCreateInput, emailUncheckedCreateInput>
  }

  /**
   * email createMany
   */
  export type emailCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many emails.
     */
    data: emailCreateManyInput | emailCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * email createManyAndReturn
   */
  export type emailCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email
     */
    select?: emailSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the email
     */
    omit?: emailOmit<ExtArgs> | null
    /**
     * The data used to create many emails.
     */
    data: emailCreateManyInput | emailCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: emailIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * email update
   */
  export type emailUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email
     */
    select?: emailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email
     */
    omit?: emailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: emailInclude<ExtArgs> | null
    /**
     * The data needed to update a email.
     */
    data: XOR<emailUpdateInput, emailUncheckedUpdateInput>
    /**
     * Choose, which email to update.
     */
    where: emailWhereUniqueInput
  }

  /**
   * email updateMany
   */
  export type emailUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update emails.
     */
    data: XOR<emailUpdateManyMutationInput, emailUncheckedUpdateManyInput>
    /**
     * Filter which emails to update
     */
    where?: emailWhereInput
    /**
     * Limit how many emails to update.
     */
    limit?: number
  }

  /**
   * email updateManyAndReturn
   */
  export type emailUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email
     */
    select?: emailSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the email
     */
    omit?: emailOmit<ExtArgs> | null
    /**
     * The data used to update emails.
     */
    data: XOR<emailUpdateManyMutationInput, emailUncheckedUpdateManyInput>
    /**
     * Filter which emails to update
     */
    where?: emailWhereInput
    /**
     * Limit how many emails to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: emailIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * email upsert
   */
  export type emailUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email
     */
    select?: emailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email
     */
    omit?: emailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: emailInclude<ExtArgs> | null
    /**
     * The filter to search for the email to update in case it exists.
     */
    where: emailWhereUniqueInput
    /**
     * In case the email found by the `where` argument doesn't exist, create a new email with this data.
     */
    create: XOR<emailCreateInput, emailUncheckedCreateInput>
    /**
     * In case the email was found with the provided `where` argument, update it with this data.
     */
    update: XOR<emailUpdateInput, emailUncheckedUpdateInput>
  }

  /**
   * email delete
   */
  export type emailDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email
     */
    select?: emailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email
     */
    omit?: emailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: emailInclude<ExtArgs> | null
    /**
     * Filter which email to delete.
     */
    where: emailWhereUniqueInput
  }

  /**
   * email deleteMany
   */
  export type emailDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which emails to delete
     */
    where?: emailWhereInput
    /**
     * Limit how many emails to delete.
     */
    limit?: number
  }

  /**
   * email.email_status_lu
   */
  export type email$email_status_luArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_status_lu
     */
    select?: email_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_status_lu
     */
    omit?: email_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: email_status_luInclude<ExtArgs> | null
    where?: email_status_luWhereInput
  }

  /**
   * email.email_type_lu
   */
  export type email$email_type_luArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_type_lu
     */
    select?: email_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_type_lu
     */
    omit?: email_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: email_type_luInclude<ExtArgs> | null
    where?: email_type_luWhereInput
  }

  /**
   * email.user_email_xref
   */
  export type email$user_email_xrefArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_email_xref
     */
    select?: user_email_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_email_xref
     */
    omit?: user_email_xrefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_email_xrefInclude<ExtArgs> | null
    where?: user_email_xrefWhereInput
    orderBy?: user_email_xrefOrderByWithRelationInput | user_email_xrefOrderByWithRelationInput[]
    cursor?: user_email_xrefWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_email_xrefScalarFieldEnum | User_email_xrefScalarFieldEnum[]
  }

  /**
   * email.user
   */
  export type email$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
  }

  /**
   * email without action
   */
  export type emailDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email
     */
    select?: emailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email
     */
    omit?: emailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: emailInclude<ExtArgs> | null
  }


  /**
   * Model email_status_lu
   */

  export type AggregateEmail_status_lu = {
    _count: Email_status_luCountAggregateOutputType | null
    _avg: Email_status_luAvgAggregateOutputType | null
    _sum: Email_status_luSumAggregateOutputType | null
    _min: Email_status_luMinAggregateOutputType | null
    _max: Email_status_luMaxAggregateOutputType | null
  }

  export type Email_status_luAvgAggregateOutputType = {
    status_id: Decimal | null
  }

  export type Email_status_luSumAggregateOutputType = {
    status_id: Decimal | null
  }

  export type Email_status_luMinAggregateOutputType = {
    status_id: Decimal | null
    status_desc: string | null
    create_date: Date | null
    modify_date: Date | null
  }

  export type Email_status_luMaxAggregateOutputType = {
    status_id: Decimal | null
    status_desc: string | null
    create_date: Date | null
    modify_date: Date | null
  }

  export type Email_status_luCountAggregateOutputType = {
    status_id: number
    status_desc: number
    create_date: number
    modify_date: number
    _all: number
  }


  export type Email_status_luAvgAggregateInputType = {
    status_id?: true
  }

  export type Email_status_luSumAggregateInputType = {
    status_id?: true
  }

  export type Email_status_luMinAggregateInputType = {
    status_id?: true
    status_desc?: true
    create_date?: true
    modify_date?: true
  }

  export type Email_status_luMaxAggregateInputType = {
    status_id?: true
    status_desc?: true
    create_date?: true
    modify_date?: true
  }

  export type Email_status_luCountAggregateInputType = {
    status_id?: true
    status_desc?: true
    create_date?: true
    modify_date?: true
    _all?: true
  }

  export type Email_status_luAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which email_status_lu to aggregate.
     */
    where?: email_status_luWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of email_status_lus to fetch.
     */
    orderBy?: email_status_luOrderByWithRelationInput | email_status_luOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: email_status_luWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` email_status_lus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` email_status_lus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned email_status_lus
    **/
    _count?: true | Email_status_luCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Email_status_luAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Email_status_luSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Email_status_luMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Email_status_luMaxAggregateInputType
  }

  export type GetEmail_status_luAggregateType<T extends Email_status_luAggregateArgs> = {
        [P in keyof T & keyof AggregateEmail_status_lu]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmail_status_lu[P]>
      : GetScalarType<T[P], AggregateEmail_status_lu[P]>
  }




  export type email_status_luGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: email_status_luWhereInput
    orderBy?: email_status_luOrderByWithAggregationInput | email_status_luOrderByWithAggregationInput[]
    by: Email_status_luScalarFieldEnum[] | Email_status_luScalarFieldEnum
    having?: email_status_luScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Email_status_luCountAggregateInputType | true
    _avg?: Email_status_luAvgAggregateInputType
    _sum?: Email_status_luSumAggregateInputType
    _min?: Email_status_luMinAggregateInputType
    _max?: Email_status_luMaxAggregateInputType
  }

  export type Email_status_luGroupByOutputType = {
    status_id: Decimal
    status_desc: string | null
    create_date: Date | null
    modify_date: Date | null
    _count: Email_status_luCountAggregateOutputType | null
    _avg: Email_status_luAvgAggregateOutputType | null
    _sum: Email_status_luSumAggregateOutputType | null
    _min: Email_status_luMinAggregateOutputType | null
    _max: Email_status_luMaxAggregateOutputType | null
  }

  type GetEmail_status_luGroupByPayload<T extends email_status_luGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Email_status_luGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Email_status_luGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Email_status_luGroupByOutputType[P]>
            : GetScalarType<T[P], Email_status_luGroupByOutputType[P]>
        }
      >
    >


  export type email_status_luSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    status_id?: boolean
    status_desc?: boolean
    create_date?: boolean
    modify_date?: boolean
    email?: boolean | email_status_lu$emailArgs<ExtArgs>
    user_email_xref?: boolean | email_status_lu$user_email_xrefArgs<ExtArgs>
    _count?: boolean | Email_status_luCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["email_status_lu"]>

  export type email_status_luSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    status_id?: boolean
    status_desc?: boolean
    create_date?: boolean
    modify_date?: boolean
  }, ExtArgs["result"]["email_status_lu"]>

  export type email_status_luSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    status_id?: boolean
    status_desc?: boolean
    create_date?: boolean
    modify_date?: boolean
  }, ExtArgs["result"]["email_status_lu"]>

  export type email_status_luSelectScalar = {
    status_id?: boolean
    status_desc?: boolean
    create_date?: boolean
    modify_date?: boolean
  }

  export type email_status_luOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"status_id" | "status_desc" | "create_date" | "modify_date", ExtArgs["result"]["email_status_lu"]>
  export type email_status_luInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    email?: boolean | email_status_lu$emailArgs<ExtArgs>
    user_email_xref?: boolean | email_status_lu$user_email_xrefArgs<ExtArgs>
    _count?: boolean | Email_status_luCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type email_status_luIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type email_status_luIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $email_status_luPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "email_status_lu"
    objects: {
      email: Prisma.$emailPayload<ExtArgs>[]
      user_email_xref: Prisma.$user_email_xrefPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      status_id: Prisma.Decimal
      status_desc: string | null
      create_date: Date | null
      modify_date: Date | null
    }, ExtArgs["result"]["email_status_lu"]>
    composites: {}
  }

  type email_status_luGetPayload<S extends boolean | null | undefined | email_status_luDefaultArgs> = $Result.GetResult<Prisma.$email_status_luPayload, S>

  type email_status_luCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<email_status_luFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Email_status_luCountAggregateInputType | true
    }

  export interface email_status_luDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['email_status_lu'], meta: { name: 'email_status_lu' } }
    /**
     * Find zero or one Email_status_lu that matches the filter.
     * @param {email_status_luFindUniqueArgs} args - Arguments to find a Email_status_lu
     * @example
     * // Get one Email_status_lu
     * const email_status_lu = await prisma.email_status_lu.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends email_status_luFindUniqueArgs>(args: SelectSubset<T, email_status_luFindUniqueArgs<ExtArgs>>): Prisma__email_status_luClient<$Result.GetResult<Prisma.$email_status_luPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Email_status_lu that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {email_status_luFindUniqueOrThrowArgs} args - Arguments to find a Email_status_lu
     * @example
     * // Get one Email_status_lu
     * const email_status_lu = await prisma.email_status_lu.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends email_status_luFindUniqueOrThrowArgs>(args: SelectSubset<T, email_status_luFindUniqueOrThrowArgs<ExtArgs>>): Prisma__email_status_luClient<$Result.GetResult<Prisma.$email_status_luPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Email_status_lu that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_status_luFindFirstArgs} args - Arguments to find a Email_status_lu
     * @example
     * // Get one Email_status_lu
     * const email_status_lu = await prisma.email_status_lu.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends email_status_luFindFirstArgs>(args?: SelectSubset<T, email_status_luFindFirstArgs<ExtArgs>>): Prisma__email_status_luClient<$Result.GetResult<Prisma.$email_status_luPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Email_status_lu that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_status_luFindFirstOrThrowArgs} args - Arguments to find a Email_status_lu
     * @example
     * // Get one Email_status_lu
     * const email_status_lu = await prisma.email_status_lu.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends email_status_luFindFirstOrThrowArgs>(args?: SelectSubset<T, email_status_luFindFirstOrThrowArgs<ExtArgs>>): Prisma__email_status_luClient<$Result.GetResult<Prisma.$email_status_luPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Email_status_lus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_status_luFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Email_status_lus
     * const email_status_lus = await prisma.email_status_lu.findMany()
     * 
     * // Get first 10 Email_status_lus
     * const email_status_lus = await prisma.email_status_lu.findMany({ take: 10 })
     * 
     * // Only select the `status_id`
     * const email_status_luWithStatus_idOnly = await prisma.email_status_lu.findMany({ select: { status_id: true } })
     * 
     */
    findMany<T extends email_status_luFindManyArgs>(args?: SelectSubset<T, email_status_luFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$email_status_luPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Email_status_lu.
     * @param {email_status_luCreateArgs} args - Arguments to create a Email_status_lu.
     * @example
     * // Create one Email_status_lu
     * const Email_status_lu = await prisma.email_status_lu.create({
     *   data: {
     *     // ... data to create a Email_status_lu
     *   }
     * })
     * 
     */
    create<T extends email_status_luCreateArgs>(args: SelectSubset<T, email_status_luCreateArgs<ExtArgs>>): Prisma__email_status_luClient<$Result.GetResult<Prisma.$email_status_luPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Email_status_lus.
     * @param {email_status_luCreateManyArgs} args - Arguments to create many Email_status_lus.
     * @example
     * // Create many Email_status_lus
     * const email_status_lu = await prisma.email_status_lu.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends email_status_luCreateManyArgs>(args?: SelectSubset<T, email_status_luCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Email_status_lus and returns the data saved in the database.
     * @param {email_status_luCreateManyAndReturnArgs} args - Arguments to create many Email_status_lus.
     * @example
     * // Create many Email_status_lus
     * const email_status_lu = await prisma.email_status_lu.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Email_status_lus and only return the `status_id`
     * const email_status_luWithStatus_idOnly = await prisma.email_status_lu.createManyAndReturn({
     *   select: { status_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends email_status_luCreateManyAndReturnArgs>(args?: SelectSubset<T, email_status_luCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$email_status_luPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Email_status_lu.
     * @param {email_status_luDeleteArgs} args - Arguments to delete one Email_status_lu.
     * @example
     * // Delete one Email_status_lu
     * const Email_status_lu = await prisma.email_status_lu.delete({
     *   where: {
     *     // ... filter to delete one Email_status_lu
     *   }
     * })
     * 
     */
    delete<T extends email_status_luDeleteArgs>(args: SelectSubset<T, email_status_luDeleteArgs<ExtArgs>>): Prisma__email_status_luClient<$Result.GetResult<Prisma.$email_status_luPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Email_status_lu.
     * @param {email_status_luUpdateArgs} args - Arguments to update one Email_status_lu.
     * @example
     * // Update one Email_status_lu
     * const email_status_lu = await prisma.email_status_lu.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends email_status_luUpdateArgs>(args: SelectSubset<T, email_status_luUpdateArgs<ExtArgs>>): Prisma__email_status_luClient<$Result.GetResult<Prisma.$email_status_luPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Email_status_lus.
     * @param {email_status_luDeleteManyArgs} args - Arguments to filter Email_status_lus to delete.
     * @example
     * // Delete a few Email_status_lus
     * const { count } = await prisma.email_status_lu.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends email_status_luDeleteManyArgs>(args?: SelectSubset<T, email_status_luDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Email_status_lus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_status_luUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Email_status_lus
     * const email_status_lu = await prisma.email_status_lu.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends email_status_luUpdateManyArgs>(args: SelectSubset<T, email_status_luUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Email_status_lus and returns the data updated in the database.
     * @param {email_status_luUpdateManyAndReturnArgs} args - Arguments to update many Email_status_lus.
     * @example
     * // Update many Email_status_lus
     * const email_status_lu = await prisma.email_status_lu.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Email_status_lus and only return the `status_id`
     * const email_status_luWithStatus_idOnly = await prisma.email_status_lu.updateManyAndReturn({
     *   select: { status_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends email_status_luUpdateManyAndReturnArgs>(args: SelectSubset<T, email_status_luUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$email_status_luPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Email_status_lu.
     * @param {email_status_luUpsertArgs} args - Arguments to update or create a Email_status_lu.
     * @example
     * // Update or create a Email_status_lu
     * const email_status_lu = await prisma.email_status_lu.upsert({
     *   create: {
     *     // ... data to create a Email_status_lu
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Email_status_lu we want to update
     *   }
     * })
     */
    upsert<T extends email_status_luUpsertArgs>(args: SelectSubset<T, email_status_luUpsertArgs<ExtArgs>>): Prisma__email_status_luClient<$Result.GetResult<Prisma.$email_status_luPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Email_status_lus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_status_luCountArgs} args - Arguments to filter Email_status_lus to count.
     * @example
     * // Count the number of Email_status_lus
     * const count = await prisma.email_status_lu.count({
     *   where: {
     *     // ... the filter for the Email_status_lus we want to count
     *   }
     * })
    **/
    count<T extends email_status_luCountArgs>(
      args?: Subset<T, email_status_luCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Email_status_luCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Email_status_lu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Email_status_luAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Email_status_luAggregateArgs>(args: Subset<T, Email_status_luAggregateArgs>): Prisma.PrismaPromise<GetEmail_status_luAggregateType<T>>

    /**
     * Group by Email_status_lu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_status_luGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends email_status_luGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: email_status_luGroupByArgs['orderBy'] }
        : { orderBy?: email_status_luGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, email_status_luGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmail_status_luGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the email_status_lu model
   */
  readonly fields: email_status_luFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for email_status_lu.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__email_status_luClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    email<T extends email_status_lu$emailArgs<ExtArgs> = {}>(args?: Subset<T, email_status_lu$emailArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$emailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_email_xref<T extends email_status_lu$user_email_xrefArgs<ExtArgs> = {}>(args?: Subset<T, email_status_lu$user_email_xrefArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_email_xrefPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the email_status_lu model
   */
  interface email_status_luFieldRefs {
    readonly status_id: FieldRef<"email_status_lu", 'Decimal'>
    readonly status_desc: FieldRef<"email_status_lu", 'String'>
    readonly create_date: FieldRef<"email_status_lu", 'DateTime'>
    readonly modify_date: FieldRef<"email_status_lu", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * email_status_lu findUnique
   */
  export type email_status_luFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_status_lu
     */
    select?: email_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_status_lu
     */
    omit?: email_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: email_status_luInclude<ExtArgs> | null
    /**
     * Filter, which email_status_lu to fetch.
     */
    where: email_status_luWhereUniqueInput
  }

  /**
   * email_status_lu findUniqueOrThrow
   */
  export type email_status_luFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_status_lu
     */
    select?: email_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_status_lu
     */
    omit?: email_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: email_status_luInclude<ExtArgs> | null
    /**
     * Filter, which email_status_lu to fetch.
     */
    where: email_status_luWhereUniqueInput
  }

  /**
   * email_status_lu findFirst
   */
  export type email_status_luFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_status_lu
     */
    select?: email_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_status_lu
     */
    omit?: email_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: email_status_luInclude<ExtArgs> | null
    /**
     * Filter, which email_status_lu to fetch.
     */
    where?: email_status_luWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of email_status_lus to fetch.
     */
    orderBy?: email_status_luOrderByWithRelationInput | email_status_luOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for email_status_lus.
     */
    cursor?: email_status_luWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` email_status_lus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` email_status_lus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of email_status_lus.
     */
    distinct?: Email_status_luScalarFieldEnum | Email_status_luScalarFieldEnum[]
  }

  /**
   * email_status_lu findFirstOrThrow
   */
  export type email_status_luFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_status_lu
     */
    select?: email_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_status_lu
     */
    omit?: email_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: email_status_luInclude<ExtArgs> | null
    /**
     * Filter, which email_status_lu to fetch.
     */
    where?: email_status_luWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of email_status_lus to fetch.
     */
    orderBy?: email_status_luOrderByWithRelationInput | email_status_luOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for email_status_lus.
     */
    cursor?: email_status_luWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` email_status_lus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` email_status_lus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of email_status_lus.
     */
    distinct?: Email_status_luScalarFieldEnum | Email_status_luScalarFieldEnum[]
  }

  /**
   * email_status_lu findMany
   */
  export type email_status_luFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_status_lu
     */
    select?: email_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_status_lu
     */
    omit?: email_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: email_status_luInclude<ExtArgs> | null
    /**
     * Filter, which email_status_lus to fetch.
     */
    where?: email_status_luWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of email_status_lus to fetch.
     */
    orderBy?: email_status_luOrderByWithRelationInput | email_status_luOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing email_status_lus.
     */
    cursor?: email_status_luWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` email_status_lus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` email_status_lus.
     */
    skip?: number
    distinct?: Email_status_luScalarFieldEnum | Email_status_luScalarFieldEnum[]
  }

  /**
   * email_status_lu create
   */
  export type email_status_luCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_status_lu
     */
    select?: email_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_status_lu
     */
    omit?: email_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: email_status_luInclude<ExtArgs> | null
    /**
     * The data needed to create a email_status_lu.
     */
    data: XOR<email_status_luCreateInput, email_status_luUncheckedCreateInput>
  }

  /**
   * email_status_lu createMany
   */
  export type email_status_luCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many email_status_lus.
     */
    data: email_status_luCreateManyInput | email_status_luCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * email_status_lu createManyAndReturn
   */
  export type email_status_luCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_status_lu
     */
    select?: email_status_luSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the email_status_lu
     */
    omit?: email_status_luOmit<ExtArgs> | null
    /**
     * The data used to create many email_status_lus.
     */
    data: email_status_luCreateManyInput | email_status_luCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * email_status_lu update
   */
  export type email_status_luUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_status_lu
     */
    select?: email_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_status_lu
     */
    omit?: email_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: email_status_luInclude<ExtArgs> | null
    /**
     * The data needed to update a email_status_lu.
     */
    data: XOR<email_status_luUpdateInput, email_status_luUncheckedUpdateInput>
    /**
     * Choose, which email_status_lu to update.
     */
    where: email_status_luWhereUniqueInput
  }

  /**
   * email_status_lu updateMany
   */
  export type email_status_luUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update email_status_lus.
     */
    data: XOR<email_status_luUpdateManyMutationInput, email_status_luUncheckedUpdateManyInput>
    /**
     * Filter which email_status_lus to update
     */
    where?: email_status_luWhereInput
    /**
     * Limit how many email_status_lus to update.
     */
    limit?: number
  }

  /**
   * email_status_lu updateManyAndReturn
   */
  export type email_status_luUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_status_lu
     */
    select?: email_status_luSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the email_status_lu
     */
    omit?: email_status_luOmit<ExtArgs> | null
    /**
     * The data used to update email_status_lus.
     */
    data: XOR<email_status_luUpdateManyMutationInput, email_status_luUncheckedUpdateManyInput>
    /**
     * Filter which email_status_lus to update
     */
    where?: email_status_luWhereInput
    /**
     * Limit how many email_status_lus to update.
     */
    limit?: number
  }

  /**
   * email_status_lu upsert
   */
  export type email_status_luUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_status_lu
     */
    select?: email_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_status_lu
     */
    omit?: email_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: email_status_luInclude<ExtArgs> | null
    /**
     * The filter to search for the email_status_lu to update in case it exists.
     */
    where: email_status_luWhereUniqueInput
    /**
     * In case the email_status_lu found by the `where` argument doesn't exist, create a new email_status_lu with this data.
     */
    create: XOR<email_status_luCreateInput, email_status_luUncheckedCreateInput>
    /**
     * In case the email_status_lu was found with the provided `where` argument, update it with this data.
     */
    update: XOR<email_status_luUpdateInput, email_status_luUncheckedUpdateInput>
  }

  /**
   * email_status_lu delete
   */
  export type email_status_luDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_status_lu
     */
    select?: email_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_status_lu
     */
    omit?: email_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: email_status_luInclude<ExtArgs> | null
    /**
     * Filter which email_status_lu to delete.
     */
    where: email_status_luWhereUniqueInput
  }

  /**
   * email_status_lu deleteMany
   */
  export type email_status_luDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which email_status_lus to delete
     */
    where?: email_status_luWhereInput
    /**
     * Limit how many email_status_lus to delete.
     */
    limit?: number
  }

  /**
   * email_status_lu.email
   */
  export type email_status_lu$emailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email
     */
    select?: emailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email
     */
    omit?: emailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: emailInclude<ExtArgs> | null
    where?: emailWhereInput
    orderBy?: emailOrderByWithRelationInput | emailOrderByWithRelationInput[]
    cursor?: emailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EmailScalarFieldEnum | EmailScalarFieldEnum[]
  }

  /**
   * email_status_lu.user_email_xref
   */
  export type email_status_lu$user_email_xrefArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_email_xref
     */
    select?: user_email_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_email_xref
     */
    omit?: user_email_xrefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_email_xrefInclude<ExtArgs> | null
    where?: user_email_xrefWhereInput
    orderBy?: user_email_xrefOrderByWithRelationInput | user_email_xrefOrderByWithRelationInput[]
    cursor?: user_email_xrefWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_email_xrefScalarFieldEnum | User_email_xrefScalarFieldEnum[]
  }

  /**
   * email_status_lu without action
   */
  export type email_status_luDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_status_lu
     */
    select?: email_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_status_lu
     */
    omit?: email_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: email_status_luInclude<ExtArgs> | null
  }


  /**
   * Model email_type_lu
   */

  export type AggregateEmail_type_lu = {
    _count: Email_type_luCountAggregateOutputType | null
    _avg: Email_type_luAvgAggregateOutputType | null
    _sum: Email_type_luSumAggregateOutputType | null
    _min: Email_type_luMinAggregateOutputType | null
    _max: Email_type_luMaxAggregateOutputType | null
  }

  export type Email_type_luAvgAggregateOutputType = {
    email_type_id: Decimal | null
  }

  export type Email_type_luSumAggregateOutputType = {
    email_type_id: Decimal | null
  }

  export type Email_type_luMinAggregateOutputType = {
    email_type_id: Decimal | null
    email_type_desc: string | null
    create_date: Date | null
    modify_date: Date | null
  }

  export type Email_type_luMaxAggregateOutputType = {
    email_type_id: Decimal | null
    email_type_desc: string | null
    create_date: Date | null
    modify_date: Date | null
  }

  export type Email_type_luCountAggregateOutputType = {
    email_type_id: number
    email_type_desc: number
    create_date: number
    modify_date: number
    _all: number
  }


  export type Email_type_luAvgAggregateInputType = {
    email_type_id?: true
  }

  export type Email_type_luSumAggregateInputType = {
    email_type_id?: true
  }

  export type Email_type_luMinAggregateInputType = {
    email_type_id?: true
    email_type_desc?: true
    create_date?: true
    modify_date?: true
  }

  export type Email_type_luMaxAggregateInputType = {
    email_type_id?: true
    email_type_desc?: true
    create_date?: true
    modify_date?: true
  }

  export type Email_type_luCountAggregateInputType = {
    email_type_id?: true
    email_type_desc?: true
    create_date?: true
    modify_date?: true
    _all?: true
  }

  export type Email_type_luAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which email_type_lu to aggregate.
     */
    where?: email_type_luWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of email_type_lus to fetch.
     */
    orderBy?: email_type_luOrderByWithRelationInput | email_type_luOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: email_type_luWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` email_type_lus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` email_type_lus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned email_type_lus
    **/
    _count?: true | Email_type_luCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Email_type_luAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Email_type_luSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Email_type_luMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Email_type_luMaxAggregateInputType
  }

  export type GetEmail_type_luAggregateType<T extends Email_type_luAggregateArgs> = {
        [P in keyof T & keyof AggregateEmail_type_lu]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmail_type_lu[P]>
      : GetScalarType<T[P], AggregateEmail_type_lu[P]>
  }




  export type email_type_luGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: email_type_luWhereInput
    orderBy?: email_type_luOrderByWithAggregationInput | email_type_luOrderByWithAggregationInput[]
    by: Email_type_luScalarFieldEnum[] | Email_type_luScalarFieldEnum
    having?: email_type_luScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Email_type_luCountAggregateInputType | true
    _avg?: Email_type_luAvgAggregateInputType
    _sum?: Email_type_luSumAggregateInputType
    _min?: Email_type_luMinAggregateInputType
    _max?: Email_type_luMaxAggregateInputType
  }

  export type Email_type_luGroupByOutputType = {
    email_type_id: Decimal
    email_type_desc: string | null
    create_date: Date | null
    modify_date: Date | null
    _count: Email_type_luCountAggregateOutputType | null
    _avg: Email_type_luAvgAggregateOutputType | null
    _sum: Email_type_luSumAggregateOutputType | null
    _min: Email_type_luMinAggregateOutputType | null
    _max: Email_type_luMaxAggregateOutputType | null
  }

  type GetEmail_type_luGroupByPayload<T extends email_type_luGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Email_type_luGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Email_type_luGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Email_type_luGroupByOutputType[P]>
            : GetScalarType<T[P], Email_type_luGroupByOutputType[P]>
        }
      >
    >


  export type email_type_luSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    email_type_id?: boolean
    email_type_desc?: boolean
    create_date?: boolean
    modify_date?: boolean
    email?: boolean | email_type_lu$emailArgs<ExtArgs>
    _count?: boolean | Email_type_luCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["email_type_lu"]>

  export type email_type_luSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    email_type_id?: boolean
    email_type_desc?: boolean
    create_date?: boolean
    modify_date?: boolean
  }, ExtArgs["result"]["email_type_lu"]>

  export type email_type_luSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    email_type_id?: boolean
    email_type_desc?: boolean
    create_date?: boolean
    modify_date?: boolean
  }, ExtArgs["result"]["email_type_lu"]>

  export type email_type_luSelectScalar = {
    email_type_id?: boolean
    email_type_desc?: boolean
    create_date?: boolean
    modify_date?: boolean
  }

  export type email_type_luOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"email_type_id" | "email_type_desc" | "create_date" | "modify_date", ExtArgs["result"]["email_type_lu"]>
  export type email_type_luInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    email?: boolean | email_type_lu$emailArgs<ExtArgs>
    _count?: boolean | Email_type_luCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type email_type_luIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type email_type_luIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $email_type_luPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "email_type_lu"
    objects: {
      email: Prisma.$emailPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      email_type_id: Prisma.Decimal
      email_type_desc: string | null
      create_date: Date | null
      modify_date: Date | null
    }, ExtArgs["result"]["email_type_lu"]>
    composites: {}
  }

  type email_type_luGetPayload<S extends boolean | null | undefined | email_type_luDefaultArgs> = $Result.GetResult<Prisma.$email_type_luPayload, S>

  type email_type_luCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<email_type_luFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Email_type_luCountAggregateInputType | true
    }

  export interface email_type_luDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['email_type_lu'], meta: { name: 'email_type_lu' } }
    /**
     * Find zero or one Email_type_lu that matches the filter.
     * @param {email_type_luFindUniqueArgs} args - Arguments to find a Email_type_lu
     * @example
     * // Get one Email_type_lu
     * const email_type_lu = await prisma.email_type_lu.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends email_type_luFindUniqueArgs>(args: SelectSubset<T, email_type_luFindUniqueArgs<ExtArgs>>): Prisma__email_type_luClient<$Result.GetResult<Prisma.$email_type_luPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Email_type_lu that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {email_type_luFindUniqueOrThrowArgs} args - Arguments to find a Email_type_lu
     * @example
     * // Get one Email_type_lu
     * const email_type_lu = await prisma.email_type_lu.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends email_type_luFindUniqueOrThrowArgs>(args: SelectSubset<T, email_type_luFindUniqueOrThrowArgs<ExtArgs>>): Prisma__email_type_luClient<$Result.GetResult<Prisma.$email_type_luPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Email_type_lu that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_type_luFindFirstArgs} args - Arguments to find a Email_type_lu
     * @example
     * // Get one Email_type_lu
     * const email_type_lu = await prisma.email_type_lu.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends email_type_luFindFirstArgs>(args?: SelectSubset<T, email_type_luFindFirstArgs<ExtArgs>>): Prisma__email_type_luClient<$Result.GetResult<Prisma.$email_type_luPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Email_type_lu that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_type_luFindFirstOrThrowArgs} args - Arguments to find a Email_type_lu
     * @example
     * // Get one Email_type_lu
     * const email_type_lu = await prisma.email_type_lu.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends email_type_luFindFirstOrThrowArgs>(args?: SelectSubset<T, email_type_luFindFirstOrThrowArgs<ExtArgs>>): Prisma__email_type_luClient<$Result.GetResult<Prisma.$email_type_luPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Email_type_lus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_type_luFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Email_type_lus
     * const email_type_lus = await prisma.email_type_lu.findMany()
     * 
     * // Get first 10 Email_type_lus
     * const email_type_lus = await prisma.email_type_lu.findMany({ take: 10 })
     * 
     * // Only select the `email_type_id`
     * const email_type_luWithEmail_type_idOnly = await prisma.email_type_lu.findMany({ select: { email_type_id: true } })
     * 
     */
    findMany<T extends email_type_luFindManyArgs>(args?: SelectSubset<T, email_type_luFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$email_type_luPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Email_type_lu.
     * @param {email_type_luCreateArgs} args - Arguments to create a Email_type_lu.
     * @example
     * // Create one Email_type_lu
     * const Email_type_lu = await prisma.email_type_lu.create({
     *   data: {
     *     // ... data to create a Email_type_lu
     *   }
     * })
     * 
     */
    create<T extends email_type_luCreateArgs>(args: SelectSubset<T, email_type_luCreateArgs<ExtArgs>>): Prisma__email_type_luClient<$Result.GetResult<Prisma.$email_type_luPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Email_type_lus.
     * @param {email_type_luCreateManyArgs} args - Arguments to create many Email_type_lus.
     * @example
     * // Create many Email_type_lus
     * const email_type_lu = await prisma.email_type_lu.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends email_type_luCreateManyArgs>(args?: SelectSubset<T, email_type_luCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Email_type_lus and returns the data saved in the database.
     * @param {email_type_luCreateManyAndReturnArgs} args - Arguments to create many Email_type_lus.
     * @example
     * // Create many Email_type_lus
     * const email_type_lu = await prisma.email_type_lu.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Email_type_lus and only return the `email_type_id`
     * const email_type_luWithEmail_type_idOnly = await prisma.email_type_lu.createManyAndReturn({
     *   select: { email_type_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends email_type_luCreateManyAndReturnArgs>(args?: SelectSubset<T, email_type_luCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$email_type_luPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Email_type_lu.
     * @param {email_type_luDeleteArgs} args - Arguments to delete one Email_type_lu.
     * @example
     * // Delete one Email_type_lu
     * const Email_type_lu = await prisma.email_type_lu.delete({
     *   where: {
     *     // ... filter to delete one Email_type_lu
     *   }
     * })
     * 
     */
    delete<T extends email_type_luDeleteArgs>(args: SelectSubset<T, email_type_luDeleteArgs<ExtArgs>>): Prisma__email_type_luClient<$Result.GetResult<Prisma.$email_type_luPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Email_type_lu.
     * @param {email_type_luUpdateArgs} args - Arguments to update one Email_type_lu.
     * @example
     * // Update one Email_type_lu
     * const email_type_lu = await prisma.email_type_lu.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends email_type_luUpdateArgs>(args: SelectSubset<T, email_type_luUpdateArgs<ExtArgs>>): Prisma__email_type_luClient<$Result.GetResult<Prisma.$email_type_luPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Email_type_lus.
     * @param {email_type_luDeleteManyArgs} args - Arguments to filter Email_type_lus to delete.
     * @example
     * // Delete a few Email_type_lus
     * const { count } = await prisma.email_type_lu.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends email_type_luDeleteManyArgs>(args?: SelectSubset<T, email_type_luDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Email_type_lus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_type_luUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Email_type_lus
     * const email_type_lu = await prisma.email_type_lu.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends email_type_luUpdateManyArgs>(args: SelectSubset<T, email_type_luUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Email_type_lus and returns the data updated in the database.
     * @param {email_type_luUpdateManyAndReturnArgs} args - Arguments to update many Email_type_lus.
     * @example
     * // Update many Email_type_lus
     * const email_type_lu = await prisma.email_type_lu.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Email_type_lus and only return the `email_type_id`
     * const email_type_luWithEmail_type_idOnly = await prisma.email_type_lu.updateManyAndReturn({
     *   select: { email_type_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends email_type_luUpdateManyAndReturnArgs>(args: SelectSubset<T, email_type_luUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$email_type_luPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Email_type_lu.
     * @param {email_type_luUpsertArgs} args - Arguments to update or create a Email_type_lu.
     * @example
     * // Update or create a Email_type_lu
     * const email_type_lu = await prisma.email_type_lu.upsert({
     *   create: {
     *     // ... data to create a Email_type_lu
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Email_type_lu we want to update
     *   }
     * })
     */
    upsert<T extends email_type_luUpsertArgs>(args: SelectSubset<T, email_type_luUpsertArgs<ExtArgs>>): Prisma__email_type_luClient<$Result.GetResult<Prisma.$email_type_luPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Email_type_lus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_type_luCountArgs} args - Arguments to filter Email_type_lus to count.
     * @example
     * // Count the number of Email_type_lus
     * const count = await prisma.email_type_lu.count({
     *   where: {
     *     // ... the filter for the Email_type_lus we want to count
     *   }
     * })
    **/
    count<T extends email_type_luCountArgs>(
      args?: Subset<T, email_type_luCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Email_type_luCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Email_type_lu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Email_type_luAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Email_type_luAggregateArgs>(args: Subset<T, Email_type_luAggregateArgs>): Prisma.PrismaPromise<GetEmail_type_luAggregateType<T>>

    /**
     * Group by Email_type_lu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_type_luGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends email_type_luGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: email_type_luGroupByArgs['orderBy'] }
        : { orderBy?: email_type_luGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, email_type_luGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmail_type_luGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the email_type_lu model
   */
  readonly fields: email_type_luFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for email_type_lu.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__email_type_luClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    email<T extends email_type_lu$emailArgs<ExtArgs> = {}>(args?: Subset<T, email_type_lu$emailArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$emailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the email_type_lu model
   */
  interface email_type_luFieldRefs {
    readonly email_type_id: FieldRef<"email_type_lu", 'Decimal'>
    readonly email_type_desc: FieldRef<"email_type_lu", 'String'>
    readonly create_date: FieldRef<"email_type_lu", 'DateTime'>
    readonly modify_date: FieldRef<"email_type_lu", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * email_type_lu findUnique
   */
  export type email_type_luFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_type_lu
     */
    select?: email_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_type_lu
     */
    omit?: email_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: email_type_luInclude<ExtArgs> | null
    /**
     * Filter, which email_type_lu to fetch.
     */
    where: email_type_luWhereUniqueInput
  }

  /**
   * email_type_lu findUniqueOrThrow
   */
  export type email_type_luFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_type_lu
     */
    select?: email_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_type_lu
     */
    omit?: email_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: email_type_luInclude<ExtArgs> | null
    /**
     * Filter, which email_type_lu to fetch.
     */
    where: email_type_luWhereUniqueInput
  }

  /**
   * email_type_lu findFirst
   */
  export type email_type_luFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_type_lu
     */
    select?: email_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_type_lu
     */
    omit?: email_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: email_type_luInclude<ExtArgs> | null
    /**
     * Filter, which email_type_lu to fetch.
     */
    where?: email_type_luWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of email_type_lus to fetch.
     */
    orderBy?: email_type_luOrderByWithRelationInput | email_type_luOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for email_type_lus.
     */
    cursor?: email_type_luWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` email_type_lus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` email_type_lus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of email_type_lus.
     */
    distinct?: Email_type_luScalarFieldEnum | Email_type_luScalarFieldEnum[]
  }

  /**
   * email_type_lu findFirstOrThrow
   */
  export type email_type_luFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_type_lu
     */
    select?: email_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_type_lu
     */
    omit?: email_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: email_type_luInclude<ExtArgs> | null
    /**
     * Filter, which email_type_lu to fetch.
     */
    where?: email_type_luWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of email_type_lus to fetch.
     */
    orderBy?: email_type_luOrderByWithRelationInput | email_type_luOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for email_type_lus.
     */
    cursor?: email_type_luWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` email_type_lus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` email_type_lus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of email_type_lus.
     */
    distinct?: Email_type_luScalarFieldEnum | Email_type_luScalarFieldEnum[]
  }

  /**
   * email_type_lu findMany
   */
  export type email_type_luFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_type_lu
     */
    select?: email_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_type_lu
     */
    omit?: email_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: email_type_luInclude<ExtArgs> | null
    /**
     * Filter, which email_type_lus to fetch.
     */
    where?: email_type_luWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of email_type_lus to fetch.
     */
    orderBy?: email_type_luOrderByWithRelationInput | email_type_luOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing email_type_lus.
     */
    cursor?: email_type_luWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` email_type_lus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` email_type_lus.
     */
    skip?: number
    distinct?: Email_type_luScalarFieldEnum | Email_type_luScalarFieldEnum[]
  }

  /**
   * email_type_lu create
   */
  export type email_type_luCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_type_lu
     */
    select?: email_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_type_lu
     */
    omit?: email_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: email_type_luInclude<ExtArgs> | null
    /**
     * The data needed to create a email_type_lu.
     */
    data: XOR<email_type_luCreateInput, email_type_luUncheckedCreateInput>
  }

  /**
   * email_type_lu createMany
   */
  export type email_type_luCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many email_type_lus.
     */
    data: email_type_luCreateManyInput | email_type_luCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * email_type_lu createManyAndReturn
   */
  export type email_type_luCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_type_lu
     */
    select?: email_type_luSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the email_type_lu
     */
    omit?: email_type_luOmit<ExtArgs> | null
    /**
     * The data used to create many email_type_lus.
     */
    data: email_type_luCreateManyInput | email_type_luCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * email_type_lu update
   */
  export type email_type_luUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_type_lu
     */
    select?: email_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_type_lu
     */
    omit?: email_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: email_type_luInclude<ExtArgs> | null
    /**
     * The data needed to update a email_type_lu.
     */
    data: XOR<email_type_luUpdateInput, email_type_luUncheckedUpdateInput>
    /**
     * Choose, which email_type_lu to update.
     */
    where: email_type_luWhereUniqueInput
  }

  /**
   * email_type_lu updateMany
   */
  export type email_type_luUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update email_type_lus.
     */
    data: XOR<email_type_luUpdateManyMutationInput, email_type_luUncheckedUpdateManyInput>
    /**
     * Filter which email_type_lus to update
     */
    where?: email_type_luWhereInput
    /**
     * Limit how many email_type_lus to update.
     */
    limit?: number
  }

  /**
   * email_type_lu updateManyAndReturn
   */
  export type email_type_luUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_type_lu
     */
    select?: email_type_luSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the email_type_lu
     */
    omit?: email_type_luOmit<ExtArgs> | null
    /**
     * The data used to update email_type_lus.
     */
    data: XOR<email_type_luUpdateManyMutationInput, email_type_luUncheckedUpdateManyInput>
    /**
     * Filter which email_type_lus to update
     */
    where?: email_type_luWhereInput
    /**
     * Limit how many email_type_lus to update.
     */
    limit?: number
  }

  /**
   * email_type_lu upsert
   */
  export type email_type_luUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_type_lu
     */
    select?: email_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_type_lu
     */
    omit?: email_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: email_type_luInclude<ExtArgs> | null
    /**
     * The filter to search for the email_type_lu to update in case it exists.
     */
    where: email_type_luWhereUniqueInput
    /**
     * In case the email_type_lu found by the `where` argument doesn't exist, create a new email_type_lu with this data.
     */
    create: XOR<email_type_luCreateInput, email_type_luUncheckedCreateInput>
    /**
     * In case the email_type_lu was found with the provided `where` argument, update it with this data.
     */
    update: XOR<email_type_luUpdateInput, email_type_luUncheckedUpdateInput>
  }

  /**
   * email_type_lu delete
   */
  export type email_type_luDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_type_lu
     */
    select?: email_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_type_lu
     */
    omit?: email_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: email_type_luInclude<ExtArgs> | null
    /**
     * Filter which email_type_lu to delete.
     */
    where: email_type_luWhereUniqueInput
  }

  /**
   * email_type_lu deleteMany
   */
  export type email_type_luDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which email_type_lus to delete
     */
    where?: email_type_luWhereInput
    /**
     * Limit how many email_type_lus to delete.
     */
    limit?: number
  }

  /**
   * email_type_lu.email
   */
  export type email_type_lu$emailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email
     */
    select?: emailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email
     */
    omit?: emailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: emailInclude<ExtArgs> | null
    where?: emailWhereInput
    orderBy?: emailOrderByWithRelationInput | emailOrderByWithRelationInput[]
    cursor?: emailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EmailScalarFieldEnum | EmailScalarFieldEnum[]
  }

  /**
   * email_type_lu without action
   */
  export type email_type_luDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_type_lu
     */
    select?: email_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_type_lu
     */
    omit?: email_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: email_type_luInclude<ExtArgs> | null
  }


  /**
   * Model id_sequences
   */

  export type AggregateId_sequences = {
    _count: Id_sequencesCountAggregateOutputType | null
    _avg: Id_sequencesAvgAggregateOutputType | null
    _sum: Id_sequencesSumAggregateOutputType | null
    _min: Id_sequencesMinAggregateOutputType | null
    _max: Id_sequencesMaxAggregateOutputType | null
  }

  export type Id_sequencesAvgAggregateOutputType = {
    next_block_start: Decimal | null
    block_size: Decimal | null
    exhausted: Decimal | null
  }

  export type Id_sequencesSumAggregateOutputType = {
    next_block_start: Decimal | null
    block_size: Decimal | null
    exhausted: Decimal | null
  }

  export type Id_sequencesMinAggregateOutputType = {
    name: string | null
    next_block_start: Decimal | null
    block_size: Decimal | null
    exhausted: Decimal | null
  }

  export type Id_sequencesMaxAggregateOutputType = {
    name: string | null
    next_block_start: Decimal | null
    block_size: Decimal | null
    exhausted: Decimal | null
  }

  export type Id_sequencesCountAggregateOutputType = {
    name: number
    next_block_start: number
    block_size: number
    exhausted: number
    _all: number
  }


  export type Id_sequencesAvgAggregateInputType = {
    next_block_start?: true
    block_size?: true
    exhausted?: true
  }

  export type Id_sequencesSumAggregateInputType = {
    next_block_start?: true
    block_size?: true
    exhausted?: true
  }

  export type Id_sequencesMinAggregateInputType = {
    name?: true
    next_block_start?: true
    block_size?: true
    exhausted?: true
  }

  export type Id_sequencesMaxAggregateInputType = {
    name?: true
    next_block_start?: true
    block_size?: true
    exhausted?: true
  }

  export type Id_sequencesCountAggregateInputType = {
    name?: true
    next_block_start?: true
    block_size?: true
    exhausted?: true
    _all?: true
  }

  export type Id_sequencesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which id_sequences to aggregate.
     */
    where?: id_sequencesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of id_sequences to fetch.
     */
    orderBy?: id_sequencesOrderByWithRelationInput | id_sequencesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: id_sequencesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` id_sequences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` id_sequences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned id_sequences
    **/
    _count?: true | Id_sequencesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Id_sequencesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Id_sequencesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Id_sequencesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Id_sequencesMaxAggregateInputType
  }

  export type GetId_sequencesAggregateType<T extends Id_sequencesAggregateArgs> = {
        [P in keyof T & keyof AggregateId_sequences]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateId_sequences[P]>
      : GetScalarType<T[P], AggregateId_sequences[P]>
  }




  export type id_sequencesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: id_sequencesWhereInput
    orderBy?: id_sequencesOrderByWithAggregationInput | id_sequencesOrderByWithAggregationInput[]
    by: Id_sequencesScalarFieldEnum[] | Id_sequencesScalarFieldEnum
    having?: id_sequencesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Id_sequencesCountAggregateInputType | true
    _avg?: Id_sequencesAvgAggregateInputType
    _sum?: Id_sequencesSumAggregateInputType
    _min?: Id_sequencesMinAggregateInputType
    _max?: Id_sequencesMaxAggregateInputType
  }

  export type Id_sequencesGroupByOutputType = {
    name: string
    next_block_start: Decimal
    block_size: Decimal
    exhausted: Decimal
    _count: Id_sequencesCountAggregateOutputType | null
    _avg: Id_sequencesAvgAggregateOutputType | null
    _sum: Id_sequencesSumAggregateOutputType | null
    _min: Id_sequencesMinAggregateOutputType | null
    _max: Id_sequencesMaxAggregateOutputType | null
  }

  type GetId_sequencesGroupByPayload<T extends id_sequencesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Id_sequencesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Id_sequencesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Id_sequencesGroupByOutputType[P]>
            : GetScalarType<T[P], Id_sequencesGroupByOutputType[P]>
        }
      >
    >


  export type id_sequencesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    name?: boolean
    next_block_start?: boolean
    block_size?: boolean
    exhausted?: boolean
  }, ExtArgs["result"]["id_sequences"]>

  export type id_sequencesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    name?: boolean
    next_block_start?: boolean
    block_size?: boolean
    exhausted?: boolean
  }, ExtArgs["result"]["id_sequences"]>

  export type id_sequencesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    name?: boolean
    next_block_start?: boolean
    block_size?: boolean
    exhausted?: boolean
  }, ExtArgs["result"]["id_sequences"]>

  export type id_sequencesSelectScalar = {
    name?: boolean
    next_block_start?: boolean
    block_size?: boolean
    exhausted?: boolean
  }

  export type id_sequencesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"name" | "next_block_start" | "block_size" | "exhausted", ExtArgs["result"]["id_sequences"]>

  export type $id_sequencesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "id_sequences"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      name: string
      next_block_start: Prisma.Decimal
      block_size: Prisma.Decimal
      exhausted: Prisma.Decimal
    }, ExtArgs["result"]["id_sequences"]>
    composites: {}
  }

  type id_sequencesGetPayload<S extends boolean | null | undefined | id_sequencesDefaultArgs> = $Result.GetResult<Prisma.$id_sequencesPayload, S>

  type id_sequencesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<id_sequencesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Id_sequencesCountAggregateInputType | true
    }

  export interface id_sequencesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['id_sequences'], meta: { name: 'id_sequences' } }
    /**
     * Find zero or one Id_sequences that matches the filter.
     * @param {id_sequencesFindUniqueArgs} args - Arguments to find a Id_sequences
     * @example
     * // Get one Id_sequences
     * const id_sequences = await prisma.id_sequences.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends id_sequencesFindUniqueArgs>(args: SelectSubset<T, id_sequencesFindUniqueArgs<ExtArgs>>): Prisma__id_sequencesClient<$Result.GetResult<Prisma.$id_sequencesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Id_sequences that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {id_sequencesFindUniqueOrThrowArgs} args - Arguments to find a Id_sequences
     * @example
     * // Get one Id_sequences
     * const id_sequences = await prisma.id_sequences.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends id_sequencesFindUniqueOrThrowArgs>(args: SelectSubset<T, id_sequencesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__id_sequencesClient<$Result.GetResult<Prisma.$id_sequencesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Id_sequences that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {id_sequencesFindFirstArgs} args - Arguments to find a Id_sequences
     * @example
     * // Get one Id_sequences
     * const id_sequences = await prisma.id_sequences.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends id_sequencesFindFirstArgs>(args?: SelectSubset<T, id_sequencesFindFirstArgs<ExtArgs>>): Prisma__id_sequencesClient<$Result.GetResult<Prisma.$id_sequencesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Id_sequences that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {id_sequencesFindFirstOrThrowArgs} args - Arguments to find a Id_sequences
     * @example
     * // Get one Id_sequences
     * const id_sequences = await prisma.id_sequences.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends id_sequencesFindFirstOrThrowArgs>(args?: SelectSubset<T, id_sequencesFindFirstOrThrowArgs<ExtArgs>>): Prisma__id_sequencesClient<$Result.GetResult<Prisma.$id_sequencesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Id_sequences that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {id_sequencesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Id_sequences
     * const id_sequences = await prisma.id_sequences.findMany()
     * 
     * // Get first 10 Id_sequences
     * const id_sequences = await prisma.id_sequences.findMany({ take: 10 })
     * 
     * // Only select the `name`
     * const id_sequencesWithNameOnly = await prisma.id_sequences.findMany({ select: { name: true } })
     * 
     */
    findMany<T extends id_sequencesFindManyArgs>(args?: SelectSubset<T, id_sequencesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$id_sequencesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Id_sequences.
     * @param {id_sequencesCreateArgs} args - Arguments to create a Id_sequences.
     * @example
     * // Create one Id_sequences
     * const Id_sequences = await prisma.id_sequences.create({
     *   data: {
     *     // ... data to create a Id_sequences
     *   }
     * })
     * 
     */
    create<T extends id_sequencesCreateArgs>(args: SelectSubset<T, id_sequencesCreateArgs<ExtArgs>>): Prisma__id_sequencesClient<$Result.GetResult<Prisma.$id_sequencesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Id_sequences.
     * @param {id_sequencesCreateManyArgs} args - Arguments to create many Id_sequences.
     * @example
     * // Create many Id_sequences
     * const id_sequences = await prisma.id_sequences.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends id_sequencesCreateManyArgs>(args?: SelectSubset<T, id_sequencesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Id_sequences and returns the data saved in the database.
     * @param {id_sequencesCreateManyAndReturnArgs} args - Arguments to create many Id_sequences.
     * @example
     * // Create many Id_sequences
     * const id_sequences = await prisma.id_sequences.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Id_sequences and only return the `name`
     * const id_sequencesWithNameOnly = await prisma.id_sequences.createManyAndReturn({
     *   select: { name: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends id_sequencesCreateManyAndReturnArgs>(args?: SelectSubset<T, id_sequencesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$id_sequencesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Id_sequences.
     * @param {id_sequencesDeleteArgs} args - Arguments to delete one Id_sequences.
     * @example
     * // Delete one Id_sequences
     * const Id_sequences = await prisma.id_sequences.delete({
     *   where: {
     *     // ... filter to delete one Id_sequences
     *   }
     * })
     * 
     */
    delete<T extends id_sequencesDeleteArgs>(args: SelectSubset<T, id_sequencesDeleteArgs<ExtArgs>>): Prisma__id_sequencesClient<$Result.GetResult<Prisma.$id_sequencesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Id_sequences.
     * @param {id_sequencesUpdateArgs} args - Arguments to update one Id_sequences.
     * @example
     * // Update one Id_sequences
     * const id_sequences = await prisma.id_sequences.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends id_sequencesUpdateArgs>(args: SelectSubset<T, id_sequencesUpdateArgs<ExtArgs>>): Prisma__id_sequencesClient<$Result.GetResult<Prisma.$id_sequencesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Id_sequences.
     * @param {id_sequencesDeleteManyArgs} args - Arguments to filter Id_sequences to delete.
     * @example
     * // Delete a few Id_sequences
     * const { count } = await prisma.id_sequences.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends id_sequencesDeleteManyArgs>(args?: SelectSubset<T, id_sequencesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Id_sequences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {id_sequencesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Id_sequences
     * const id_sequences = await prisma.id_sequences.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends id_sequencesUpdateManyArgs>(args: SelectSubset<T, id_sequencesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Id_sequences and returns the data updated in the database.
     * @param {id_sequencesUpdateManyAndReturnArgs} args - Arguments to update many Id_sequences.
     * @example
     * // Update many Id_sequences
     * const id_sequences = await prisma.id_sequences.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Id_sequences and only return the `name`
     * const id_sequencesWithNameOnly = await prisma.id_sequences.updateManyAndReturn({
     *   select: { name: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends id_sequencesUpdateManyAndReturnArgs>(args: SelectSubset<T, id_sequencesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$id_sequencesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Id_sequences.
     * @param {id_sequencesUpsertArgs} args - Arguments to update or create a Id_sequences.
     * @example
     * // Update or create a Id_sequences
     * const id_sequences = await prisma.id_sequences.upsert({
     *   create: {
     *     // ... data to create a Id_sequences
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Id_sequences we want to update
     *   }
     * })
     */
    upsert<T extends id_sequencesUpsertArgs>(args: SelectSubset<T, id_sequencesUpsertArgs<ExtArgs>>): Prisma__id_sequencesClient<$Result.GetResult<Prisma.$id_sequencesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Id_sequences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {id_sequencesCountArgs} args - Arguments to filter Id_sequences to count.
     * @example
     * // Count the number of Id_sequences
     * const count = await prisma.id_sequences.count({
     *   where: {
     *     // ... the filter for the Id_sequences we want to count
     *   }
     * })
    **/
    count<T extends id_sequencesCountArgs>(
      args?: Subset<T, id_sequencesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Id_sequencesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Id_sequences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Id_sequencesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Id_sequencesAggregateArgs>(args: Subset<T, Id_sequencesAggregateArgs>): Prisma.PrismaPromise<GetId_sequencesAggregateType<T>>

    /**
     * Group by Id_sequences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {id_sequencesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends id_sequencesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: id_sequencesGroupByArgs['orderBy'] }
        : { orderBy?: id_sequencesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, id_sequencesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetId_sequencesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the id_sequences model
   */
  readonly fields: id_sequencesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for id_sequences.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__id_sequencesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the id_sequences model
   */
  interface id_sequencesFieldRefs {
    readonly name: FieldRef<"id_sequences", 'String'>
    readonly next_block_start: FieldRef<"id_sequences", 'Decimal'>
    readonly block_size: FieldRef<"id_sequences", 'Decimal'>
    readonly exhausted: FieldRef<"id_sequences", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * id_sequences findUnique
   */
  export type id_sequencesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the id_sequences
     */
    select?: id_sequencesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the id_sequences
     */
    omit?: id_sequencesOmit<ExtArgs> | null
    /**
     * Filter, which id_sequences to fetch.
     */
    where: id_sequencesWhereUniqueInput
  }

  /**
   * id_sequences findUniqueOrThrow
   */
  export type id_sequencesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the id_sequences
     */
    select?: id_sequencesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the id_sequences
     */
    omit?: id_sequencesOmit<ExtArgs> | null
    /**
     * Filter, which id_sequences to fetch.
     */
    where: id_sequencesWhereUniqueInput
  }

  /**
   * id_sequences findFirst
   */
  export type id_sequencesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the id_sequences
     */
    select?: id_sequencesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the id_sequences
     */
    omit?: id_sequencesOmit<ExtArgs> | null
    /**
     * Filter, which id_sequences to fetch.
     */
    where?: id_sequencesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of id_sequences to fetch.
     */
    orderBy?: id_sequencesOrderByWithRelationInput | id_sequencesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for id_sequences.
     */
    cursor?: id_sequencesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` id_sequences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` id_sequences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of id_sequences.
     */
    distinct?: Id_sequencesScalarFieldEnum | Id_sequencesScalarFieldEnum[]
  }

  /**
   * id_sequences findFirstOrThrow
   */
  export type id_sequencesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the id_sequences
     */
    select?: id_sequencesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the id_sequences
     */
    omit?: id_sequencesOmit<ExtArgs> | null
    /**
     * Filter, which id_sequences to fetch.
     */
    where?: id_sequencesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of id_sequences to fetch.
     */
    orderBy?: id_sequencesOrderByWithRelationInput | id_sequencesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for id_sequences.
     */
    cursor?: id_sequencesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` id_sequences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` id_sequences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of id_sequences.
     */
    distinct?: Id_sequencesScalarFieldEnum | Id_sequencesScalarFieldEnum[]
  }

  /**
   * id_sequences findMany
   */
  export type id_sequencesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the id_sequences
     */
    select?: id_sequencesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the id_sequences
     */
    omit?: id_sequencesOmit<ExtArgs> | null
    /**
     * Filter, which id_sequences to fetch.
     */
    where?: id_sequencesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of id_sequences to fetch.
     */
    orderBy?: id_sequencesOrderByWithRelationInput | id_sequencesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing id_sequences.
     */
    cursor?: id_sequencesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` id_sequences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` id_sequences.
     */
    skip?: number
    distinct?: Id_sequencesScalarFieldEnum | Id_sequencesScalarFieldEnum[]
  }

  /**
   * id_sequences create
   */
  export type id_sequencesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the id_sequences
     */
    select?: id_sequencesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the id_sequences
     */
    omit?: id_sequencesOmit<ExtArgs> | null
    /**
     * The data needed to create a id_sequences.
     */
    data: XOR<id_sequencesCreateInput, id_sequencesUncheckedCreateInput>
  }

  /**
   * id_sequences createMany
   */
  export type id_sequencesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many id_sequences.
     */
    data: id_sequencesCreateManyInput | id_sequencesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * id_sequences createManyAndReturn
   */
  export type id_sequencesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the id_sequences
     */
    select?: id_sequencesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the id_sequences
     */
    omit?: id_sequencesOmit<ExtArgs> | null
    /**
     * The data used to create many id_sequences.
     */
    data: id_sequencesCreateManyInput | id_sequencesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * id_sequences update
   */
  export type id_sequencesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the id_sequences
     */
    select?: id_sequencesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the id_sequences
     */
    omit?: id_sequencesOmit<ExtArgs> | null
    /**
     * The data needed to update a id_sequences.
     */
    data: XOR<id_sequencesUpdateInput, id_sequencesUncheckedUpdateInput>
    /**
     * Choose, which id_sequences to update.
     */
    where: id_sequencesWhereUniqueInput
  }

  /**
   * id_sequences updateMany
   */
  export type id_sequencesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update id_sequences.
     */
    data: XOR<id_sequencesUpdateManyMutationInput, id_sequencesUncheckedUpdateManyInput>
    /**
     * Filter which id_sequences to update
     */
    where?: id_sequencesWhereInput
    /**
     * Limit how many id_sequences to update.
     */
    limit?: number
  }

  /**
   * id_sequences updateManyAndReturn
   */
  export type id_sequencesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the id_sequences
     */
    select?: id_sequencesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the id_sequences
     */
    omit?: id_sequencesOmit<ExtArgs> | null
    /**
     * The data used to update id_sequences.
     */
    data: XOR<id_sequencesUpdateManyMutationInput, id_sequencesUncheckedUpdateManyInput>
    /**
     * Filter which id_sequences to update
     */
    where?: id_sequencesWhereInput
    /**
     * Limit how many id_sequences to update.
     */
    limit?: number
  }

  /**
   * id_sequences upsert
   */
  export type id_sequencesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the id_sequences
     */
    select?: id_sequencesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the id_sequences
     */
    omit?: id_sequencesOmit<ExtArgs> | null
    /**
     * The filter to search for the id_sequences to update in case it exists.
     */
    where: id_sequencesWhereUniqueInput
    /**
     * In case the id_sequences found by the `where` argument doesn't exist, create a new id_sequences with this data.
     */
    create: XOR<id_sequencesCreateInput, id_sequencesUncheckedCreateInput>
    /**
     * In case the id_sequences was found with the provided `where` argument, update it with this data.
     */
    update: XOR<id_sequencesUpdateInput, id_sequencesUncheckedUpdateInput>
  }

  /**
   * id_sequences delete
   */
  export type id_sequencesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the id_sequences
     */
    select?: id_sequencesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the id_sequences
     */
    omit?: id_sequencesOmit<ExtArgs> | null
    /**
     * Filter which id_sequences to delete.
     */
    where: id_sequencesWhereUniqueInput
  }

  /**
   * id_sequences deleteMany
   */
  export type id_sequencesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which id_sequences to delete
     */
    where?: id_sequencesWhereInput
    /**
     * Limit how many id_sequences to delete.
     */
    limit?: number
  }

  /**
   * id_sequences without action
   */
  export type id_sequencesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the id_sequences
     */
    select?: id_sequencesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the id_sequences
     */
    omit?: id_sequencesOmit<ExtArgs> | null
  }


  /**
   * Model invalid_handles
   */

  export type AggregateInvalid_handles = {
    _count: Invalid_handlesCountAggregateOutputType | null
    _avg: Invalid_handlesAvgAggregateOutputType | null
    _sum: Invalid_handlesSumAggregateOutputType | null
    _min: Invalid_handlesMinAggregateOutputType | null
    _max: Invalid_handlesMaxAggregateOutputType | null
  }

  export type Invalid_handlesAvgAggregateOutputType = {
    invalid_handle_id: number | null
  }

  export type Invalid_handlesSumAggregateOutputType = {
    invalid_handle_id: number | null
  }

  export type Invalid_handlesMinAggregateOutputType = {
    invalid_handle_id: number | null
    invalid_handle: string | null
  }

  export type Invalid_handlesMaxAggregateOutputType = {
    invalid_handle_id: number | null
    invalid_handle: string | null
  }

  export type Invalid_handlesCountAggregateOutputType = {
    invalid_handle_id: number
    invalid_handle: number
    _all: number
  }


  export type Invalid_handlesAvgAggregateInputType = {
    invalid_handle_id?: true
  }

  export type Invalid_handlesSumAggregateInputType = {
    invalid_handle_id?: true
  }

  export type Invalid_handlesMinAggregateInputType = {
    invalid_handle_id?: true
    invalid_handle?: true
  }

  export type Invalid_handlesMaxAggregateInputType = {
    invalid_handle_id?: true
    invalid_handle?: true
  }

  export type Invalid_handlesCountAggregateInputType = {
    invalid_handle_id?: true
    invalid_handle?: true
    _all?: true
  }

  export type Invalid_handlesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which invalid_handles to aggregate.
     */
    where?: invalid_handlesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of invalid_handles to fetch.
     */
    orderBy?: invalid_handlesOrderByWithRelationInput | invalid_handlesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: invalid_handlesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` invalid_handles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` invalid_handles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned invalid_handles
    **/
    _count?: true | Invalid_handlesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Invalid_handlesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Invalid_handlesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Invalid_handlesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Invalid_handlesMaxAggregateInputType
  }

  export type GetInvalid_handlesAggregateType<T extends Invalid_handlesAggregateArgs> = {
        [P in keyof T & keyof AggregateInvalid_handles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInvalid_handles[P]>
      : GetScalarType<T[P], AggregateInvalid_handles[P]>
  }




  export type invalid_handlesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: invalid_handlesWhereInput
    orderBy?: invalid_handlesOrderByWithAggregationInput | invalid_handlesOrderByWithAggregationInput[]
    by: Invalid_handlesScalarFieldEnum[] | Invalid_handlesScalarFieldEnum
    having?: invalid_handlesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Invalid_handlesCountAggregateInputType | true
    _avg?: Invalid_handlesAvgAggregateInputType
    _sum?: Invalid_handlesSumAggregateInputType
    _min?: Invalid_handlesMinAggregateInputType
    _max?: Invalid_handlesMaxAggregateInputType
  }

  export type Invalid_handlesGroupByOutputType = {
    invalid_handle_id: number
    invalid_handle: string
    _count: Invalid_handlesCountAggregateOutputType | null
    _avg: Invalid_handlesAvgAggregateOutputType | null
    _sum: Invalid_handlesSumAggregateOutputType | null
    _min: Invalid_handlesMinAggregateOutputType | null
    _max: Invalid_handlesMaxAggregateOutputType | null
  }

  type GetInvalid_handlesGroupByPayload<T extends invalid_handlesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Invalid_handlesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Invalid_handlesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Invalid_handlesGroupByOutputType[P]>
            : GetScalarType<T[P], Invalid_handlesGroupByOutputType[P]>
        }
      >
    >


  export type invalid_handlesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    invalid_handle_id?: boolean
    invalid_handle?: boolean
  }, ExtArgs["result"]["invalid_handles"]>

  export type invalid_handlesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    invalid_handle_id?: boolean
    invalid_handle?: boolean
  }, ExtArgs["result"]["invalid_handles"]>

  export type invalid_handlesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    invalid_handle_id?: boolean
    invalid_handle?: boolean
  }, ExtArgs["result"]["invalid_handles"]>

  export type invalid_handlesSelectScalar = {
    invalid_handle_id?: boolean
    invalid_handle?: boolean
  }

  export type invalid_handlesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"invalid_handle_id" | "invalid_handle", ExtArgs["result"]["invalid_handles"]>

  export type $invalid_handlesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "invalid_handles"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      invalid_handle_id: number
      invalid_handle: string
    }, ExtArgs["result"]["invalid_handles"]>
    composites: {}
  }

  type invalid_handlesGetPayload<S extends boolean | null | undefined | invalid_handlesDefaultArgs> = $Result.GetResult<Prisma.$invalid_handlesPayload, S>

  type invalid_handlesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<invalid_handlesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Invalid_handlesCountAggregateInputType | true
    }

  export interface invalid_handlesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['invalid_handles'], meta: { name: 'invalid_handles' } }
    /**
     * Find zero or one Invalid_handles that matches the filter.
     * @param {invalid_handlesFindUniqueArgs} args - Arguments to find a Invalid_handles
     * @example
     * // Get one Invalid_handles
     * const invalid_handles = await prisma.invalid_handles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends invalid_handlesFindUniqueArgs>(args: SelectSubset<T, invalid_handlesFindUniqueArgs<ExtArgs>>): Prisma__invalid_handlesClient<$Result.GetResult<Prisma.$invalid_handlesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Invalid_handles that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {invalid_handlesFindUniqueOrThrowArgs} args - Arguments to find a Invalid_handles
     * @example
     * // Get one Invalid_handles
     * const invalid_handles = await prisma.invalid_handles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends invalid_handlesFindUniqueOrThrowArgs>(args: SelectSubset<T, invalid_handlesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__invalid_handlesClient<$Result.GetResult<Prisma.$invalid_handlesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Invalid_handles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {invalid_handlesFindFirstArgs} args - Arguments to find a Invalid_handles
     * @example
     * // Get one Invalid_handles
     * const invalid_handles = await prisma.invalid_handles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends invalid_handlesFindFirstArgs>(args?: SelectSubset<T, invalid_handlesFindFirstArgs<ExtArgs>>): Prisma__invalid_handlesClient<$Result.GetResult<Prisma.$invalid_handlesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Invalid_handles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {invalid_handlesFindFirstOrThrowArgs} args - Arguments to find a Invalid_handles
     * @example
     * // Get one Invalid_handles
     * const invalid_handles = await prisma.invalid_handles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends invalid_handlesFindFirstOrThrowArgs>(args?: SelectSubset<T, invalid_handlesFindFirstOrThrowArgs<ExtArgs>>): Prisma__invalid_handlesClient<$Result.GetResult<Prisma.$invalid_handlesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Invalid_handles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {invalid_handlesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Invalid_handles
     * const invalid_handles = await prisma.invalid_handles.findMany()
     * 
     * // Get first 10 Invalid_handles
     * const invalid_handles = await prisma.invalid_handles.findMany({ take: 10 })
     * 
     * // Only select the `invalid_handle_id`
     * const invalid_handlesWithInvalid_handle_idOnly = await prisma.invalid_handles.findMany({ select: { invalid_handle_id: true } })
     * 
     */
    findMany<T extends invalid_handlesFindManyArgs>(args?: SelectSubset<T, invalid_handlesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$invalid_handlesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Invalid_handles.
     * @param {invalid_handlesCreateArgs} args - Arguments to create a Invalid_handles.
     * @example
     * // Create one Invalid_handles
     * const Invalid_handles = await prisma.invalid_handles.create({
     *   data: {
     *     // ... data to create a Invalid_handles
     *   }
     * })
     * 
     */
    create<T extends invalid_handlesCreateArgs>(args: SelectSubset<T, invalid_handlesCreateArgs<ExtArgs>>): Prisma__invalid_handlesClient<$Result.GetResult<Prisma.$invalid_handlesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Invalid_handles.
     * @param {invalid_handlesCreateManyArgs} args - Arguments to create many Invalid_handles.
     * @example
     * // Create many Invalid_handles
     * const invalid_handles = await prisma.invalid_handles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends invalid_handlesCreateManyArgs>(args?: SelectSubset<T, invalid_handlesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Invalid_handles and returns the data saved in the database.
     * @param {invalid_handlesCreateManyAndReturnArgs} args - Arguments to create many Invalid_handles.
     * @example
     * // Create many Invalid_handles
     * const invalid_handles = await prisma.invalid_handles.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Invalid_handles and only return the `invalid_handle_id`
     * const invalid_handlesWithInvalid_handle_idOnly = await prisma.invalid_handles.createManyAndReturn({
     *   select: { invalid_handle_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends invalid_handlesCreateManyAndReturnArgs>(args?: SelectSubset<T, invalid_handlesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$invalid_handlesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Invalid_handles.
     * @param {invalid_handlesDeleteArgs} args - Arguments to delete one Invalid_handles.
     * @example
     * // Delete one Invalid_handles
     * const Invalid_handles = await prisma.invalid_handles.delete({
     *   where: {
     *     // ... filter to delete one Invalid_handles
     *   }
     * })
     * 
     */
    delete<T extends invalid_handlesDeleteArgs>(args: SelectSubset<T, invalid_handlesDeleteArgs<ExtArgs>>): Prisma__invalid_handlesClient<$Result.GetResult<Prisma.$invalid_handlesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Invalid_handles.
     * @param {invalid_handlesUpdateArgs} args - Arguments to update one Invalid_handles.
     * @example
     * // Update one Invalid_handles
     * const invalid_handles = await prisma.invalid_handles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends invalid_handlesUpdateArgs>(args: SelectSubset<T, invalid_handlesUpdateArgs<ExtArgs>>): Prisma__invalid_handlesClient<$Result.GetResult<Prisma.$invalid_handlesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Invalid_handles.
     * @param {invalid_handlesDeleteManyArgs} args - Arguments to filter Invalid_handles to delete.
     * @example
     * // Delete a few Invalid_handles
     * const { count } = await prisma.invalid_handles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends invalid_handlesDeleteManyArgs>(args?: SelectSubset<T, invalid_handlesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Invalid_handles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {invalid_handlesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Invalid_handles
     * const invalid_handles = await prisma.invalid_handles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends invalid_handlesUpdateManyArgs>(args: SelectSubset<T, invalid_handlesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Invalid_handles and returns the data updated in the database.
     * @param {invalid_handlesUpdateManyAndReturnArgs} args - Arguments to update many Invalid_handles.
     * @example
     * // Update many Invalid_handles
     * const invalid_handles = await prisma.invalid_handles.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Invalid_handles and only return the `invalid_handle_id`
     * const invalid_handlesWithInvalid_handle_idOnly = await prisma.invalid_handles.updateManyAndReturn({
     *   select: { invalid_handle_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends invalid_handlesUpdateManyAndReturnArgs>(args: SelectSubset<T, invalid_handlesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$invalid_handlesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Invalid_handles.
     * @param {invalid_handlesUpsertArgs} args - Arguments to update or create a Invalid_handles.
     * @example
     * // Update or create a Invalid_handles
     * const invalid_handles = await prisma.invalid_handles.upsert({
     *   create: {
     *     // ... data to create a Invalid_handles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Invalid_handles we want to update
     *   }
     * })
     */
    upsert<T extends invalid_handlesUpsertArgs>(args: SelectSubset<T, invalid_handlesUpsertArgs<ExtArgs>>): Prisma__invalid_handlesClient<$Result.GetResult<Prisma.$invalid_handlesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Invalid_handles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {invalid_handlesCountArgs} args - Arguments to filter Invalid_handles to count.
     * @example
     * // Count the number of Invalid_handles
     * const count = await prisma.invalid_handles.count({
     *   where: {
     *     // ... the filter for the Invalid_handles we want to count
     *   }
     * })
    **/
    count<T extends invalid_handlesCountArgs>(
      args?: Subset<T, invalid_handlesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Invalid_handlesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Invalid_handles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Invalid_handlesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Invalid_handlesAggregateArgs>(args: Subset<T, Invalid_handlesAggregateArgs>): Prisma.PrismaPromise<GetInvalid_handlesAggregateType<T>>

    /**
     * Group by Invalid_handles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {invalid_handlesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends invalid_handlesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: invalid_handlesGroupByArgs['orderBy'] }
        : { orderBy?: invalid_handlesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, invalid_handlesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInvalid_handlesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the invalid_handles model
   */
  readonly fields: invalid_handlesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for invalid_handles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__invalid_handlesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the invalid_handles model
   */
  interface invalid_handlesFieldRefs {
    readonly invalid_handle_id: FieldRef<"invalid_handles", 'Int'>
    readonly invalid_handle: FieldRef<"invalid_handles", 'String'>
  }
    

  // Custom InputTypes
  /**
   * invalid_handles findUnique
   */
  export type invalid_handlesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invalid_handles
     */
    select?: invalid_handlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invalid_handles
     */
    omit?: invalid_handlesOmit<ExtArgs> | null
    /**
     * Filter, which invalid_handles to fetch.
     */
    where: invalid_handlesWhereUniqueInput
  }

  /**
   * invalid_handles findUniqueOrThrow
   */
  export type invalid_handlesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invalid_handles
     */
    select?: invalid_handlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invalid_handles
     */
    omit?: invalid_handlesOmit<ExtArgs> | null
    /**
     * Filter, which invalid_handles to fetch.
     */
    where: invalid_handlesWhereUniqueInput
  }

  /**
   * invalid_handles findFirst
   */
  export type invalid_handlesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invalid_handles
     */
    select?: invalid_handlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invalid_handles
     */
    omit?: invalid_handlesOmit<ExtArgs> | null
    /**
     * Filter, which invalid_handles to fetch.
     */
    where?: invalid_handlesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of invalid_handles to fetch.
     */
    orderBy?: invalid_handlesOrderByWithRelationInput | invalid_handlesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for invalid_handles.
     */
    cursor?: invalid_handlesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` invalid_handles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` invalid_handles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of invalid_handles.
     */
    distinct?: Invalid_handlesScalarFieldEnum | Invalid_handlesScalarFieldEnum[]
  }

  /**
   * invalid_handles findFirstOrThrow
   */
  export type invalid_handlesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invalid_handles
     */
    select?: invalid_handlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invalid_handles
     */
    omit?: invalid_handlesOmit<ExtArgs> | null
    /**
     * Filter, which invalid_handles to fetch.
     */
    where?: invalid_handlesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of invalid_handles to fetch.
     */
    orderBy?: invalid_handlesOrderByWithRelationInput | invalid_handlesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for invalid_handles.
     */
    cursor?: invalid_handlesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` invalid_handles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` invalid_handles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of invalid_handles.
     */
    distinct?: Invalid_handlesScalarFieldEnum | Invalid_handlesScalarFieldEnum[]
  }

  /**
   * invalid_handles findMany
   */
  export type invalid_handlesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invalid_handles
     */
    select?: invalid_handlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invalid_handles
     */
    omit?: invalid_handlesOmit<ExtArgs> | null
    /**
     * Filter, which invalid_handles to fetch.
     */
    where?: invalid_handlesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of invalid_handles to fetch.
     */
    orderBy?: invalid_handlesOrderByWithRelationInput | invalid_handlesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing invalid_handles.
     */
    cursor?: invalid_handlesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` invalid_handles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` invalid_handles.
     */
    skip?: number
    distinct?: Invalid_handlesScalarFieldEnum | Invalid_handlesScalarFieldEnum[]
  }

  /**
   * invalid_handles create
   */
  export type invalid_handlesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invalid_handles
     */
    select?: invalid_handlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invalid_handles
     */
    omit?: invalid_handlesOmit<ExtArgs> | null
    /**
     * The data needed to create a invalid_handles.
     */
    data: XOR<invalid_handlesCreateInput, invalid_handlesUncheckedCreateInput>
  }

  /**
   * invalid_handles createMany
   */
  export type invalid_handlesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many invalid_handles.
     */
    data: invalid_handlesCreateManyInput | invalid_handlesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * invalid_handles createManyAndReturn
   */
  export type invalid_handlesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invalid_handles
     */
    select?: invalid_handlesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the invalid_handles
     */
    omit?: invalid_handlesOmit<ExtArgs> | null
    /**
     * The data used to create many invalid_handles.
     */
    data: invalid_handlesCreateManyInput | invalid_handlesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * invalid_handles update
   */
  export type invalid_handlesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invalid_handles
     */
    select?: invalid_handlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invalid_handles
     */
    omit?: invalid_handlesOmit<ExtArgs> | null
    /**
     * The data needed to update a invalid_handles.
     */
    data: XOR<invalid_handlesUpdateInput, invalid_handlesUncheckedUpdateInput>
    /**
     * Choose, which invalid_handles to update.
     */
    where: invalid_handlesWhereUniqueInput
  }

  /**
   * invalid_handles updateMany
   */
  export type invalid_handlesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update invalid_handles.
     */
    data: XOR<invalid_handlesUpdateManyMutationInput, invalid_handlesUncheckedUpdateManyInput>
    /**
     * Filter which invalid_handles to update
     */
    where?: invalid_handlesWhereInput
    /**
     * Limit how many invalid_handles to update.
     */
    limit?: number
  }

  /**
   * invalid_handles updateManyAndReturn
   */
  export type invalid_handlesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invalid_handles
     */
    select?: invalid_handlesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the invalid_handles
     */
    omit?: invalid_handlesOmit<ExtArgs> | null
    /**
     * The data used to update invalid_handles.
     */
    data: XOR<invalid_handlesUpdateManyMutationInput, invalid_handlesUncheckedUpdateManyInput>
    /**
     * Filter which invalid_handles to update
     */
    where?: invalid_handlesWhereInput
    /**
     * Limit how many invalid_handles to update.
     */
    limit?: number
  }

  /**
   * invalid_handles upsert
   */
  export type invalid_handlesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invalid_handles
     */
    select?: invalid_handlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invalid_handles
     */
    omit?: invalid_handlesOmit<ExtArgs> | null
    /**
     * The filter to search for the invalid_handles to update in case it exists.
     */
    where: invalid_handlesWhereUniqueInput
    /**
     * In case the invalid_handles found by the `where` argument doesn't exist, create a new invalid_handles with this data.
     */
    create: XOR<invalid_handlesCreateInput, invalid_handlesUncheckedCreateInput>
    /**
     * In case the invalid_handles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<invalid_handlesUpdateInput, invalid_handlesUncheckedUpdateInput>
  }

  /**
   * invalid_handles delete
   */
  export type invalid_handlesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invalid_handles
     */
    select?: invalid_handlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invalid_handles
     */
    omit?: invalid_handlesOmit<ExtArgs> | null
    /**
     * Filter which invalid_handles to delete.
     */
    where: invalid_handlesWhereUniqueInput
  }

  /**
   * invalid_handles deleteMany
   */
  export type invalid_handlesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which invalid_handles to delete
     */
    where?: invalid_handlesWhereInput
    /**
     * Limit how many invalid_handles to delete.
     */
    limit?: number
  }

  /**
   * invalid_handles without action
   */
  export type invalid_handlesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invalid_handles
     */
    select?: invalid_handlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invalid_handles
     */
    omit?: invalid_handlesOmit<ExtArgs> | null
  }


  /**
   * Model security_groups
   */

  export type AggregateSecurity_groups = {
    _count: Security_groupsCountAggregateOutputType | null
    _avg: Security_groupsAvgAggregateOutputType | null
    _sum: Security_groupsSumAggregateOutputType | null
    _min: Security_groupsMinAggregateOutputType | null
    _max: Security_groupsMaxAggregateOutputType | null
  }

  export type Security_groupsAvgAggregateOutputType = {
    group_id: Decimal | null
    challenge_group_ind: number | null
    create_user_id: Decimal | null
  }

  export type Security_groupsSumAggregateOutputType = {
    group_id: Decimal | null
    challenge_group_ind: number | null
    create_user_id: Decimal | null
  }

  export type Security_groupsMinAggregateOutputType = {
    group_id: Decimal | null
    description: string | null
    challenge_group_ind: number | null
    create_user_id: Decimal | null
  }

  export type Security_groupsMaxAggregateOutputType = {
    group_id: Decimal | null
    description: string | null
    challenge_group_ind: number | null
    create_user_id: Decimal | null
  }

  export type Security_groupsCountAggregateOutputType = {
    group_id: number
    description: number
    challenge_group_ind: number
    create_user_id: number
    _all: number
  }


  export type Security_groupsAvgAggregateInputType = {
    group_id?: true
    challenge_group_ind?: true
    create_user_id?: true
  }

  export type Security_groupsSumAggregateInputType = {
    group_id?: true
    challenge_group_ind?: true
    create_user_id?: true
  }

  export type Security_groupsMinAggregateInputType = {
    group_id?: true
    description?: true
    challenge_group_ind?: true
    create_user_id?: true
  }

  export type Security_groupsMaxAggregateInputType = {
    group_id?: true
    description?: true
    challenge_group_ind?: true
    create_user_id?: true
  }

  export type Security_groupsCountAggregateInputType = {
    group_id?: true
    description?: true
    challenge_group_ind?: true
    create_user_id?: true
    _all?: true
  }

  export type Security_groupsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which security_groups to aggregate.
     */
    where?: security_groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of security_groups to fetch.
     */
    orderBy?: security_groupsOrderByWithRelationInput | security_groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: security_groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` security_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` security_groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned security_groups
    **/
    _count?: true | Security_groupsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Security_groupsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Security_groupsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Security_groupsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Security_groupsMaxAggregateInputType
  }

  export type GetSecurity_groupsAggregateType<T extends Security_groupsAggregateArgs> = {
        [P in keyof T & keyof AggregateSecurity_groups]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSecurity_groups[P]>
      : GetScalarType<T[P], AggregateSecurity_groups[P]>
  }




  export type security_groupsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: security_groupsWhereInput
    orderBy?: security_groupsOrderByWithAggregationInput | security_groupsOrderByWithAggregationInput[]
    by: Security_groupsScalarFieldEnum[] | Security_groupsScalarFieldEnum
    having?: security_groupsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Security_groupsCountAggregateInputType | true
    _avg?: Security_groupsAvgAggregateInputType
    _sum?: Security_groupsSumAggregateInputType
    _min?: Security_groupsMinAggregateInputType
    _max?: Security_groupsMaxAggregateInputType
  }

  export type Security_groupsGroupByOutputType = {
    group_id: Decimal
    description: string
    challenge_group_ind: number
    create_user_id: Decimal | null
    _count: Security_groupsCountAggregateOutputType | null
    _avg: Security_groupsAvgAggregateOutputType | null
    _sum: Security_groupsSumAggregateOutputType | null
    _min: Security_groupsMinAggregateOutputType | null
    _max: Security_groupsMaxAggregateOutputType | null
  }

  type GetSecurity_groupsGroupByPayload<T extends security_groupsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Security_groupsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Security_groupsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Security_groupsGroupByOutputType[P]>
            : GetScalarType<T[P], Security_groupsGroupByOutputType[P]>
        }
      >
    >


  export type security_groupsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    group_id?: boolean
    description?: boolean
    challenge_group_ind?: boolean
    create_user_id?: boolean
    user_group_xref?: boolean | security_groups$user_group_xrefArgs<ExtArgs>
    _count?: boolean | Security_groupsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["security_groups"]>

  export type security_groupsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    group_id?: boolean
    description?: boolean
    challenge_group_ind?: boolean
    create_user_id?: boolean
  }, ExtArgs["result"]["security_groups"]>

  export type security_groupsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    group_id?: boolean
    description?: boolean
    challenge_group_ind?: boolean
    create_user_id?: boolean
  }, ExtArgs["result"]["security_groups"]>

  export type security_groupsSelectScalar = {
    group_id?: boolean
    description?: boolean
    challenge_group_ind?: boolean
    create_user_id?: boolean
  }

  export type security_groupsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"group_id" | "description" | "challenge_group_ind" | "create_user_id", ExtArgs["result"]["security_groups"]>
  export type security_groupsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_group_xref?: boolean | security_groups$user_group_xrefArgs<ExtArgs>
    _count?: boolean | Security_groupsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type security_groupsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type security_groupsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $security_groupsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "security_groups"
    objects: {
      user_group_xref: Prisma.$user_group_xrefPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      group_id: Prisma.Decimal
      description: string
      challenge_group_ind: number
      create_user_id: Prisma.Decimal | null
    }, ExtArgs["result"]["security_groups"]>
    composites: {}
  }

  type security_groupsGetPayload<S extends boolean | null | undefined | security_groupsDefaultArgs> = $Result.GetResult<Prisma.$security_groupsPayload, S>

  type security_groupsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<security_groupsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Security_groupsCountAggregateInputType | true
    }

  export interface security_groupsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['security_groups'], meta: { name: 'security_groups' } }
    /**
     * Find zero or one Security_groups that matches the filter.
     * @param {security_groupsFindUniqueArgs} args - Arguments to find a Security_groups
     * @example
     * // Get one Security_groups
     * const security_groups = await prisma.security_groups.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends security_groupsFindUniqueArgs>(args: SelectSubset<T, security_groupsFindUniqueArgs<ExtArgs>>): Prisma__security_groupsClient<$Result.GetResult<Prisma.$security_groupsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Security_groups that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {security_groupsFindUniqueOrThrowArgs} args - Arguments to find a Security_groups
     * @example
     * // Get one Security_groups
     * const security_groups = await prisma.security_groups.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends security_groupsFindUniqueOrThrowArgs>(args: SelectSubset<T, security_groupsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__security_groupsClient<$Result.GetResult<Prisma.$security_groupsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Security_groups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {security_groupsFindFirstArgs} args - Arguments to find a Security_groups
     * @example
     * // Get one Security_groups
     * const security_groups = await prisma.security_groups.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends security_groupsFindFirstArgs>(args?: SelectSubset<T, security_groupsFindFirstArgs<ExtArgs>>): Prisma__security_groupsClient<$Result.GetResult<Prisma.$security_groupsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Security_groups that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {security_groupsFindFirstOrThrowArgs} args - Arguments to find a Security_groups
     * @example
     * // Get one Security_groups
     * const security_groups = await prisma.security_groups.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends security_groupsFindFirstOrThrowArgs>(args?: SelectSubset<T, security_groupsFindFirstOrThrowArgs<ExtArgs>>): Prisma__security_groupsClient<$Result.GetResult<Prisma.$security_groupsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Security_groups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {security_groupsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Security_groups
     * const security_groups = await prisma.security_groups.findMany()
     * 
     * // Get first 10 Security_groups
     * const security_groups = await prisma.security_groups.findMany({ take: 10 })
     * 
     * // Only select the `group_id`
     * const security_groupsWithGroup_idOnly = await prisma.security_groups.findMany({ select: { group_id: true } })
     * 
     */
    findMany<T extends security_groupsFindManyArgs>(args?: SelectSubset<T, security_groupsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$security_groupsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Security_groups.
     * @param {security_groupsCreateArgs} args - Arguments to create a Security_groups.
     * @example
     * // Create one Security_groups
     * const Security_groups = await prisma.security_groups.create({
     *   data: {
     *     // ... data to create a Security_groups
     *   }
     * })
     * 
     */
    create<T extends security_groupsCreateArgs>(args: SelectSubset<T, security_groupsCreateArgs<ExtArgs>>): Prisma__security_groupsClient<$Result.GetResult<Prisma.$security_groupsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Security_groups.
     * @param {security_groupsCreateManyArgs} args - Arguments to create many Security_groups.
     * @example
     * // Create many Security_groups
     * const security_groups = await prisma.security_groups.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends security_groupsCreateManyArgs>(args?: SelectSubset<T, security_groupsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Security_groups and returns the data saved in the database.
     * @param {security_groupsCreateManyAndReturnArgs} args - Arguments to create many Security_groups.
     * @example
     * // Create many Security_groups
     * const security_groups = await prisma.security_groups.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Security_groups and only return the `group_id`
     * const security_groupsWithGroup_idOnly = await prisma.security_groups.createManyAndReturn({
     *   select: { group_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends security_groupsCreateManyAndReturnArgs>(args?: SelectSubset<T, security_groupsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$security_groupsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Security_groups.
     * @param {security_groupsDeleteArgs} args - Arguments to delete one Security_groups.
     * @example
     * // Delete one Security_groups
     * const Security_groups = await prisma.security_groups.delete({
     *   where: {
     *     // ... filter to delete one Security_groups
     *   }
     * })
     * 
     */
    delete<T extends security_groupsDeleteArgs>(args: SelectSubset<T, security_groupsDeleteArgs<ExtArgs>>): Prisma__security_groupsClient<$Result.GetResult<Prisma.$security_groupsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Security_groups.
     * @param {security_groupsUpdateArgs} args - Arguments to update one Security_groups.
     * @example
     * // Update one Security_groups
     * const security_groups = await prisma.security_groups.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends security_groupsUpdateArgs>(args: SelectSubset<T, security_groupsUpdateArgs<ExtArgs>>): Prisma__security_groupsClient<$Result.GetResult<Prisma.$security_groupsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Security_groups.
     * @param {security_groupsDeleteManyArgs} args - Arguments to filter Security_groups to delete.
     * @example
     * // Delete a few Security_groups
     * const { count } = await prisma.security_groups.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends security_groupsDeleteManyArgs>(args?: SelectSubset<T, security_groupsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Security_groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {security_groupsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Security_groups
     * const security_groups = await prisma.security_groups.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends security_groupsUpdateManyArgs>(args: SelectSubset<T, security_groupsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Security_groups and returns the data updated in the database.
     * @param {security_groupsUpdateManyAndReturnArgs} args - Arguments to update many Security_groups.
     * @example
     * // Update many Security_groups
     * const security_groups = await prisma.security_groups.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Security_groups and only return the `group_id`
     * const security_groupsWithGroup_idOnly = await prisma.security_groups.updateManyAndReturn({
     *   select: { group_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends security_groupsUpdateManyAndReturnArgs>(args: SelectSubset<T, security_groupsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$security_groupsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Security_groups.
     * @param {security_groupsUpsertArgs} args - Arguments to update or create a Security_groups.
     * @example
     * // Update or create a Security_groups
     * const security_groups = await prisma.security_groups.upsert({
     *   create: {
     *     // ... data to create a Security_groups
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Security_groups we want to update
     *   }
     * })
     */
    upsert<T extends security_groupsUpsertArgs>(args: SelectSubset<T, security_groupsUpsertArgs<ExtArgs>>): Prisma__security_groupsClient<$Result.GetResult<Prisma.$security_groupsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Security_groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {security_groupsCountArgs} args - Arguments to filter Security_groups to count.
     * @example
     * // Count the number of Security_groups
     * const count = await prisma.security_groups.count({
     *   where: {
     *     // ... the filter for the Security_groups we want to count
     *   }
     * })
    **/
    count<T extends security_groupsCountArgs>(
      args?: Subset<T, security_groupsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Security_groupsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Security_groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Security_groupsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Security_groupsAggregateArgs>(args: Subset<T, Security_groupsAggregateArgs>): Prisma.PrismaPromise<GetSecurity_groupsAggregateType<T>>

    /**
     * Group by Security_groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {security_groupsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends security_groupsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: security_groupsGroupByArgs['orderBy'] }
        : { orderBy?: security_groupsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, security_groupsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSecurity_groupsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the security_groups model
   */
  readonly fields: security_groupsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for security_groups.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__security_groupsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user_group_xref<T extends security_groups$user_group_xrefArgs<ExtArgs> = {}>(args?: Subset<T, security_groups$user_group_xrefArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_group_xrefPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the security_groups model
   */
  interface security_groupsFieldRefs {
    readonly group_id: FieldRef<"security_groups", 'Decimal'>
    readonly description: FieldRef<"security_groups", 'String'>
    readonly challenge_group_ind: FieldRef<"security_groups", 'Int'>
    readonly create_user_id: FieldRef<"security_groups", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * security_groups findUnique
   */
  export type security_groupsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_groups
     */
    select?: security_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_groups
     */
    omit?: security_groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_groupsInclude<ExtArgs> | null
    /**
     * Filter, which security_groups to fetch.
     */
    where: security_groupsWhereUniqueInput
  }

  /**
   * security_groups findUniqueOrThrow
   */
  export type security_groupsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_groups
     */
    select?: security_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_groups
     */
    omit?: security_groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_groupsInclude<ExtArgs> | null
    /**
     * Filter, which security_groups to fetch.
     */
    where: security_groupsWhereUniqueInput
  }

  /**
   * security_groups findFirst
   */
  export type security_groupsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_groups
     */
    select?: security_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_groups
     */
    omit?: security_groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_groupsInclude<ExtArgs> | null
    /**
     * Filter, which security_groups to fetch.
     */
    where?: security_groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of security_groups to fetch.
     */
    orderBy?: security_groupsOrderByWithRelationInput | security_groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for security_groups.
     */
    cursor?: security_groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` security_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` security_groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of security_groups.
     */
    distinct?: Security_groupsScalarFieldEnum | Security_groupsScalarFieldEnum[]
  }

  /**
   * security_groups findFirstOrThrow
   */
  export type security_groupsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_groups
     */
    select?: security_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_groups
     */
    omit?: security_groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_groupsInclude<ExtArgs> | null
    /**
     * Filter, which security_groups to fetch.
     */
    where?: security_groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of security_groups to fetch.
     */
    orderBy?: security_groupsOrderByWithRelationInput | security_groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for security_groups.
     */
    cursor?: security_groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` security_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` security_groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of security_groups.
     */
    distinct?: Security_groupsScalarFieldEnum | Security_groupsScalarFieldEnum[]
  }

  /**
   * security_groups findMany
   */
  export type security_groupsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_groups
     */
    select?: security_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_groups
     */
    omit?: security_groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_groupsInclude<ExtArgs> | null
    /**
     * Filter, which security_groups to fetch.
     */
    where?: security_groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of security_groups to fetch.
     */
    orderBy?: security_groupsOrderByWithRelationInput | security_groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing security_groups.
     */
    cursor?: security_groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` security_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` security_groups.
     */
    skip?: number
    distinct?: Security_groupsScalarFieldEnum | Security_groupsScalarFieldEnum[]
  }

  /**
   * security_groups create
   */
  export type security_groupsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_groups
     */
    select?: security_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_groups
     */
    omit?: security_groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_groupsInclude<ExtArgs> | null
    /**
     * The data needed to create a security_groups.
     */
    data: XOR<security_groupsCreateInput, security_groupsUncheckedCreateInput>
  }

  /**
   * security_groups createMany
   */
  export type security_groupsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many security_groups.
     */
    data: security_groupsCreateManyInput | security_groupsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * security_groups createManyAndReturn
   */
  export type security_groupsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_groups
     */
    select?: security_groupsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the security_groups
     */
    omit?: security_groupsOmit<ExtArgs> | null
    /**
     * The data used to create many security_groups.
     */
    data: security_groupsCreateManyInput | security_groupsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * security_groups update
   */
  export type security_groupsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_groups
     */
    select?: security_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_groups
     */
    omit?: security_groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_groupsInclude<ExtArgs> | null
    /**
     * The data needed to update a security_groups.
     */
    data: XOR<security_groupsUpdateInput, security_groupsUncheckedUpdateInput>
    /**
     * Choose, which security_groups to update.
     */
    where: security_groupsWhereUniqueInput
  }

  /**
   * security_groups updateMany
   */
  export type security_groupsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update security_groups.
     */
    data: XOR<security_groupsUpdateManyMutationInput, security_groupsUncheckedUpdateManyInput>
    /**
     * Filter which security_groups to update
     */
    where?: security_groupsWhereInput
    /**
     * Limit how many security_groups to update.
     */
    limit?: number
  }

  /**
   * security_groups updateManyAndReturn
   */
  export type security_groupsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_groups
     */
    select?: security_groupsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the security_groups
     */
    omit?: security_groupsOmit<ExtArgs> | null
    /**
     * The data used to update security_groups.
     */
    data: XOR<security_groupsUpdateManyMutationInput, security_groupsUncheckedUpdateManyInput>
    /**
     * Filter which security_groups to update
     */
    where?: security_groupsWhereInput
    /**
     * Limit how many security_groups to update.
     */
    limit?: number
  }

  /**
   * security_groups upsert
   */
  export type security_groupsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_groups
     */
    select?: security_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_groups
     */
    omit?: security_groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_groupsInclude<ExtArgs> | null
    /**
     * The filter to search for the security_groups to update in case it exists.
     */
    where: security_groupsWhereUniqueInput
    /**
     * In case the security_groups found by the `where` argument doesn't exist, create a new security_groups with this data.
     */
    create: XOR<security_groupsCreateInput, security_groupsUncheckedCreateInput>
    /**
     * In case the security_groups was found with the provided `where` argument, update it with this data.
     */
    update: XOR<security_groupsUpdateInput, security_groupsUncheckedUpdateInput>
  }

  /**
   * security_groups delete
   */
  export type security_groupsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_groups
     */
    select?: security_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_groups
     */
    omit?: security_groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_groupsInclude<ExtArgs> | null
    /**
     * Filter which security_groups to delete.
     */
    where: security_groupsWhereUniqueInput
  }

  /**
   * security_groups deleteMany
   */
  export type security_groupsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which security_groups to delete
     */
    where?: security_groupsWhereInput
    /**
     * Limit how many security_groups to delete.
     */
    limit?: number
  }

  /**
   * security_groups.user_group_xref
   */
  export type security_groups$user_group_xrefArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_group_xref
     */
    select?: user_group_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_group_xref
     */
    omit?: user_group_xrefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_group_xrefInclude<ExtArgs> | null
    where?: user_group_xrefWhereInput
    orderBy?: user_group_xrefOrderByWithRelationInput | user_group_xrefOrderByWithRelationInput[]
    cursor?: user_group_xrefWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_group_xrefScalarFieldEnum | User_group_xrefScalarFieldEnum[]
  }

  /**
   * security_groups without action
   */
  export type security_groupsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_groups
     */
    select?: security_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_groups
     */
    omit?: security_groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_groupsInclude<ExtArgs> | null
  }


  /**
   * Model security_status_lu
   */

  export type AggregateSecurity_status_lu = {
    _count: Security_status_luCountAggregateOutputType | null
    _avg: Security_status_luAvgAggregateOutputType | null
    _sum: Security_status_luSumAggregateOutputType | null
    _min: Security_status_luMinAggregateOutputType | null
    _max: Security_status_luMaxAggregateOutputType | null
  }

  export type Security_status_luAvgAggregateOutputType = {
    security_status_id: Decimal | null
  }

  export type Security_status_luSumAggregateOutputType = {
    security_status_id: Decimal | null
  }

  export type Security_status_luMinAggregateOutputType = {
    security_status_id: Decimal | null
    status_desc: string | null
  }

  export type Security_status_luMaxAggregateOutputType = {
    security_status_id: Decimal | null
    status_desc: string | null
  }

  export type Security_status_luCountAggregateOutputType = {
    security_status_id: number
    status_desc: number
    _all: number
  }


  export type Security_status_luAvgAggregateInputType = {
    security_status_id?: true
  }

  export type Security_status_luSumAggregateInputType = {
    security_status_id?: true
  }

  export type Security_status_luMinAggregateInputType = {
    security_status_id?: true
    status_desc?: true
  }

  export type Security_status_luMaxAggregateInputType = {
    security_status_id?: true
    status_desc?: true
  }

  export type Security_status_luCountAggregateInputType = {
    security_status_id?: true
    status_desc?: true
    _all?: true
  }

  export type Security_status_luAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which security_status_lu to aggregate.
     */
    where?: security_status_luWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of security_status_lus to fetch.
     */
    orderBy?: security_status_luOrderByWithRelationInput | security_status_luOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: security_status_luWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` security_status_lus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` security_status_lus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned security_status_lus
    **/
    _count?: true | Security_status_luCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Security_status_luAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Security_status_luSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Security_status_luMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Security_status_luMaxAggregateInputType
  }

  export type GetSecurity_status_luAggregateType<T extends Security_status_luAggregateArgs> = {
        [P in keyof T & keyof AggregateSecurity_status_lu]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSecurity_status_lu[P]>
      : GetScalarType<T[P], AggregateSecurity_status_lu[P]>
  }




  export type security_status_luGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: security_status_luWhereInput
    orderBy?: security_status_luOrderByWithAggregationInput | security_status_luOrderByWithAggregationInput[]
    by: Security_status_luScalarFieldEnum[] | Security_status_luScalarFieldEnum
    having?: security_status_luScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Security_status_luCountAggregateInputType | true
    _avg?: Security_status_luAvgAggregateInputType
    _sum?: Security_status_luSumAggregateInputType
    _min?: Security_status_luMinAggregateInputType
    _max?: Security_status_luMaxAggregateInputType
  }

  export type Security_status_luGroupByOutputType = {
    security_status_id: Decimal
    status_desc: string | null
    _count: Security_status_luCountAggregateOutputType | null
    _avg: Security_status_luAvgAggregateOutputType | null
    _sum: Security_status_luSumAggregateOutputType | null
    _min: Security_status_luMinAggregateOutputType | null
    _max: Security_status_luMaxAggregateOutputType | null
  }

  type GetSecurity_status_luGroupByPayload<T extends security_status_luGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Security_status_luGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Security_status_luGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Security_status_luGroupByOutputType[P]>
            : GetScalarType<T[P], Security_status_luGroupByOutputType[P]>
        }
      >
    >


  export type security_status_luSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    security_status_id?: boolean
    status_desc?: boolean
    user_group_xref?: boolean | security_status_lu$user_group_xrefArgs<ExtArgs>
    _count?: boolean | Security_status_luCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["security_status_lu"]>

  export type security_status_luSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    security_status_id?: boolean
    status_desc?: boolean
  }, ExtArgs["result"]["security_status_lu"]>

  export type security_status_luSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    security_status_id?: boolean
    status_desc?: boolean
  }, ExtArgs["result"]["security_status_lu"]>

  export type security_status_luSelectScalar = {
    security_status_id?: boolean
    status_desc?: boolean
  }

  export type security_status_luOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"security_status_id" | "status_desc", ExtArgs["result"]["security_status_lu"]>
  export type security_status_luInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_group_xref?: boolean | security_status_lu$user_group_xrefArgs<ExtArgs>
    _count?: boolean | Security_status_luCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type security_status_luIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type security_status_luIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $security_status_luPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "security_status_lu"
    objects: {
      user_group_xref: Prisma.$user_group_xrefPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      security_status_id: Prisma.Decimal
      status_desc: string | null
    }, ExtArgs["result"]["security_status_lu"]>
    composites: {}
  }

  type security_status_luGetPayload<S extends boolean | null | undefined | security_status_luDefaultArgs> = $Result.GetResult<Prisma.$security_status_luPayload, S>

  type security_status_luCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<security_status_luFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Security_status_luCountAggregateInputType | true
    }

  export interface security_status_luDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['security_status_lu'], meta: { name: 'security_status_lu' } }
    /**
     * Find zero or one Security_status_lu that matches the filter.
     * @param {security_status_luFindUniqueArgs} args - Arguments to find a Security_status_lu
     * @example
     * // Get one Security_status_lu
     * const security_status_lu = await prisma.security_status_lu.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends security_status_luFindUniqueArgs>(args: SelectSubset<T, security_status_luFindUniqueArgs<ExtArgs>>): Prisma__security_status_luClient<$Result.GetResult<Prisma.$security_status_luPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Security_status_lu that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {security_status_luFindUniqueOrThrowArgs} args - Arguments to find a Security_status_lu
     * @example
     * // Get one Security_status_lu
     * const security_status_lu = await prisma.security_status_lu.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends security_status_luFindUniqueOrThrowArgs>(args: SelectSubset<T, security_status_luFindUniqueOrThrowArgs<ExtArgs>>): Prisma__security_status_luClient<$Result.GetResult<Prisma.$security_status_luPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Security_status_lu that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {security_status_luFindFirstArgs} args - Arguments to find a Security_status_lu
     * @example
     * // Get one Security_status_lu
     * const security_status_lu = await prisma.security_status_lu.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends security_status_luFindFirstArgs>(args?: SelectSubset<T, security_status_luFindFirstArgs<ExtArgs>>): Prisma__security_status_luClient<$Result.GetResult<Prisma.$security_status_luPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Security_status_lu that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {security_status_luFindFirstOrThrowArgs} args - Arguments to find a Security_status_lu
     * @example
     * // Get one Security_status_lu
     * const security_status_lu = await prisma.security_status_lu.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends security_status_luFindFirstOrThrowArgs>(args?: SelectSubset<T, security_status_luFindFirstOrThrowArgs<ExtArgs>>): Prisma__security_status_luClient<$Result.GetResult<Prisma.$security_status_luPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Security_status_lus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {security_status_luFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Security_status_lus
     * const security_status_lus = await prisma.security_status_lu.findMany()
     * 
     * // Get first 10 Security_status_lus
     * const security_status_lus = await prisma.security_status_lu.findMany({ take: 10 })
     * 
     * // Only select the `security_status_id`
     * const security_status_luWithSecurity_status_idOnly = await prisma.security_status_lu.findMany({ select: { security_status_id: true } })
     * 
     */
    findMany<T extends security_status_luFindManyArgs>(args?: SelectSubset<T, security_status_luFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$security_status_luPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Security_status_lu.
     * @param {security_status_luCreateArgs} args - Arguments to create a Security_status_lu.
     * @example
     * // Create one Security_status_lu
     * const Security_status_lu = await prisma.security_status_lu.create({
     *   data: {
     *     // ... data to create a Security_status_lu
     *   }
     * })
     * 
     */
    create<T extends security_status_luCreateArgs>(args: SelectSubset<T, security_status_luCreateArgs<ExtArgs>>): Prisma__security_status_luClient<$Result.GetResult<Prisma.$security_status_luPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Security_status_lus.
     * @param {security_status_luCreateManyArgs} args - Arguments to create many Security_status_lus.
     * @example
     * // Create many Security_status_lus
     * const security_status_lu = await prisma.security_status_lu.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends security_status_luCreateManyArgs>(args?: SelectSubset<T, security_status_luCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Security_status_lus and returns the data saved in the database.
     * @param {security_status_luCreateManyAndReturnArgs} args - Arguments to create many Security_status_lus.
     * @example
     * // Create many Security_status_lus
     * const security_status_lu = await prisma.security_status_lu.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Security_status_lus and only return the `security_status_id`
     * const security_status_luWithSecurity_status_idOnly = await prisma.security_status_lu.createManyAndReturn({
     *   select: { security_status_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends security_status_luCreateManyAndReturnArgs>(args?: SelectSubset<T, security_status_luCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$security_status_luPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Security_status_lu.
     * @param {security_status_luDeleteArgs} args - Arguments to delete one Security_status_lu.
     * @example
     * // Delete one Security_status_lu
     * const Security_status_lu = await prisma.security_status_lu.delete({
     *   where: {
     *     // ... filter to delete one Security_status_lu
     *   }
     * })
     * 
     */
    delete<T extends security_status_luDeleteArgs>(args: SelectSubset<T, security_status_luDeleteArgs<ExtArgs>>): Prisma__security_status_luClient<$Result.GetResult<Prisma.$security_status_luPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Security_status_lu.
     * @param {security_status_luUpdateArgs} args - Arguments to update one Security_status_lu.
     * @example
     * // Update one Security_status_lu
     * const security_status_lu = await prisma.security_status_lu.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends security_status_luUpdateArgs>(args: SelectSubset<T, security_status_luUpdateArgs<ExtArgs>>): Prisma__security_status_luClient<$Result.GetResult<Prisma.$security_status_luPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Security_status_lus.
     * @param {security_status_luDeleteManyArgs} args - Arguments to filter Security_status_lus to delete.
     * @example
     * // Delete a few Security_status_lus
     * const { count } = await prisma.security_status_lu.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends security_status_luDeleteManyArgs>(args?: SelectSubset<T, security_status_luDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Security_status_lus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {security_status_luUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Security_status_lus
     * const security_status_lu = await prisma.security_status_lu.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends security_status_luUpdateManyArgs>(args: SelectSubset<T, security_status_luUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Security_status_lus and returns the data updated in the database.
     * @param {security_status_luUpdateManyAndReturnArgs} args - Arguments to update many Security_status_lus.
     * @example
     * // Update many Security_status_lus
     * const security_status_lu = await prisma.security_status_lu.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Security_status_lus and only return the `security_status_id`
     * const security_status_luWithSecurity_status_idOnly = await prisma.security_status_lu.updateManyAndReturn({
     *   select: { security_status_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends security_status_luUpdateManyAndReturnArgs>(args: SelectSubset<T, security_status_luUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$security_status_luPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Security_status_lu.
     * @param {security_status_luUpsertArgs} args - Arguments to update or create a Security_status_lu.
     * @example
     * // Update or create a Security_status_lu
     * const security_status_lu = await prisma.security_status_lu.upsert({
     *   create: {
     *     // ... data to create a Security_status_lu
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Security_status_lu we want to update
     *   }
     * })
     */
    upsert<T extends security_status_luUpsertArgs>(args: SelectSubset<T, security_status_luUpsertArgs<ExtArgs>>): Prisma__security_status_luClient<$Result.GetResult<Prisma.$security_status_luPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Security_status_lus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {security_status_luCountArgs} args - Arguments to filter Security_status_lus to count.
     * @example
     * // Count the number of Security_status_lus
     * const count = await prisma.security_status_lu.count({
     *   where: {
     *     // ... the filter for the Security_status_lus we want to count
     *   }
     * })
    **/
    count<T extends security_status_luCountArgs>(
      args?: Subset<T, security_status_luCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Security_status_luCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Security_status_lu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Security_status_luAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Security_status_luAggregateArgs>(args: Subset<T, Security_status_luAggregateArgs>): Prisma.PrismaPromise<GetSecurity_status_luAggregateType<T>>

    /**
     * Group by Security_status_lu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {security_status_luGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends security_status_luGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: security_status_luGroupByArgs['orderBy'] }
        : { orderBy?: security_status_luGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, security_status_luGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSecurity_status_luGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the security_status_lu model
   */
  readonly fields: security_status_luFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for security_status_lu.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__security_status_luClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user_group_xref<T extends security_status_lu$user_group_xrefArgs<ExtArgs> = {}>(args?: Subset<T, security_status_lu$user_group_xrefArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_group_xrefPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the security_status_lu model
   */
  interface security_status_luFieldRefs {
    readonly security_status_id: FieldRef<"security_status_lu", 'Decimal'>
    readonly status_desc: FieldRef<"security_status_lu", 'String'>
  }
    

  // Custom InputTypes
  /**
   * security_status_lu findUnique
   */
  export type security_status_luFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_status_lu
     */
    select?: security_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_status_lu
     */
    omit?: security_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_status_luInclude<ExtArgs> | null
    /**
     * Filter, which security_status_lu to fetch.
     */
    where: security_status_luWhereUniqueInput
  }

  /**
   * security_status_lu findUniqueOrThrow
   */
  export type security_status_luFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_status_lu
     */
    select?: security_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_status_lu
     */
    omit?: security_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_status_luInclude<ExtArgs> | null
    /**
     * Filter, which security_status_lu to fetch.
     */
    where: security_status_luWhereUniqueInput
  }

  /**
   * security_status_lu findFirst
   */
  export type security_status_luFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_status_lu
     */
    select?: security_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_status_lu
     */
    omit?: security_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_status_luInclude<ExtArgs> | null
    /**
     * Filter, which security_status_lu to fetch.
     */
    where?: security_status_luWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of security_status_lus to fetch.
     */
    orderBy?: security_status_luOrderByWithRelationInput | security_status_luOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for security_status_lus.
     */
    cursor?: security_status_luWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` security_status_lus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` security_status_lus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of security_status_lus.
     */
    distinct?: Security_status_luScalarFieldEnum | Security_status_luScalarFieldEnum[]
  }

  /**
   * security_status_lu findFirstOrThrow
   */
  export type security_status_luFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_status_lu
     */
    select?: security_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_status_lu
     */
    omit?: security_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_status_luInclude<ExtArgs> | null
    /**
     * Filter, which security_status_lu to fetch.
     */
    where?: security_status_luWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of security_status_lus to fetch.
     */
    orderBy?: security_status_luOrderByWithRelationInput | security_status_luOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for security_status_lus.
     */
    cursor?: security_status_luWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` security_status_lus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` security_status_lus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of security_status_lus.
     */
    distinct?: Security_status_luScalarFieldEnum | Security_status_luScalarFieldEnum[]
  }

  /**
   * security_status_lu findMany
   */
  export type security_status_luFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_status_lu
     */
    select?: security_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_status_lu
     */
    omit?: security_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_status_luInclude<ExtArgs> | null
    /**
     * Filter, which security_status_lus to fetch.
     */
    where?: security_status_luWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of security_status_lus to fetch.
     */
    orderBy?: security_status_luOrderByWithRelationInput | security_status_luOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing security_status_lus.
     */
    cursor?: security_status_luWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` security_status_lus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` security_status_lus.
     */
    skip?: number
    distinct?: Security_status_luScalarFieldEnum | Security_status_luScalarFieldEnum[]
  }

  /**
   * security_status_lu create
   */
  export type security_status_luCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_status_lu
     */
    select?: security_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_status_lu
     */
    omit?: security_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_status_luInclude<ExtArgs> | null
    /**
     * The data needed to create a security_status_lu.
     */
    data: XOR<security_status_luCreateInput, security_status_luUncheckedCreateInput>
  }

  /**
   * security_status_lu createMany
   */
  export type security_status_luCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many security_status_lus.
     */
    data: security_status_luCreateManyInput | security_status_luCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * security_status_lu createManyAndReturn
   */
  export type security_status_luCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_status_lu
     */
    select?: security_status_luSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the security_status_lu
     */
    omit?: security_status_luOmit<ExtArgs> | null
    /**
     * The data used to create many security_status_lus.
     */
    data: security_status_luCreateManyInput | security_status_luCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * security_status_lu update
   */
  export type security_status_luUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_status_lu
     */
    select?: security_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_status_lu
     */
    omit?: security_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_status_luInclude<ExtArgs> | null
    /**
     * The data needed to update a security_status_lu.
     */
    data: XOR<security_status_luUpdateInput, security_status_luUncheckedUpdateInput>
    /**
     * Choose, which security_status_lu to update.
     */
    where: security_status_luWhereUniqueInput
  }

  /**
   * security_status_lu updateMany
   */
  export type security_status_luUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update security_status_lus.
     */
    data: XOR<security_status_luUpdateManyMutationInput, security_status_luUncheckedUpdateManyInput>
    /**
     * Filter which security_status_lus to update
     */
    where?: security_status_luWhereInput
    /**
     * Limit how many security_status_lus to update.
     */
    limit?: number
  }

  /**
   * security_status_lu updateManyAndReturn
   */
  export type security_status_luUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_status_lu
     */
    select?: security_status_luSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the security_status_lu
     */
    omit?: security_status_luOmit<ExtArgs> | null
    /**
     * The data used to update security_status_lus.
     */
    data: XOR<security_status_luUpdateManyMutationInput, security_status_luUncheckedUpdateManyInput>
    /**
     * Filter which security_status_lus to update
     */
    where?: security_status_luWhereInput
    /**
     * Limit how many security_status_lus to update.
     */
    limit?: number
  }

  /**
   * security_status_lu upsert
   */
  export type security_status_luUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_status_lu
     */
    select?: security_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_status_lu
     */
    omit?: security_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_status_luInclude<ExtArgs> | null
    /**
     * The filter to search for the security_status_lu to update in case it exists.
     */
    where: security_status_luWhereUniqueInput
    /**
     * In case the security_status_lu found by the `where` argument doesn't exist, create a new security_status_lu with this data.
     */
    create: XOR<security_status_luCreateInput, security_status_luUncheckedCreateInput>
    /**
     * In case the security_status_lu was found with the provided `where` argument, update it with this data.
     */
    update: XOR<security_status_luUpdateInput, security_status_luUncheckedUpdateInput>
  }

  /**
   * security_status_lu delete
   */
  export type security_status_luDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_status_lu
     */
    select?: security_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_status_lu
     */
    omit?: security_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_status_luInclude<ExtArgs> | null
    /**
     * Filter which security_status_lu to delete.
     */
    where: security_status_luWhereUniqueInput
  }

  /**
   * security_status_lu deleteMany
   */
  export type security_status_luDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which security_status_lus to delete
     */
    where?: security_status_luWhereInput
    /**
     * Limit how many security_status_lus to delete.
     */
    limit?: number
  }

  /**
   * security_status_lu.user_group_xref
   */
  export type security_status_lu$user_group_xrefArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_group_xref
     */
    select?: user_group_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_group_xref
     */
    omit?: user_group_xrefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_group_xrefInclude<ExtArgs> | null
    where?: user_group_xrefWhereInput
    orderBy?: user_group_xrefOrderByWithRelationInput | user_group_xrefOrderByWithRelationInput[]
    cursor?: user_group_xrefWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_group_xrefScalarFieldEnum | User_group_xrefScalarFieldEnum[]
  }

  /**
   * security_status_lu without action
   */
  export type security_status_luDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_status_lu
     */
    select?: security_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_status_lu
     */
    omit?: security_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_status_luInclude<ExtArgs> | null
  }


  /**
   * Model security_user
   */

  export type AggregateSecurity_user = {
    _count: Security_userCountAggregateOutputType | null
    _avg: Security_userAvgAggregateOutputType | null
    _sum: Security_userSumAggregateOutputType | null
    _min: Security_userMinAggregateOutputType | null
    _max: Security_userMaxAggregateOutputType | null
  }

  export type Security_userAvgAggregateOutputType = {
    login_id: Decimal | null
    create_user_id: Decimal | null
  }

  export type Security_userSumAggregateOutputType = {
    login_id: Decimal | null
    create_user_id: Decimal | null
  }

  export type Security_userMinAggregateOutputType = {
    login_id: Decimal | null
    user_id: string | null
    password: string | null
    create_user_id: Decimal | null
    modify_date: Date | null
  }

  export type Security_userMaxAggregateOutputType = {
    login_id: Decimal | null
    user_id: string | null
    password: string | null
    create_user_id: Decimal | null
    modify_date: Date | null
  }

  export type Security_userCountAggregateOutputType = {
    login_id: number
    user_id: number
    password: number
    create_user_id: number
    modify_date: number
    _all: number
  }


  export type Security_userAvgAggregateInputType = {
    login_id?: true
    create_user_id?: true
  }

  export type Security_userSumAggregateInputType = {
    login_id?: true
    create_user_id?: true
  }

  export type Security_userMinAggregateInputType = {
    login_id?: true
    user_id?: true
    password?: true
    create_user_id?: true
    modify_date?: true
  }

  export type Security_userMaxAggregateInputType = {
    login_id?: true
    user_id?: true
    password?: true
    create_user_id?: true
    modify_date?: true
  }

  export type Security_userCountAggregateInputType = {
    login_id?: true
    user_id?: true
    password?: true
    create_user_id?: true
    modify_date?: true
    _all?: true
  }

  export type Security_userAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which security_user to aggregate.
     */
    where?: security_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of security_users to fetch.
     */
    orderBy?: security_userOrderByWithRelationInput | security_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: security_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` security_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` security_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned security_users
    **/
    _count?: true | Security_userCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Security_userAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Security_userSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Security_userMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Security_userMaxAggregateInputType
  }

  export type GetSecurity_userAggregateType<T extends Security_userAggregateArgs> = {
        [P in keyof T & keyof AggregateSecurity_user]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSecurity_user[P]>
      : GetScalarType<T[P], AggregateSecurity_user[P]>
  }




  export type security_userGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: security_userWhereInput
    orderBy?: security_userOrderByWithAggregationInput | security_userOrderByWithAggregationInput[]
    by: Security_userScalarFieldEnum[] | Security_userScalarFieldEnum
    having?: security_userScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Security_userCountAggregateInputType | true
    _avg?: Security_userAvgAggregateInputType
    _sum?: Security_userSumAggregateInputType
    _min?: Security_userMinAggregateInputType
    _max?: Security_userMaxAggregateInputType
  }

  export type Security_userGroupByOutputType = {
    login_id: Decimal
    user_id: string
    password: string
    create_user_id: Decimal | null
    modify_date: Date | null
    _count: Security_userCountAggregateOutputType | null
    _avg: Security_userAvgAggregateOutputType | null
    _sum: Security_userSumAggregateOutputType | null
    _min: Security_userMinAggregateOutputType | null
    _max: Security_userMaxAggregateOutputType | null
  }

  type GetSecurity_userGroupByPayload<T extends security_userGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Security_userGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Security_userGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Security_userGroupByOutputType[P]>
            : GetScalarType<T[P], Security_userGroupByOutputType[P]>
        }
      >
    >


  export type security_userSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    login_id?: boolean
    user_id?: boolean
    password?: boolean
    create_user_id?: boolean
    modify_date?: boolean
    user_group_xref?: boolean | security_user$user_group_xrefArgs<ExtArgs>
    _count?: boolean | Security_userCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["security_user"]>

  export type security_userSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    login_id?: boolean
    user_id?: boolean
    password?: boolean
    create_user_id?: boolean
    modify_date?: boolean
  }, ExtArgs["result"]["security_user"]>

  export type security_userSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    login_id?: boolean
    user_id?: boolean
    password?: boolean
    create_user_id?: boolean
    modify_date?: boolean
  }, ExtArgs["result"]["security_user"]>

  export type security_userSelectScalar = {
    login_id?: boolean
    user_id?: boolean
    password?: boolean
    create_user_id?: boolean
    modify_date?: boolean
  }

  export type security_userOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"login_id" | "user_id" | "password" | "create_user_id" | "modify_date", ExtArgs["result"]["security_user"]>
  export type security_userInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_group_xref?: boolean | security_user$user_group_xrefArgs<ExtArgs>
    _count?: boolean | Security_userCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type security_userIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type security_userIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $security_userPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "security_user"
    objects: {
      user_group_xref: Prisma.$user_group_xrefPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      login_id: Prisma.Decimal
      user_id: string
      password: string
      create_user_id: Prisma.Decimal | null
      modify_date: Date | null
    }, ExtArgs["result"]["security_user"]>
    composites: {}
  }

  type security_userGetPayload<S extends boolean | null | undefined | security_userDefaultArgs> = $Result.GetResult<Prisma.$security_userPayload, S>

  type security_userCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<security_userFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Security_userCountAggregateInputType | true
    }

  export interface security_userDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['security_user'], meta: { name: 'security_user' } }
    /**
     * Find zero or one Security_user that matches the filter.
     * @param {security_userFindUniqueArgs} args - Arguments to find a Security_user
     * @example
     * // Get one Security_user
     * const security_user = await prisma.security_user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends security_userFindUniqueArgs>(args: SelectSubset<T, security_userFindUniqueArgs<ExtArgs>>): Prisma__security_userClient<$Result.GetResult<Prisma.$security_userPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Security_user that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {security_userFindUniqueOrThrowArgs} args - Arguments to find a Security_user
     * @example
     * // Get one Security_user
     * const security_user = await prisma.security_user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends security_userFindUniqueOrThrowArgs>(args: SelectSubset<T, security_userFindUniqueOrThrowArgs<ExtArgs>>): Prisma__security_userClient<$Result.GetResult<Prisma.$security_userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Security_user that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {security_userFindFirstArgs} args - Arguments to find a Security_user
     * @example
     * // Get one Security_user
     * const security_user = await prisma.security_user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends security_userFindFirstArgs>(args?: SelectSubset<T, security_userFindFirstArgs<ExtArgs>>): Prisma__security_userClient<$Result.GetResult<Prisma.$security_userPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Security_user that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {security_userFindFirstOrThrowArgs} args - Arguments to find a Security_user
     * @example
     * // Get one Security_user
     * const security_user = await prisma.security_user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends security_userFindFirstOrThrowArgs>(args?: SelectSubset<T, security_userFindFirstOrThrowArgs<ExtArgs>>): Prisma__security_userClient<$Result.GetResult<Prisma.$security_userPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Security_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {security_userFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Security_users
     * const security_users = await prisma.security_user.findMany()
     * 
     * // Get first 10 Security_users
     * const security_users = await prisma.security_user.findMany({ take: 10 })
     * 
     * // Only select the `login_id`
     * const security_userWithLogin_idOnly = await prisma.security_user.findMany({ select: { login_id: true } })
     * 
     */
    findMany<T extends security_userFindManyArgs>(args?: SelectSubset<T, security_userFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$security_userPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Security_user.
     * @param {security_userCreateArgs} args - Arguments to create a Security_user.
     * @example
     * // Create one Security_user
     * const Security_user = await prisma.security_user.create({
     *   data: {
     *     // ... data to create a Security_user
     *   }
     * })
     * 
     */
    create<T extends security_userCreateArgs>(args: SelectSubset<T, security_userCreateArgs<ExtArgs>>): Prisma__security_userClient<$Result.GetResult<Prisma.$security_userPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Security_users.
     * @param {security_userCreateManyArgs} args - Arguments to create many Security_users.
     * @example
     * // Create many Security_users
     * const security_user = await prisma.security_user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends security_userCreateManyArgs>(args?: SelectSubset<T, security_userCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Security_users and returns the data saved in the database.
     * @param {security_userCreateManyAndReturnArgs} args - Arguments to create many Security_users.
     * @example
     * // Create many Security_users
     * const security_user = await prisma.security_user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Security_users and only return the `login_id`
     * const security_userWithLogin_idOnly = await prisma.security_user.createManyAndReturn({
     *   select: { login_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends security_userCreateManyAndReturnArgs>(args?: SelectSubset<T, security_userCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$security_userPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Security_user.
     * @param {security_userDeleteArgs} args - Arguments to delete one Security_user.
     * @example
     * // Delete one Security_user
     * const Security_user = await prisma.security_user.delete({
     *   where: {
     *     // ... filter to delete one Security_user
     *   }
     * })
     * 
     */
    delete<T extends security_userDeleteArgs>(args: SelectSubset<T, security_userDeleteArgs<ExtArgs>>): Prisma__security_userClient<$Result.GetResult<Prisma.$security_userPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Security_user.
     * @param {security_userUpdateArgs} args - Arguments to update one Security_user.
     * @example
     * // Update one Security_user
     * const security_user = await prisma.security_user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends security_userUpdateArgs>(args: SelectSubset<T, security_userUpdateArgs<ExtArgs>>): Prisma__security_userClient<$Result.GetResult<Prisma.$security_userPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Security_users.
     * @param {security_userDeleteManyArgs} args - Arguments to filter Security_users to delete.
     * @example
     * // Delete a few Security_users
     * const { count } = await prisma.security_user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends security_userDeleteManyArgs>(args?: SelectSubset<T, security_userDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Security_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {security_userUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Security_users
     * const security_user = await prisma.security_user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends security_userUpdateManyArgs>(args: SelectSubset<T, security_userUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Security_users and returns the data updated in the database.
     * @param {security_userUpdateManyAndReturnArgs} args - Arguments to update many Security_users.
     * @example
     * // Update many Security_users
     * const security_user = await prisma.security_user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Security_users and only return the `login_id`
     * const security_userWithLogin_idOnly = await prisma.security_user.updateManyAndReturn({
     *   select: { login_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends security_userUpdateManyAndReturnArgs>(args: SelectSubset<T, security_userUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$security_userPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Security_user.
     * @param {security_userUpsertArgs} args - Arguments to update or create a Security_user.
     * @example
     * // Update or create a Security_user
     * const security_user = await prisma.security_user.upsert({
     *   create: {
     *     // ... data to create a Security_user
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Security_user we want to update
     *   }
     * })
     */
    upsert<T extends security_userUpsertArgs>(args: SelectSubset<T, security_userUpsertArgs<ExtArgs>>): Prisma__security_userClient<$Result.GetResult<Prisma.$security_userPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Security_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {security_userCountArgs} args - Arguments to filter Security_users to count.
     * @example
     * // Count the number of Security_users
     * const count = await prisma.security_user.count({
     *   where: {
     *     // ... the filter for the Security_users we want to count
     *   }
     * })
    **/
    count<T extends security_userCountArgs>(
      args?: Subset<T, security_userCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Security_userCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Security_user.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Security_userAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Security_userAggregateArgs>(args: Subset<T, Security_userAggregateArgs>): Prisma.PrismaPromise<GetSecurity_userAggregateType<T>>

    /**
     * Group by Security_user.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {security_userGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends security_userGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: security_userGroupByArgs['orderBy'] }
        : { orderBy?: security_userGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, security_userGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSecurity_userGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the security_user model
   */
  readonly fields: security_userFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for security_user.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__security_userClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user_group_xref<T extends security_user$user_group_xrefArgs<ExtArgs> = {}>(args?: Subset<T, security_user$user_group_xrefArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_group_xrefPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the security_user model
   */
  interface security_userFieldRefs {
    readonly login_id: FieldRef<"security_user", 'Decimal'>
    readonly user_id: FieldRef<"security_user", 'String'>
    readonly password: FieldRef<"security_user", 'String'>
    readonly create_user_id: FieldRef<"security_user", 'Decimal'>
    readonly modify_date: FieldRef<"security_user", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * security_user findUnique
   */
  export type security_userFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_user
     */
    select?: security_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_user
     */
    omit?: security_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_userInclude<ExtArgs> | null
    /**
     * Filter, which security_user to fetch.
     */
    where: security_userWhereUniqueInput
  }

  /**
   * security_user findUniqueOrThrow
   */
  export type security_userFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_user
     */
    select?: security_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_user
     */
    omit?: security_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_userInclude<ExtArgs> | null
    /**
     * Filter, which security_user to fetch.
     */
    where: security_userWhereUniqueInput
  }

  /**
   * security_user findFirst
   */
  export type security_userFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_user
     */
    select?: security_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_user
     */
    omit?: security_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_userInclude<ExtArgs> | null
    /**
     * Filter, which security_user to fetch.
     */
    where?: security_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of security_users to fetch.
     */
    orderBy?: security_userOrderByWithRelationInput | security_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for security_users.
     */
    cursor?: security_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` security_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` security_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of security_users.
     */
    distinct?: Security_userScalarFieldEnum | Security_userScalarFieldEnum[]
  }

  /**
   * security_user findFirstOrThrow
   */
  export type security_userFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_user
     */
    select?: security_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_user
     */
    omit?: security_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_userInclude<ExtArgs> | null
    /**
     * Filter, which security_user to fetch.
     */
    where?: security_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of security_users to fetch.
     */
    orderBy?: security_userOrderByWithRelationInput | security_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for security_users.
     */
    cursor?: security_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` security_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` security_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of security_users.
     */
    distinct?: Security_userScalarFieldEnum | Security_userScalarFieldEnum[]
  }

  /**
   * security_user findMany
   */
  export type security_userFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_user
     */
    select?: security_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_user
     */
    omit?: security_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_userInclude<ExtArgs> | null
    /**
     * Filter, which security_users to fetch.
     */
    where?: security_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of security_users to fetch.
     */
    orderBy?: security_userOrderByWithRelationInput | security_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing security_users.
     */
    cursor?: security_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` security_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` security_users.
     */
    skip?: number
    distinct?: Security_userScalarFieldEnum | Security_userScalarFieldEnum[]
  }

  /**
   * security_user create
   */
  export type security_userCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_user
     */
    select?: security_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_user
     */
    omit?: security_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_userInclude<ExtArgs> | null
    /**
     * The data needed to create a security_user.
     */
    data: XOR<security_userCreateInput, security_userUncheckedCreateInput>
  }

  /**
   * security_user createMany
   */
  export type security_userCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many security_users.
     */
    data: security_userCreateManyInput | security_userCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * security_user createManyAndReturn
   */
  export type security_userCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_user
     */
    select?: security_userSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the security_user
     */
    omit?: security_userOmit<ExtArgs> | null
    /**
     * The data used to create many security_users.
     */
    data: security_userCreateManyInput | security_userCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * security_user update
   */
  export type security_userUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_user
     */
    select?: security_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_user
     */
    omit?: security_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_userInclude<ExtArgs> | null
    /**
     * The data needed to update a security_user.
     */
    data: XOR<security_userUpdateInput, security_userUncheckedUpdateInput>
    /**
     * Choose, which security_user to update.
     */
    where: security_userWhereUniqueInput
  }

  /**
   * security_user updateMany
   */
  export type security_userUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update security_users.
     */
    data: XOR<security_userUpdateManyMutationInput, security_userUncheckedUpdateManyInput>
    /**
     * Filter which security_users to update
     */
    where?: security_userWhereInput
    /**
     * Limit how many security_users to update.
     */
    limit?: number
  }

  /**
   * security_user updateManyAndReturn
   */
  export type security_userUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_user
     */
    select?: security_userSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the security_user
     */
    omit?: security_userOmit<ExtArgs> | null
    /**
     * The data used to update security_users.
     */
    data: XOR<security_userUpdateManyMutationInput, security_userUncheckedUpdateManyInput>
    /**
     * Filter which security_users to update
     */
    where?: security_userWhereInput
    /**
     * Limit how many security_users to update.
     */
    limit?: number
  }

  /**
   * security_user upsert
   */
  export type security_userUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_user
     */
    select?: security_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_user
     */
    omit?: security_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_userInclude<ExtArgs> | null
    /**
     * The filter to search for the security_user to update in case it exists.
     */
    where: security_userWhereUniqueInput
    /**
     * In case the security_user found by the `where` argument doesn't exist, create a new security_user with this data.
     */
    create: XOR<security_userCreateInput, security_userUncheckedCreateInput>
    /**
     * In case the security_user was found with the provided `where` argument, update it with this data.
     */
    update: XOR<security_userUpdateInput, security_userUncheckedUpdateInput>
  }

  /**
   * security_user delete
   */
  export type security_userDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_user
     */
    select?: security_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_user
     */
    omit?: security_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_userInclude<ExtArgs> | null
    /**
     * Filter which security_user to delete.
     */
    where: security_userWhereUniqueInput
  }

  /**
   * security_user deleteMany
   */
  export type security_userDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which security_users to delete
     */
    where?: security_userWhereInput
    /**
     * Limit how many security_users to delete.
     */
    limit?: number
  }

  /**
   * security_user.user_group_xref
   */
  export type security_user$user_group_xrefArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_group_xref
     */
    select?: user_group_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_group_xref
     */
    omit?: user_group_xrefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_group_xrefInclude<ExtArgs> | null
    where?: user_group_xrefWhereInput
    orderBy?: user_group_xrefOrderByWithRelationInput | user_group_xrefOrderByWithRelationInput[]
    cursor?: user_group_xrefWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_group_xrefScalarFieldEnum | User_group_xrefScalarFieldEnum[]
  }

  /**
   * security_user without action
   */
  export type security_userDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_user
     */
    select?: security_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_user
     */
    omit?: security_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_userInclude<ExtArgs> | null
  }


  /**
   * Model social_login_provider
   */

  export type AggregateSocial_login_provider = {
    _count: Social_login_providerCountAggregateOutputType | null
    _avg: Social_login_providerAvgAggregateOutputType | null
    _sum: Social_login_providerSumAggregateOutputType | null
    _min: Social_login_providerMinAggregateOutputType | null
    _max: Social_login_providerMaxAggregateOutputType | null
  }

  export type Social_login_providerAvgAggregateOutputType = {
    social_login_provider_id: Decimal | null
  }

  export type Social_login_providerSumAggregateOutputType = {
    social_login_provider_id: Decimal | null
  }

  export type Social_login_providerMinAggregateOutputType = {
    social_login_provider_id: Decimal | null
    name: string | null
  }

  export type Social_login_providerMaxAggregateOutputType = {
    social_login_provider_id: Decimal | null
    name: string | null
  }

  export type Social_login_providerCountAggregateOutputType = {
    social_login_provider_id: number
    name: number
    _all: number
  }


  export type Social_login_providerAvgAggregateInputType = {
    social_login_provider_id?: true
  }

  export type Social_login_providerSumAggregateInputType = {
    social_login_provider_id?: true
  }

  export type Social_login_providerMinAggregateInputType = {
    social_login_provider_id?: true
    name?: true
  }

  export type Social_login_providerMaxAggregateInputType = {
    social_login_provider_id?: true
    name?: true
  }

  export type Social_login_providerCountAggregateInputType = {
    social_login_provider_id?: true
    name?: true
    _all?: true
  }

  export type Social_login_providerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which social_login_provider to aggregate.
     */
    where?: social_login_providerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of social_login_providers to fetch.
     */
    orderBy?: social_login_providerOrderByWithRelationInput | social_login_providerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: social_login_providerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` social_login_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` social_login_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned social_login_providers
    **/
    _count?: true | Social_login_providerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Social_login_providerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Social_login_providerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Social_login_providerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Social_login_providerMaxAggregateInputType
  }

  export type GetSocial_login_providerAggregateType<T extends Social_login_providerAggregateArgs> = {
        [P in keyof T & keyof AggregateSocial_login_provider]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSocial_login_provider[P]>
      : GetScalarType<T[P], AggregateSocial_login_provider[P]>
  }




  export type social_login_providerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: social_login_providerWhereInput
    orderBy?: social_login_providerOrderByWithAggregationInput | social_login_providerOrderByWithAggregationInput[]
    by: Social_login_providerScalarFieldEnum[] | Social_login_providerScalarFieldEnum
    having?: social_login_providerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Social_login_providerCountAggregateInputType | true
    _avg?: Social_login_providerAvgAggregateInputType
    _sum?: Social_login_providerSumAggregateInputType
    _min?: Social_login_providerMinAggregateInputType
    _max?: Social_login_providerMaxAggregateInputType
  }

  export type Social_login_providerGroupByOutputType = {
    social_login_provider_id: Decimal
    name: string | null
    _count: Social_login_providerCountAggregateOutputType | null
    _avg: Social_login_providerAvgAggregateOutputType | null
    _sum: Social_login_providerSumAggregateOutputType | null
    _min: Social_login_providerMinAggregateOutputType | null
    _max: Social_login_providerMaxAggregateOutputType | null
  }

  type GetSocial_login_providerGroupByPayload<T extends social_login_providerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Social_login_providerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Social_login_providerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Social_login_providerGroupByOutputType[P]>
            : GetScalarType<T[P], Social_login_providerGroupByOutputType[P]>
        }
      >
    >


  export type social_login_providerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    social_login_provider_id?: boolean
    name?: boolean
    user_social_login?: boolean | social_login_provider$user_social_loginArgs<ExtArgs>
    _count?: boolean | Social_login_providerCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["social_login_provider"]>

  export type social_login_providerSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    social_login_provider_id?: boolean
    name?: boolean
  }, ExtArgs["result"]["social_login_provider"]>

  export type social_login_providerSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    social_login_provider_id?: boolean
    name?: boolean
  }, ExtArgs["result"]["social_login_provider"]>

  export type social_login_providerSelectScalar = {
    social_login_provider_id?: boolean
    name?: boolean
  }

  export type social_login_providerOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"social_login_provider_id" | "name", ExtArgs["result"]["social_login_provider"]>
  export type social_login_providerInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_social_login?: boolean | social_login_provider$user_social_loginArgs<ExtArgs>
    _count?: boolean | Social_login_providerCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type social_login_providerIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type social_login_providerIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $social_login_providerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "social_login_provider"
    objects: {
      user_social_login: Prisma.$user_social_loginPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      social_login_provider_id: Prisma.Decimal
      name: string | null
    }, ExtArgs["result"]["social_login_provider"]>
    composites: {}
  }

  type social_login_providerGetPayload<S extends boolean | null | undefined | social_login_providerDefaultArgs> = $Result.GetResult<Prisma.$social_login_providerPayload, S>

  type social_login_providerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<social_login_providerFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Social_login_providerCountAggregateInputType | true
    }

  export interface social_login_providerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['social_login_provider'], meta: { name: 'social_login_provider' } }
    /**
     * Find zero or one Social_login_provider that matches the filter.
     * @param {social_login_providerFindUniqueArgs} args - Arguments to find a Social_login_provider
     * @example
     * // Get one Social_login_provider
     * const social_login_provider = await prisma.social_login_provider.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends social_login_providerFindUniqueArgs>(args: SelectSubset<T, social_login_providerFindUniqueArgs<ExtArgs>>): Prisma__social_login_providerClient<$Result.GetResult<Prisma.$social_login_providerPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Social_login_provider that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {social_login_providerFindUniqueOrThrowArgs} args - Arguments to find a Social_login_provider
     * @example
     * // Get one Social_login_provider
     * const social_login_provider = await prisma.social_login_provider.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends social_login_providerFindUniqueOrThrowArgs>(args: SelectSubset<T, social_login_providerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__social_login_providerClient<$Result.GetResult<Prisma.$social_login_providerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Social_login_provider that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {social_login_providerFindFirstArgs} args - Arguments to find a Social_login_provider
     * @example
     * // Get one Social_login_provider
     * const social_login_provider = await prisma.social_login_provider.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends social_login_providerFindFirstArgs>(args?: SelectSubset<T, social_login_providerFindFirstArgs<ExtArgs>>): Prisma__social_login_providerClient<$Result.GetResult<Prisma.$social_login_providerPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Social_login_provider that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {social_login_providerFindFirstOrThrowArgs} args - Arguments to find a Social_login_provider
     * @example
     * // Get one Social_login_provider
     * const social_login_provider = await prisma.social_login_provider.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends social_login_providerFindFirstOrThrowArgs>(args?: SelectSubset<T, social_login_providerFindFirstOrThrowArgs<ExtArgs>>): Prisma__social_login_providerClient<$Result.GetResult<Prisma.$social_login_providerPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Social_login_providers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {social_login_providerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Social_login_providers
     * const social_login_providers = await prisma.social_login_provider.findMany()
     * 
     * // Get first 10 Social_login_providers
     * const social_login_providers = await prisma.social_login_provider.findMany({ take: 10 })
     * 
     * // Only select the `social_login_provider_id`
     * const social_login_providerWithSocial_login_provider_idOnly = await prisma.social_login_provider.findMany({ select: { social_login_provider_id: true } })
     * 
     */
    findMany<T extends social_login_providerFindManyArgs>(args?: SelectSubset<T, social_login_providerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$social_login_providerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Social_login_provider.
     * @param {social_login_providerCreateArgs} args - Arguments to create a Social_login_provider.
     * @example
     * // Create one Social_login_provider
     * const Social_login_provider = await prisma.social_login_provider.create({
     *   data: {
     *     // ... data to create a Social_login_provider
     *   }
     * })
     * 
     */
    create<T extends social_login_providerCreateArgs>(args: SelectSubset<T, social_login_providerCreateArgs<ExtArgs>>): Prisma__social_login_providerClient<$Result.GetResult<Prisma.$social_login_providerPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Social_login_providers.
     * @param {social_login_providerCreateManyArgs} args - Arguments to create many Social_login_providers.
     * @example
     * // Create many Social_login_providers
     * const social_login_provider = await prisma.social_login_provider.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends social_login_providerCreateManyArgs>(args?: SelectSubset<T, social_login_providerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Social_login_providers and returns the data saved in the database.
     * @param {social_login_providerCreateManyAndReturnArgs} args - Arguments to create many Social_login_providers.
     * @example
     * // Create many Social_login_providers
     * const social_login_provider = await prisma.social_login_provider.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Social_login_providers and only return the `social_login_provider_id`
     * const social_login_providerWithSocial_login_provider_idOnly = await prisma.social_login_provider.createManyAndReturn({
     *   select: { social_login_provider_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends social_login_providerCreateManyAndReturnArgs>(args?: SelectSubset<T, social_login_providerCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$social_login_providerPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Social_login_provider.
     * @param {social_login_providerDeleteArgs} args - Arguments to delete one Social_login_provider.
     * @example
     * // Delete one Social_login_provider
     * const Social_login_provider = await prisma.social_login_provider.delete({
     *   where: {
     *     // ... filter to delete one Social_login_provider
     *   }
     * })
     * 
     */
    delete<T extends social_login_providerDeleteArgs>(args: SelectSubset<T, social_login_providerDeleteArgs<ExtArgs>>): Prisma__social_login_providerClient<$Result.GetResult<Prisma.$social_login_providerPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Social_login_provider.
     * @param {social_login_providerUpdateArgs} args - Arguments to update one Social_login_provider.
     * @example
     * // Update one Social_login_provider
     * const social_login_provider = await prisma.social_login_provider.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends social_login_providerUpdateArgs>(args: SelectSubset<T, social_login_providerUpdateArgs<ExtArgs>>): Prisma__social_login_providerClient<$Result.GetResult<Prisma.$social_login_providerPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Social_login_providers.
     * @param {social_login_providerDeleteManyArgs} args - Arguments to filter Social_login_providers to delete.
     * @example
     * // Delete a few Social_login_providers
     * const { count } = await prisma.social_login_provider.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends social_login_providerDeleteManyArgs>(args?: SelectSubset<T, social_login_providerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Social_login_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {social_login_providerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Social_login_providers
     * const social_login_provider = await prisma.social_login_provider.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends social_login_providerUpdateManyArgs>(args: SelectSubset<T, social_login_providerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Social_login_providers and returns the data updated in the database.
     * @param {social_login_providerUpdateManyAndReturnArgs} args - Arguments to update many Social_login_providers.
     * @example
     * // Update many Social_login_providers
     * const social_login_provider = await prisma.social_login_provider.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Social_login_providers and only return the `social_login_provider_id`
     * const social_login_providerWithSocial_login_provider_idOnly = await prisma.social_login_provider.updateManyAndReturn({
     *   select: { social_login_provider_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends social_login_providerUpdateManyAndReturnArgs>(args: SelectSubset<T, social_login_providerUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$social_login_providerPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Social_login_provider.
     * @param {social_login_providerUpsertArgs} args - Arguments to update or create a Social_login_provider.
     * @example
     * // Update or create a Social_login_provider
     * const social_login_provider = await prisma.social_login_provider.upsert({
     *   create: {
     *     // ... data to create a Social_login_provider
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Social_login_provider we want to update
     *   }
     * })
     */
    upsert<T extends social_login_providerUpsertArgs>(args: SelectSubset<T, social_login_providerUpsertArgs<ExtArgs>>): Prisma__social_login_providerClient<$Result.GetResult<Prisma.$social_login_providerPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Social_login_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {social_login_providerCountArgs} args - Arguments to filter Social_login_providers to count.
     * @example
     * // Count the number of Social_login_providers
     * const count = await prisma.social_login_provider.count({
     *   where: {
     *     // ... the filter for the Social_login_providers we want to count
     *   }
     * })
    **/
    count<T extends social_login_providerCountArgs>(
      args?: Subset<T, social_login_providerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Social_login_providerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Social_login_provider.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Social_login_providerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Social_login_providerAggregateArgs>(args: Subset<T, Social_login_providerAggregateArgs>): Prisma.PrismaPromise<GetSocial_login_providerAggregateType<T>>

    /**
     * Group by Social_login_provider.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {social_login_providerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends social_login_providerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: social_login_providerGroupByArgs['orderBy'] }
        : { orderBy?: social_login_providerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, social_login_providerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSocial_login_providerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the social_login_provider model
   */
  readonly fields: social_login_providerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for social_login_provider.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__social_login_providerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user_social_login<T extends social_login_provider$user_social_loginArgs<ExtArgs> = {}>(args?: Subset<T, social_login_provider$user_social_loginArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_social_loginPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the social_login_provider model
   */
  interface social_login_providerFieldRefs {
    readonly social_login_provider_id: FieldRef<"social_login_provider", 'Decimal'>
    readonly name: FieldRef<"social_login_provider", 'String'>
  }
    

  // Custom InputTypes
  /**
   * social_login_provider findUnique
   */
  export type social_login_providerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the social_login_provider
     */
    select?: social_login_providerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the social_login_provider
     */
    omit?: social_login_providerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: social_login_providerInclude<ExtArgs> | null
    /**
     * Filter, which social_login_provider to fetch.
     */
    where: social_login_providerWhereUniqueInput
  }

  /**
   * social_login_provider findUniqueOrThrow
   */
  export type social_login_providerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the social_login_provider
     */
    select?: social_login_providerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the social_login_provider
     */
    omit?: social_login_providerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: social_login_providerInclude<ExtArgs> | null
    /**
     * Filter, which social_login_provider to fetch.
     */
    where: social_login_providerWhereUniqueInput
  }

  /**
   * social_login_provider findFirst
   */
  export type social_login_providerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the social_login_provider
     */
    select?: social_login_providerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the social_login_provider
     */
    omit?: social_login_providerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: social_login_providerInclude<ExtArgs> | null
    /**
     * Filter, which social_login_provider to fetch.
     */
    where?: social_login_providerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of social_login_providers to fetch.
     */
    orderBy?: social_login_providerOrderByWithRelationInput | social_login_providerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for social_login_providers.
     */
    cursor?: social_login_providerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` social_login_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` social_login_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of social_login_providers.
     */
    distinct?: Social_login_providerScalarFieldEnum | Social_login_providerScalarFieldEnum[]
  }

  /**
   * social_login_provider findFirstOrThrow
   */
  export type social_login_providerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the social_login_provider
     */
    select?: social_login_providerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the social_login_provider
     */
    omit?: social_login_providerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: social_login_providerInclude<ExtArgs> | null
    /**
     * Filter, which social_login_provider to fetch.
     */
    where?: social_login_providerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of social_login_providers to fetch.
     */
    orderBy?: social_login_providerOrderByWithRelationInput | social_login_providerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for social_login_providers.
     */
    cursor?: social_login_providerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` social_login_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` social_login_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of social_login_providers.
     */
    distinct?: Social_login_providerScalarFieldEnum | Social_login_providerScalarFieldEnum[]
  }

  /**
   * social_login_provider findMany
   */
  export type social_login_providerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the social_login_provider
     */
    select?: social_login_providerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the social_login_provider
     */
    omit?: social_login_providerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: social_login_providerInclude<ExtArgs> | null
    /**
     * Filter, which social_login_providers to fetch.
     */
    where?: social_login_providerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of social_login_providers to fetch.
     */
    orderBy?: social_login_providerOrderByWithRelationInput | social_login_providerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing social_login_providers.
     */
    cursor?: social_login_providerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` social_login_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` social_login_providers.
     */
    skip?: number
    distinct?: Social_login_providerScalarFieldEnum | Social_login_providerScalarFieldEnum[]
  }

  /**
   * social_login_provider create
   */
  export type social_login_providerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the social_login_provider
     */
    select?: social_login_providerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the social_login_provider
     */
    omit?: social_login_providerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: social_login_providerInclude<ExtArgs> | null
    /**
     * The data needed to create a social_login_provider.
     */
    data: XOR<social_login_providerCreateInput, social_login_providerUncheckedCreateInput>
  }

  /**
   * social_login_provider createMany
   */
  export type social_login_providerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many social_login_providers.
     */
    data: social_login_providerCreateManyInput | social_login_providerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * social_login_provider createManyAndReturn
   */
  export type social_login_providerCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the social_login_provider
     */
    select?: social_login_providerSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the social_login_provider
     */
    omit?: social_login_providerOmit<ExtArgs> | null
    /**
     * The data used to create many social_login_providers.
     */
    data: social_login_providerCreateManyInput | social_login_providerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * social_login_provider update
   */
  export type social_login_providerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the social_login_provider
     */
    select?: social_login_providerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the social_login_provider
     */
    omit?: social_login_providerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: social_login_providerInclude<ExtArgs> | null
    /**
     * The data needed to update a social_login_provider.
     */
    data: XOR<social_login_providerUpdateInput, social_login_providerUncheckedUpdateInput>
    /**
     * Choose, which social_login_provider to update.
     */
    where: social_login_providerWhereUniqueInput
  }

  /**
   * social_login_provider updateMany
   */
  export type social_login_providerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update social_login_providers.
     */
    data: XOR<social_login_providerUpdateManyMutationInput, social_login_providerUncheckedUpdateManyInput>
    /**
     * Filter which social_login_providers to update
     */
    where?: social_login_providerWhereInput
    /**
     * Limit how many social_login_providers to update.
     */
    limit?: number
  }

  /**
   * social_login_provider updateManyAndReturn
   */
  export type social_login_providerUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the social_login_provider
     */
    select?: social_login_providerSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the social_login_provider
     */
    omit?: social_login_providerOmit<ExtArgs> | null
    /**
     * The data used to update social_login_providers.
     */
    data: XOR<social_login_providerUpdateManyMutationInput, social_login_providerUncheckedUpdateManyInput>
    /**
     * Filter which social_login_providers to update
     */
    where?: social_login_providerWhereInput
    /**
     * Limit how many social_login_providers to update.
     */
    limit?: number
  }

  /**
   * social_login_provider upsert
   */
  export type social_login_providerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the social_login_provider
     */
    select?: social_login_providerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the social_login_provider
     */
    omit?: social_login_providerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: social_login_providerInclude<ExtArgs> | null
    /**
     * The filter to search for the social_login_provider to update in case it exists.
     */
    where: social_login_providerWhereUniqueInput
    /**
     * In case the social_login_provider found by the `where` argument doesn't exist, create a new social_login_provider with this data.
     */
    create: XOR<social_login_providerCreateInput, social_login_providerUncheckedCreateInput>
    /**
     * In case the social_login_provider was found with the provided `where` argument, update it with this data.
     */
    update: XOR<social_login_providerUpdateInput, social_login_providerUncheckedUpdateInput>
  }

  /**
   * social_login_provider delete
   */
  export type social_login_providerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the social_login_provider
     */
    select?: social_login_providerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the social_login_provider
     */
    omit?: social_login_providerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: social_login_providerInclude<ExtArgs> | null
    /**
     * Filter which social_login_provider to delete.
     */
    where: social_login_providerWhereUniqueInput
  }

  /**
   * social_login_provider deleteMany
   */
  export type social_login_providerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which social_login_providers to delete
     */
    where?: social_login_providerWhereInput
    /**
     * Limit how many social_login_providers to delete.
     */
    limit?: number
  }

  /**
   * social_login_provider.user_social_login
   */
  export type social_login_provider$user_social_loginArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_social_login
     */
    select?: user_social_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_social_login
     */
    omit?: user_social_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_social_loginInclude<ExtArgs> | null
    where?: user_social_loginWhereInput
    orderBy?: user_social_loginOrderByWithRelationInput | user_social_loginOrderByWithRelationInput[]
    cursor?: user_social_loginWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_social_loginScalarFieldEnum | User_social_loginScalarFieldEnum[]
  }

  /**
   * social_login_provider without action
   */
  export type social_login_providerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the social_login_provider
     */
    select?: social_login_providerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the social_login_provider
     */
    omit?: social_login_providerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: social_login_providerInclude<ExtArgs> | null
  }


  /**
   * Model sso_login_provider
   */

  export type AggregateSso_login_provider = {
    _count: Sso_login_providerCountAggregateOutputType | null
    _avg: Sso_login_providerAvgAggregateOutputType | null
    _sum: Sso_login_providerSumAggregateOutputType | null
    _min: Sso_login_providerMinAggregateOutputType | null
    _max: Sso_login_providerMaxAggregateOutputType | null
  }

  export type Sso_login_providerAvgAggregateOutputType = {
    sso_login_provider_id: Decimal | null
  }

  export type Sso_login_providerSumAggregateOutputType = {
    sso_login_provider_id: Decimal | null
  }

  export type Sso_login_providerMinAggregateOutputType = {
    sso_login_provider_id: Decimal | null
    name: string | null
    type: string | null
    identify_email_enabled: boolean | null
    identify_handle_enabled: boolean | null
  }

  export type Sso_login_providerMaxAggregateOutputType = {
    sso_login_provider_id: Decimal | null
    name: string | null
    type: string | null
    identify_email_enabled: boolean | null
    identify_handle_enabled: boolean | null
  }

  export type Sso_login_providerCountAggregateOutputType = {
    sso_login_provider_id: number
    name: number
    type: number
    identify_email_enabled: number
    identify_handle_enabled: number
    _all: number
  }


  export type Sso_login_providerAvgAggregateInputType = {
    sso_login_provider_id?: true
  }

  export type Sso_login_providerSumAggregateInputType = {
    sso_login_provider_id?: true
  }

  export type Sso_login_providerMinAggregateInputType = {
    sso_login_provider_id?: true
    name?: true
    type?: true
    identify_email_enabled?: true
    identify_handle_enabled?: true
  }

  export type Sso_login_providerMaxAggregateInputType = {
    sso_login_provider_id?: true
    name?: true
    type?: true
    identify_email_enabled?: true
    identify_handle_enabled?: true
  }

  export type Sso_login_providerCountAggregateInputType = {
    sso_login_provider_id?: true
    name?: true
    type?: true
    identify_email_enabled?: true
    identify_handle_enabled?: true
    _all?: true
  }

  export type Sso_login_providerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sso_login_provider to aggregate.
     */
    where?: sso_login_providerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_login_providers to fetch.
     */
    orderBy?: sso_login_providerOrderByWithRelationInput | sso_login_providerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sso_login_providerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_login_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_login_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sso_login_providers
    **/
    _count?: true | Sso_login_providerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sso_login_providerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sso_login_providerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sso_login_providerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sso_login_providerMaxAggregateInputType
  }

  export type GetSso_login_providerAggregateType<T extends Sso_login_providerAggregateArgs> = {
        [P in keyof T & keyof AggregateSso_login_provider]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSso_login_provider[P]>
      : GetScalarType<T[P], AggregateSso_login_provider[P]>
  }




  export type sso_login_providerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sso_login_providerWhereInput
    orderBy?: sso_login_providerOrderByWithAggregationInput | sso_login_providerOrderByWithAggregationInput[]
    by: Sso_login_providerScalarFieldEnum[] | Sso_login_providerScalarFieldEnum
    having?: sso_login_providerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sso_login_providerCountAggregateInputType | true
    _avg?: Sso_login_providerAvgAggregateInputType
    _sum?: Sso_login_providerSumAggregateInputType
    _min?: Sso_login_providerMinAggregateInputType
    _max?: Sso_login_providerMaxAggregateInputType
  }

  export type Sso_login_providerGroupByOutputType = {
    sso_login_provider_id: Decimal
    name: string | null
    type: string
    identify_email_enabled: boolean
    identify_handle_enabled: boolean
    _count: Sso_login_providerCountAggregateOutputType | null
    _avg: Sso_login_providerAvgAggregateOutputType | null
    _sum: Sso_login_providerSumAggregateOutputType | null
    _min: Sso_login_providerMinAggregateOutputType | null
    _max: Sso_login_providerMaxAggregateOutputType | null
  }

  type GetSso_login_providerGroupByPayload<T extends sso_login_providerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sso_login_providerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sso_login_providerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sso_login_providerGroupByOutputType[P]>
            : GetScalarType<T[P], Sso_login_providerGroupByOutputType[P]>
        }
      >
    >


  export type sso_login_providerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sso_login_provider_id?: boolean
    name?: boolean
    type?: boolean
    identify_email_enabled?: boolean
    identify_handle_enabled?: boolean
    user_sso_login?: boolean | sso_login_provider$user_sso_loginArgs<ExtArgs>
    _count?: boolean | Sso_login_providerCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sso_login_provider"]>

  export type sso_login_providerSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sso_login_provider_id?: boolean
    name?: boolean
    type?: boolean
    identify_email_enabled?: boolean
    identify_handle_enabled?: boolean
  }, ExtArgs["result"]["sso_login_provider"]>

  export type sso_login_providerSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sso_login_provider_id?: boolean
    name?: boolean
    type?: boolean
    identify_email_enabled?: boolean
    identify_handle_enabled?: boolean
  }, ExtArgs["result"]["sso_login_provider"]>

  export type sso_login_providerSelectScalar = {
    sso_login_provider_id?: boolean
    name?: boolean
    type?: boolean
    identify_email_enabled?: boolean
    identify_handle_enabled?: boolean
  }

  export type sso_login_providerOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"sso_login_provider_id" | "name" | "type" | "identify_email_enabled" | "identify_handle_enabled", ExtArgs["result"]["sso_login_provider"]>
  export type sso_login_providerInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_sso_login?: boolean | sso_login_provider$user_sso_loginArgs<ExtArgs>
    _count?: boolean | Sso_login_providerCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type sso_login_providerIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type sso_login_providerIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $sso_login_providerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sso_login_provider"
    objects: {
      user_sso_login: Prisma.$user_sso_loginPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      sso_login_provider_id: Prisma.Decimal
      name: string | null
      type: string
      identify_email_enabled: boolean
      identify_handle_enabled: boolean
    }, ExtArgs["result"]["sso_login_provider"]>
    composites: {}
  }

  type sso_login_providerGetPayload<S extends boolean | null | undefined | sso_login_providerDefaultArgs> = $Result.GetResult<Prisma.$sso_login_providerPayload, S>

  type sso_login_providerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sso_login_providerFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sso_login_providerCountAggregateInputType | true
    }

  export interface sso_login_providerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sso_login_provider'], meta: { name: 'sso_login_provider' } }
    /**
     * Find zero or one Sso_login_provider that matches the filter.
     * @param {sso_login_providerFindUniqueArgs} args - Arguments to find a Sso_login_provider
     * @example
     * // Get one Sso_login_provider
     * const sso_login_provider = await prisma.sso_login_provider.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sso_login_providerFindUniqueArgs>(args: SelectSubset<T, sso_login_providerFindUniqueArgs<ExtArgs>>): Prisma__sso_login_providerClient<$Result.GetResult<Prisma.$sso_login_providerPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sso_login_provider that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sso_login_providerFindUniqueOrThrowArgs} args - Arguments to find a Sso_login_provider
     * @example
     * // Get one Sso_login_provider
     * const sso_login_provider = await prisma.sso_login_provider.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sso_login_providerFindUniqueOrThrowArgs>(args: SelectSubset<T, sso_login_providerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sso_login_providerClient<$Result.GetResult<Prisma.$sso_login_providerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sso_login_provider that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_login_providerFindFirstArgs} args - Arguments to find a Sso_login_provider
     * @example
     * // Get one Sso_login_provider
     * const sso_login_provider = await prisma.sso_login_provider.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sso_login_providerFindFirstArgs>(args?: SelectSubset<T, sso_login_providerFindFirstArgs<ExtArgs>>): Prisma__sso_login_providerClient<$Result.GetResult<Prisma.$sso_login_providerPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sso_login_provider that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_login_providerFindFirstOrThrowArgs} args - Arguments to find a Sso_login_provider
     * @example
     * // Get one Sso_login_provider
     * const sso_login_provider = await prisma.sso_login_provider.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sso_login_providerFindFirstOrThrowArgs>(args?: SelectSubset<T, sso_login_providerFindFirstOrThrowArgs<ExtArgs>>): Prisma__sso_login_providerClient<$Result.GetResult<Prisma.$sso_login_providerPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sso_login_providers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_login_providerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sso_login_providers
     * const sso_login_providers = await prisma.sso_login_provider.findMany()
     * 
     * // Get first 10 Sso_login_providers
     * const sso_login_providers = await prisma.sso_login_provider.findMany({ take: 10 })
     * 
     * // Only select the `sso_login_provider_id`
     * const sso_login_providerWithSso_login_provider_idOnly = await prisma.sso_login_provider.findMany({ select: { sso_login_provider_id: true } })
     * 
     */
    findMany<T extends sso_login_providerFindManyArgs>(args?: SelectSubset<T, sso_login_providerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sso_login_providerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sso_login_provider.
     * @param {sso_login_providerCreateArgs} args - Arguments to create a Sso_login_provider.
     * @example
     * // Create one Sso_login_provider
     * const Sso_login_provider = await prisma.sso_login_provider.create({
     *   data: {
     *     // ... data to create a Sso_login_provider
     *   }
     * })
     * 
     */
    create<T extends sso_login_providerCreateArgs>(args: SelectSubset<T, sso_login_providerCreateArgs<ExtArgs>>): Prisma__sso_login_providerClient<$Result.GetResult<Prisma.$sso_login_providerPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sso_login_providers.
     * @param {sso_login_providerCreateManyArgs} args - Arguments to create many Sso_login_providers.
     * @example
     * // Create many Sso_login_providers
     * const sso_login_provider = await prisma.sso_login_provider.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sso_login_providerCreateManyArgs>(args?: SelectSubset<T, sso_login_providerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sso_login_providers and returns the data saved in the database.
     * @param {sso_login_providerCreateManyAndReturnArgs} args - Arguments to create many Sso_login_providers.
     * @example
     * // Create many Sso_login_providers
     * const sso_login_provider = await prisma.sso_login_provider.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sso_login_providers and only return the `sso_login_provider_id`
     * const sso_login_providerWithSso_login_provider_idOnly = await prisma.sso_login_provider.createManyAndReturn({
     *   select: { sso_login_provider_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends sso_login_providerCreateManyAndReturnArgs>(args?: SelectSubset<T, sso_login_providerCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sso_login_providerPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Sso_login_provider.
     * @param {sso_login_providerDeleteArgs} args - Arguments to delete one Sso_login_provider.
     * @example
     * // Delete one Sso_login_provider
     * const Sso_login_provider = await prisma.sso_login_provider.delete({
     *   where: {
     *     // ... filter to delete one Sso_login_provider
     *   }
     * })
     * 
     */
    delete<T extends sso_login_providerDeleteArgs>(args: SelectSubset<T, sso_login_providerDeleteArgs<ExtArgs>>): Prisma__sso_login_providerClient<$Result.GetResult<Prisma.$sso_login_providerPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sso_login_provider.
     * @param {sso_login_providerUpdateArgs} args - Arguments to update one Sso_login_provider.
     * @example
     * // Update one Sso_login_provider
     * const sso_login_provider = await prisma.sso_login_provider.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sso_login_providerUpdateArgs>(args: SelectSubset<T, sso_login_providerUpdateArgs<ExtArgs>>): Prisma__sso_login_providerClient<$Result.GetResult<Prisma.$sso_login_providerPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sso_login_providers.
     * @param {sso_login_providerDeleteManyArgs} args - Arguments to filter Sso_login_providers to delete.
     * @example
     * // Delete a few Sso_login_providers
     * const { count } = await prisma.sso_login_provider.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sso_login_providerDeleteManyArgs>(args?: SelectSubset<T, sso_login_providerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sso_login_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_login_providerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sso_login_providers
     * const sso_login_provider = await prisma.sso_login_provider.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sso_login_providerUpdateManyArgs>(args: SelectSubset<T, sso_login_providerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sso_login_providers and returns the data updated in the database.
     * @param {sso_login_providerUpdateManyAndReturnArgs} args - Arguments to update many Sso_login_providers.
     * @example
     * // Update many Sso_login_providers
     * const sso_login_provider = await prisma.sso_login_provider.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sso_login_providers and only return the `sso_login_provider_id`
     * const sso_login_providerWithSso_login_provider_idOnly = await prisma.sso_login_provider.updateManyAndReturn({
     *   select: { sso_login_provider_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends sso_login_providerUpdateManyAndReturnArgs>(args: SelectSubset<T, sso_login_providerUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sso_login_providerPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Sso_login_provider.
     * @param {sso_login_providerUpsertArgs} args - Arguments to update or create a Sso_login_provider.
     * @example
     * // Update or create a Sso_login_provider
     * const sso_login_provider = await prisma.sso_login_provider.upsert({
     *   create: {
     *     // ... data to create a Sso_login_provider
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sso_login_provider we want to update
     *   }
     * })
     */
    upsert<T extends sso_login_providerUpsertArgs>(args: SelectSubset<T, sso_login_providerUpsertArgs<ExtArgs>>): Prisma__sso_login_providerClient<$Result.GetResult<Prisma.$sso_login_providerPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sso_login_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_login_providerCountArgs} args - Arguments to filter Sso_login_providers to count.
     * @example
     * // Count the number of Sso_login_providers
     * const count = await prisma.sso_login_provider.count({
     *   where: {
     *     // ... the filter for the Sso_login_providers we want to count
     *   }
     * })
    **/
    count<T extends sso_login_providerCountArgs>(
      args?: Subset<T, sso_login_providerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sso_login_providerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sso_login_provider.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sso_login_providerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sso_login_providerAggregateArgs>(args: Subset<T, Sso_login_providerAggregateArgs>): Prisma.PrismaPromise<GetSso_login_providerAggregateType<T>>

    /**
     * Group by Sso_login_provider.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_login_providerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sso_login_providerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sso_login_providerGroupByArgs['orderBy'] }
        : { orderBy?: sso_login_providerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sso_login_providerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSso_login_providerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sso_login_provider model
   */
  readonly fields: sso_login_providerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sso_login_provider.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sso_login_providerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user_sso_login<T extends sso_login_provider$user_sso_loginArgs<ExtArgs> = {}>(args?: Subset<T, sso_login_provider$user_sso_loginArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_sso_loginPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sso_login_provider model
   */
  interface sso_login_providerFieldRefs {
    readonly sso_login_provider_id: FieldRef<"sso_login_provider", 'Decimal'>
    readonly name: FieldRef<"sso_login_provider", 'String'>
    readonly type: FieldRef<"sso_login_provider", 'String'>
    readonly identify_email_enabled: FieldRef<"sso_login_provider", 'Boolean'>
    readonly identify_handle_enabled: FieldRef<"sso_login_provider", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * sso_login_provider findUnique
   */
  export type sso_login_providerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_login_provider
     */
    select?: sso_login_providerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_login_provider
     */
    omit?: sso_login_providerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_login_providerInclude<ExtArgs> | null
    /**
     * Filter, which sso_login_provider to fetch.
     */
    where: sso_login_providerWhereUniqueInput
  }

  /**
   * sso_login_provider findUniqueOrThrow
   */
  export type sso_login_providerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_login_provider
     */
    select?: sso_login_providerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_login_provider
     */
    omit?: sso_login_providerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_login_providerInclude<ExtArgs> | null
    /**
     * Filter, which sso_login_provider to fetch.
     */
    where: sso_login_providerWhereUniqueInput
  }

  /**
   * sso_login_provider findFirst
   */
  export type sso_login_providerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_login_provider
     */
    select?: sso_login_providerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_login_provider
     */
    omit?: sso_login_providerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_login_providerInclude<ExtArgs> | null
    /**
     * Filter, which sso_login_provider to fetch.
     */
    where?: sso_login_providerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_login_providers to fetch.
     */
    orderBy?: sso_login_providerOrderByWithRelationInput | sso_login_providerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sso_login_providers.
     */
    cursor?: sso_login_providerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_login_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_login_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sso_login_providers.
     */
    distinct?: Sso_login_providerScalarFieldEnum | Sso_login_providerScalarFieldEnum[]
  }

  /**
   * sso_login_provider findFirstOrThrow
   */
  export type sso_login_providerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_login_provider
     */
    select?: sso_login_providerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_login_provider
     */
    omit?: sso_login_providerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_login_providerInclude<ExtArgs> | null
    /**
     * Filter, which sso_login_provider to fetch.
     */
    where?: sso_login_providerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_login_providers to fetch.
     */
    orderBy?: sso_login_providerOrderByWithRelationInput | sso_login_providerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sso_login_providers.
     */
    cursor?: sso_login_providerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_login_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_login_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sso_login_providers.
     */
    distinct?: Sso_login_providerScalarFieldEnum | Sso_login_providerScalarFieldEnum[]
  }

  /**
   * sso_login_provider findMany
   */
  export type sso_login_providerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_login_provider
     */
    select?: sso_login_providerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_login_provider
     */
    omit?: sso_login_providerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_login_providerInclude<ExtArgs> | null
    /**
     * Filter, which sso_login_providers to fetch.
     */
    where?: sso_login_providerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_login_providers to fetch.
     */
    orderBy?: sso_login_providerOrderByWithRelationInput | sso_login_providerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sso_login_providers.
     */
    cursor?: sso_login_providerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_login_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_login_providers.
     */
    skip?: number
    distinct?: Sso_login_providerScalarFieldEnum | Sso_login_providerScalarFieldEnum[]
  }

  /**
   * sso_login_provider create
   */
  export type sso_login_providerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_login_provider
     */
    select?: sso_login_providerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_login_provider
     */
    omit?: sso_login_providerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_login_providerInclude<ExtArgs> | null
    /**
     * The data needed to create a sso_login_provider.
     */
    data: XOR<sso_login_providerCreateInput, sso_login_providerUncheckedCreateInput>
  }

  /**
   * sso_login_provider createMany
   */
  export type sso_login_providerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sso_login_providers.
     */
    data: sso_login_providerCreateManyInput | sso_login_providerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sso_login_provider createManyAndReturn
   */
  export type sso_login_providerCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_login_provider
     */
    select?: sso_login_providerSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the sso_login_provider
     */
    omit?: sso_login_providerOmit<ExtArgs> | null
    /**
     * The data used to create many sso_login_providers.
     */
    data: sso_login_providerCreateManyInput | sso_login_providerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sso_login_provider update
   */
  export type sso_login_providerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_login_provider
     */
    select?: sso_login_providerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_login_provider
     */
    omit?: sso_login_providerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_login_providerInclude<ExtArgs> | null
    /**
     * The data needed to update a sso_login_provider.
     */
    data: XOR<sso_login_providerUpdateInput, sso_login_providerUncheckedUpdateInput>
    /**
     * Choose, which sso_login_provider to update.
     */
    where: sso_login_providerWhereUniqueInput
  }

  /**
   * sso_login_provider updateMany
   */
  export type sso_login_providerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sso_login_providers.
     */
    data: XOR<sso_login_providerUpdateManyMutationInput, sso_login_providerUncheckedUpdateManyInput>
    /**
     * Filter which sso_login_providers to update
     */
    where?: sso_login_providerWhereInput
    /**
     * Limit how many sso_login_providers to update.
     */
    limit?: number
  }

  /**
   * sso_login_provider updateManyAndReturn
   */
  export type sso_login_providerUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_login_provider
     */
    select?: sso_login_providerSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the sso_login_provider
     */
    omit?: sso_login_providerOmit<ExtArgs> | null
    /**
     * The data used to update sso_login_providers.
     */
    data: XOR<sso_login_providerUpdateManyMutationInput, sso_login_providerUncheckedUpdateManyInput>
    /**
     * Filter which sso_login_providers to update
     */
    where?: sso_login_providerWhereInput
    /**
     * Limit how many sso_login_providers to update.
     */
    limit?: number
  }

  /**
   * sso_login_provider upsert
   */
  export type sso_login_providerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_login_provider
     */
    select?: sso_login_providerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_login_provider
     */
    omit?: sso_login_providerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_login_providerInclude<ExtArgs> | null
    /**
     * The filter to search for the sso_login_provider to update in case it exists.
     */
    where: sso_login_providerWhereUniqueInput
    /**
     * In case the sso_login_provider found by the `where` argument doesn't exist, create a new sso_login_provider with this data.
     */
    create: XOR<sso_login_providerCreateInput, sso_login_providerUncheckedCreateInput>
    /**
     * In case the sso_login_provider was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sso_login_providerUpdateInput, sso_login_providerUncheckedUpdateInput>
  }

  /**
   * sso_login_provider delete
   */
  export type sso_login_providerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_login_provider
     */
    select?: sso_login_providerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_login_provider
     */
    omit?: sso_login_providerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_login_providerInclude<ExtArgs> | null
    /**
     * Filter which sso_login_provider to delete.
     */
    where: sso_login_providerWhereUniqueInput
  }

  /**
   * sso_login_provider deleteMany
   */
  export type sso_login_providerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sso_login_providers to delete
     */
    where?: sso_login_providerWhereInput
    /**
     * Limit how many sso_login_providers to delete.
     */
    limit?: number
  }

  /**
   * sso_login_provider.user_sso_login
   */
  export type sso_login_provider$user_sso_loginArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sso_login
     */
    select?: user_sso_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sso_login
     */
    omit?: user_sso_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sso_loginInclude<ExtArgs> | null
    where?: user_sso_loginWhereInput
    orderBy?: user_sso_loginOrderByWithRelationInput | user_sso_loginOrderByWithRelationInput[]
    cursor?: user_sso_loginWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_sso_loginScalarFieldEnum | User_sso_loginScalarFieldEnum[]
  }

  /**
   * sso_login_provider without action
   */
  export type sso_login_providerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_login_provider
     */
    select?: sso_login_providerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_login_provider
     */
    omit?: sso_login_providerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_login_providerInclude<ExtArgs> | null
  }


  /**
   * Model user
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    user_id: Decimal | null
    timezone_id: Decimal | null
  }

  export type UserSumAggregateOutputType = {
    user_id: Decimal | null
    timezone_id: Decimal | null
  }

  export type UserMinAggregateOutputType = {
    user_id: Decimal | null
    first_name: string | null
    last_name: string | null
    create_date: Date | null
    modify_date: Date | null
    handle: string | null
    last_login: Date | null
    status: string | null
    activation_code: string | null
    middle_name: string | null
    handle_lower: string | null
    timezone_id: Decimal | null
    last_site_hit_date: Date | null
    name_in_another_language: string | null
    password: string | null
    open_id: string | null
    reg_source: string | null
    utm_source: string | null
    utm_medium: string | null
    utm_campaign: string | null
  }

  export type UserMaxAggregateOutputType = {
    user_id: Decimal | null
    first_name: string | null
    last_name: string | null
    create_date: Date | null
    modify_date: Date | null
    handle: string | null
    last_login: Date | null
    status: string | null
    activation_code: string | null
    middle_name: string | null
    handle_lower: string | null
    timezone_id: Decimal | null
    last_site_hit_date: Date | null
    name_in_another_language: string | null
    password: string | null
    open_id: string | null
    reg_source: string | null
    utm_source: string | null
    utm_medium: string | null
    utm_campaign: string | null
  }

  export type UserCountAggregateOutputType = {
    user_id: number
    first_name: number
    last_name: number
    create_date: number
    modify_date: number
    handle: number
    last_login: number
    status: number
    activation_code: number
    middle_name: number
    handle_lower: number
    timezone_id: number
    last_site_hit_date: number
    name_in_another_language: number
    password: number
    open_id: number
    reg_source: number
    utm_source: number
    utm_medium: number
    utm_campaign: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    user_id?: true
    timezone_id?: true
  }

  export type UserSumAggregateInputType = {
    user_id?: true
    timezone_id?: true
  }

  export type UserMinAggregateInputType = {
    user_id?: true
    first_name?: true
    last_name?: true
    create_date?: true
    modify_date?: true
    handle?: true
    last_login?: true
    status?: true
    activation_code?: true
    middle_name?: true
    handle_lower?: true
    timezone_id?: true
    last_site_hit_date?: true
    name_in_another_language?: true
    password?: true
    open_id?: true
    reg_source?: true
    utm_source?: true
    utm_medium?: true
    utm_campaign?: true
  }

  export type UserMaxAggregateInputType = {
    user_id?: true
    first_name?: true
    last_name?: true
    create_date?: true
    modify_date?: true
    handle?: true
    last_login?: true
    status?: true
    activation_code?: true
    middle_name?: true
    handle_lower?: true
    timezone_id?: true
    last_site_hit_date?: true
    name_in_another_language?: true
    password?: true
    open_id?: true
    reg_source?: true
    utm_source?: true
    utm_medium?: true
    utm_campaign?: true
  }

  export type UserCountAggregateInputType = {
    user_id?: true
    first_name?: true
    last_name?: true
    create_date?: true
    modify_date?: true
    handle?: true
    last_login?: true
    status?: true
    activation_code?: true
    middle_name?: true
    handle_lower?: true
    timezone_id?: true
    last_site_hit_date?: true
    name_in_another_language?: true
    password?: true
    open_id?: true
    reg_source?: true
    utm_source?: true
    utm_medium?: true
    utm_campaign?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user to aggregate.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type userGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userWhereInput
    orderBy?: userOrderByWithAggregationInput | userOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: userScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    user_id: Decimal
    first_name: string | null
    last_name: string | null
    create_date: Date | null
    modify_date: Date | null
    handle: string
    last_login: Date | null
    status: string
    activation_code: string | null
    middle_name: string | null
    handle_lower: string | null
    timezone_id: Decimal | null
    last_site_hit_date: Date | null
    name_in_another_language: string | null
    password: string | null
    open_id: string | null
    reg_source: string | null
    utm_source: string | null
    utm_medium: string | null
    utm_campaign: string | null
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends userGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type userSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    first_name?: boolean
    last_name?: boolean
    create_date?: boolean
    modify_date?: boolean
    handle?: boolean
    last_login?: boolean
    status?: boolean
    activation_code?: boolean
    middle_name?: boolean
    handle_lower?: boolean
    timezone_id?: boolean
    last_site_hit_date?: boolean
    name_in_another_language?: boolean
    password?: boolean
    open_id?: boolean
    reg_source?: boolean
    utm_source?: boolean
    utm_medium?: boolean
    utm_campaign?: boolean
    dice_connection?: boolean | user$dice_connectionArgs<ExtArgs>
    user_2fa?: boolean | user$user_2faArgs<ExtArgs>
    user_achievement?: boolean | user$user_achievementArgs<ExtArgs>
    user_otp_email?: boolean | user$user_otp_emailArgs<ExtArgs>
    user_social_login?: boolean | user$user_social_loginArgs<ExtArgs>
    user_sso_login?: boolean | user$user_sso_loginArgs<ExtArgs>
    user_status?: boolean | user$user_statusArgs<ExtArgs>
    user_email_xref?: boolean | user$user_email_xrefArgs<ExtArgs>
    emails?: boolean | user$emailsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type userSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    first_name?: boolean
    last_name?: boolean
    create_date?: boolean
    modify_date?: boolean
    handle?: boolean
    last_login?: boolean
    status?: boolean
    activation_code?: boolean
    middle_name?: boolean
    handle_lower?: boolean
    timezone_id?: boolean
    last_site_hit_date?: boolean
    name_in_another_language?: boolean
    password?: boolean
    open_id?: boolean
    reg_source?: boolean
    utm_source?: boolean
    utm_medium?: boolean
    utm_campaign?: boolean
  }, ExtArgs["result"]["user"]>

  export type userSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    first_name?: boolean
    last_name?: boolean
    create_date?: boolean
    modify_date?: boolean
    handle?: boolean
    last_login?: boolean
    status?: boolean
    activation_code?: boolean
    middle_name?: boolean
    handle_lower?: boolean
    timezone_id?: boolean
    last_site_hit_date?: boolean
    name_in_another_language?: boolean
    password?: boolean
    open_id?: boolean
    reg_source?: boolean
    utm_source?: boolean
    utm_medium?: boolean
    utm_campaign?: boolean
  }, ExtArgs["result"]["user"]>

  export type userSelectScalar = {
    user_id?: boolean
    first_name?: boolean
    last_name?: boolean
    create_date?: boolean
    modify_date?: boolean
    handle?: boolean
    last_login?: boolean
    status?: boolean
    activation_code?: boolean
    middle_name?: boolean
    handle_lower?: boolean
    timezone_id?: boolean
    last_site_hit_date?: boolean
    name_in_another_language?: boolean
    password?: boolean
    open_id?: boolean
    reg_source?: boolean
    utm_source?: boolean
    utm_medium?: boolean
    utm_campaign?: boolean
  }

  export type userOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"user_id" | "first_name" | "last_name" | "create_date" | "modify_date" | "handle" | "last_login" | "status" | "activation_code" | "middle_name" | "handle_lower" | "timezone_id" | "last_site_hit_date" | "name_in_another_language" | "password" | "open_id" | "reg_source" | "utm_source" | "utm_medium" | "utm_campaign", ExtArgs["result"]["user"]>
  export type userInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    dice_connection?: boolean | user$dice_connectionArgs<ExtArgs>
    user_2fa?: boolean | user$user_2faArgs<ExtArgs>
    user_achievement?: boolean | user$user_achievementArgs<ExtArgs>
    user_otp_email?: boolean | user$user_otp_emailArgs<ExtArgs>
    user_social_login?: boolean | user$user_social_loginArgs<ExtArgs>
    user_sso_login?: boolean | user$user_sso_loginArgs<ExtArgs>
    user_status?: boolean | user$user_statusArgs<ExtArgs>
    user_email_xref?: boolean | user$user_email_xrefArgs<ExtArgs>
    emails?: boolean | user$emailsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type userIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type userIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $userPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user"
    objects: {
      dice_connection: Prisma.$dice_connectionPayload<ExtArgs> | null
      user_2fa: Prisma.$user_2faPayload<ExtArgs> | null
      user_achievement: Prisma.$user_achievementPayload<ExtArgs>[]
      user_otp_email: Prisma.$user_otp_emailPayload<ExtArgs>[]
      user_social_login: Prisma.$user_social_loginPayload<ExtArgs>[]
      user_sso_login: Prisma.$user_sso_loginPayload<ExtArgs>[]
      user_status: Prisma.$user_statusPayload<ExtArgs>[]
      user_email_xref: Prisma.$user_email_xrefPayload<ExtArgs>[]
      emails: Prisma.$emailPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      user_id: Prisma.Decimal
      first_name: string | null
      last_name: string | null
      create_date: Date | null
      modify_date: Date | null
      handle: string
      last_login: Date | null
      status: string
      activation_code: string | null
      middle_name: string | null
      handle_lower: string | null
      timezone_id: Prisma.Decimal | null
      last_site_hit_date: Date | null
      name_in_another_language: string | null
      password: string | null
      open_id: string | null
      reg_source: string | null
      utm_source: string | null
      utm_medium: string | null
      utm_campaign: string | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type userGetPayload<S extends boolean | null | undefined | userDefaultArgs> = $Result.GetResult<Prisma.$userPayload, S>

  type userCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<userFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface userDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user'], meta: { name: 'user' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {userFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends userFindUniqueArgs>(args: SelectSubset<T, userFindUniqueArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {userFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends userFindUniqueOrThrowArgs>(args: SelectSubset<T, userFindUniqueOrThrowArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends userFindFirstArgs>(args?: SelectSubset<T, userFindFirstArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends userFindFirstOrThrowArgs>(args?: SelectSubset<T, userFindFirstOrThrowArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const userWithUser_idOnly = await prisma.user.findMany({ select: { user_id: true } })
     * 
     */
    findMany<T extends userFindManyArgs>(args?: SelectSubset<T, userFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {userCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends userCreateArgs>(args: SelectSubset<T, userCreateArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {userCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends userCreateManyArgs>(args?: SelectSubset<T, userCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {userCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `user_id`
     * const userWithUser_idOnly = await prisma.user.createManyAndReturn({
     *   select: { user_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends userCreateManyAndReturnArgs>(args?: SelectSubset<T, userCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {userDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends userDeleteArgs>(args: SelectSubset<T, userDeleteArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {userUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends userUpdateArgs>(args: SelectSubset<T, userUpdateArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {userDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends userDeleteManyArgs>(args?: SelectSubset<T, userDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends userUpdateManyArgs>(args: SelectSubset<T, userUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {userUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `user_id`
     * const userWithUser_idOnly = await prisma.user.updateManyAndReturn({
     *   select: { user_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends userUpdateManyAndReturnArgs>(args: SelectSubset<T, userUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {userUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends userUpsertArgs>(args: SelectSubset<T, userUpsertArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends userCountArgs>(
      args?: Subset<T, userCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends userGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: userGroupByArgs['orderBy'] }
        : { orderBy?: userGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, userGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user model
   */
  readonly fields: userFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__userClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    dice_connection<T extends user$dice_connectionArgs<ExtArgs> = {}>(args?: Subset<T, user$dice_connectionArgs<ExtArgs>>): Prisma__dice_connectionClient<$Result.GetResult<Prisma.$dice_connectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user_2fa<T extends user$user_2faArgs<ExtArgs> = {}>(args?: Subset<T, user$user_2faArgs<ExtArgs>>): Prisma__user_2faClient<$Result.GetResult<Prisma.$user_2faPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user_achievement<T extends user$user_achievementArgs<ExtArgs> = {}>(args?: Subset<T, user$user_achievementArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_achievementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_otp_email<T extends user$user_otp_emailArgs<ExtArgs> = {}>(args?: Subset<T, user$user_otp_emailArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_otp_emailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_social_login<T extends user$user_social_loginArgs<ExtArgs> = {}>(args?: Subset<T, user$user_social_loginArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_social_loginPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_sso_login<T extends user$user_sso_loginArgs<ExtArgs> = {}>(args?: Subset<T, user$user_sso_loginArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_sso_loginPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_status<T extends user$user_statusArgs<ExtArgs> = {}>(args?: Subset<T, user$user_statusArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_statusPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_email_xref<T extends user$user_email_xrefArgs<ExtArgs> = {}>(args?: Subset<T, user$user_email_xrefArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_email_xrefPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    emails<T extends user$emailsArgs<ExtArgs> = {}>(args?: Subset<T, user$emailsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$emailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user model
   */
  interface userFieldRefs {
    readonly user_id: FieldRef<"user", 'Decimal'>
    readonly first_name: FieldRef<"user", 'String'>
    readonly last_name: FieldRef<"user", 'String'>
    readonly create_date: FieldRef<"user", 'DateTime'>
    readonly modify_date: FieldRef<"user", 'DateTime'>
    readonly handle: FieldRef<"user", 'String'>
    readonly last_login: FieldRef<"user", 'DateTime'>
    readonly status: FieldRef<"user", 'String'>
    readonly activation_code: FieldRef<"user", 'String'>
    readonly middle_name: FieldRef<"user", 'String'>
    readonly handle_lower: FieldRef<"user", 'String'>
    readonly timezone_id: FieldRef<"user", 'Decimal'>
    readonly last_site_hit_date: FieldRef<"user", 'DateTime'>
    readonly name_in_another_language: FieldRef<"user", 'String'>
    readonly password: FieldRef<"user", 'String'>
    readonly open_id: FieldRef<"user", 'String'>
    readonly reg_source: FieldRef<"user", 'String'>
    readonly utm_source: FieldRef<"user", 'String'>
    readonly utm_medium: FieldRef<"user", 'String'>
    readonly utm_campaign: FieldRef<"user", 'String'>
  }
    

  // Custom InputTypes
  /**
   * user findUnique
   */
  export type userFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where: userWhereUniqueInput
  }

  /**
   * user findUniqueOrThrow
   */
  export type userFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where: userWhereUniqueInput
  }

  /**
   * user findFirst
   */
  export type userFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user findFirstOrThrow
   */
  export type userFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user findMany
   */
  export type userFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user create
   */
  export type userCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The data needed to create a user.
     */
    data: XOR<userCreateInput, userUncheckedCreateInput>
  }

  /**
   * user createMany
   */
  export type userCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: userCreateManyInput | userCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user createManyAndReturn
   */
  export type userCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * The data used to create many users.
     */
    data: userCreateManyInput | userCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user update
   */
  export type userUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The data needed to update a user.
     */
    data: XOR<userUpdateInput, userUncheckedUpdateInput>
    /**
     * Choose, which user to update.
     */
    where: userWhereUniqueInput
  }

  /**
   * user updateMany
   */
  export type userUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<userUpdateManyMutationInput, userUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: userWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * user updateManyAndReturn
   */
  export type userUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * The data used to update users.
     */
    data: XOR<userUpdateManyMutationInput, userUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: userWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * user upsert
   */
  export type userUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The filter to search for the user to update in case it exists.
     */
    where: userWhereUniqueInput
    /**
     * In case the user found by the `where` argument doesn't exist, create a new user with this data.
     */
    create: XOR<userCreateInput, userUncheckedCreateInput>
    /**
     * In case the user was found with the provided `where` argument, update it with this data.
     */
    update: XOR<userUpdateInput, userUncheckedUpdateInput>
  }

  /**
   * user delete
   */
  export type userDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter which user to delete.
     */
    where: userWhereUniqueInput
  }

  /**
   * user deleteMany
   */
  export type userDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: userWhereInput
    /**
     * Limit how many users to delete.
     */
    limit?: number
  }

  /**
   * user.dice_connection
   */
  export type user$dice_connectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dice_connection
     */
    select?: dice_connectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dice_connection
     */
    omit?: dice_connectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dice_connectionInclude<ExtArgs> | null
    where?: dice_connectionWhereInput
  }

  /**
   * user.user_2fa
   */
  export type user$user_2faArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_2fa
     */
    select?: user_2faSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_2fa
     */
    omit?: user_2faOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_2faInclude<ExtArgs> | null
    where?: user_2faWhereInput
  }

  /**
   * user.user_achievement
   */
  export type user$user_achievementArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_achievement
     */
    select?: user_achievementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_achievement
     */
    omit?: user_achievementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_achievementInclude<ExtArgs> | null
    where?: user_achievementWhereInput
    orderBy?: user_achievementOrderByWithRelationInput | user_achievementOrderByWithRelationInput[]
    cursor?: user_achievementWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_achievementScalarFieldEnum | User_achievementScalarFieldEnum[]
  }

  /**
   * user.user_otp_email
   */
  export type user$user_otp_emailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_otp_email
     */
    select?: user_otp_emailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_otp_email
     */
    omit?: user_otp_emailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_otp_emailInclude<ExtArgs> | null
    where?: user_otp_emailWhereInput
    orderBy?: user_otp_emailOrderByWithRelationInput | user_otp_emailOrderByWithRelationInput[]
    cursor?: user_otp_emailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_otp_emailScalarFieldEnum | User_otp_emailScalarFieldEnum[]
  }

  /**
   * user.user_social_login
   */
  export type user$user_social_loginArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_social_login
     */
    select?: user_social_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_social_login
     */
    omit?: user_social_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_social_loginInclude<ExtArgs> | null
    where?: user_social_loginWhereInput
    orderBy?: user_social_loginOrderByWithRelationInput | user_social_loginOrderByWithRelationInput[]
    cursor?: user_social_loginWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_social_loginScalarFieldEnum | User_social_loginScalarFieldEnum[]
  }

  /**
   * user.user_sso_login
   */
  export type user$user_sso_loginArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sso_login
     */
    select?: user_sso_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sso_login
     */
    omit?: user_sso_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sso_loginInclude<ExtArgs> | null
    where?: user_sso_loginWhereInput
    orderBy?: user_sso_loginOrderByWithRelationInput | user_sso_loginOrderByWithRelationInput[]
    cursor?: user_sso_loginWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_sso_loginScalarFieldEnum | User_sso_loginScalarFieldEnum[]
  }

  /**
   * user.user_status
   */
  export type user$user_statusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status
     */
    select?: user_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status
     */
    omit?: user_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_statusInclude<ExtArgs> | null
    where?: user_statusWhereInput
    orderBy?: user_statusOrderByWithRelationInput | user_statusOrderByWithRelationInput[]
    cursor?: user_statusWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_statusScalarFieldEnum | User_statusScalarFieldEnum[]
  }

  /**
   * user.user_email_xref
   */
  export type user$user_email_xrefArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_email_xref
     */
    select?: user_email_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_email_xref
     */
    omit?: user_email_xrefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_email_xrefInclude<ExtArgs> | null
    where?: user_email_xrefWhereInput
    orderBy?: user_email_xrefOrderByWithRelationInput | user_email_xrefOrderByWithRelationInput[]
    cursor?: user_email_xrefWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_email_xrefScalarFieldEnum | User_email_xrefScalarFieldEnum[]
  }

  /**
   * user.emails
   */
  export type user$emailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email
     */
    select?: emailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email
     */
    omit?: emailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: emailInclude<ExtArgs> | null
    where?: emailWhereInput
    orderBy?: emailOrderByWithRelationInput | emailOrderByWithRelationInput[]
    cursor?: emailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EmailScalarFieldEnum | EmailScalarFieldEnum[]
  }

  /**
   * user without action
   */
  export type userDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
  }


  /**
   * Model user_2fa
   */

  export type AggregateUser_2fa = {
    _count: User_2faCountAggregateOutputType | null
    _avg: User_2faAvgAggregateOutputType | null
    _sum: User_2faSumAggregateOutputType | null
    _min: User_2faMinAggregateOutputType | null
    _max: User_2faMaxAggregateOutputType | null
  }

  export type User_2faAvgAggregateOutputType = {
    id: number | null
    user_id: Decimal | null
    created_by: Decimal | null
    modified_by: Decimal | null
  }

  export type User_2faSumAggregateOutputType = {
    id: number | null
    user_id: Decimal | null
    created_by: Decimal | null
    modified_by: Decimal | null
  }

  export type User_2faMinAggregateOutputType = {
    id: number | null
    user_id: Decimal | null
    mfa_enabled: boolean | null
    dice_enabled: boolean | null
    created_by: Decimal | null
    created_at: Date | null
    modified_by: Decimal | null
    modified_at: Date | null
  }

  export type User_2faMaxAggregateOutputType = {
    id: number | null
    user_id: Decimal | null
    mfa_enabled: boolean | null
    dice_enabled: boolean | null
    created_by: Decimal | null
    created_at: Date | null
    modified_by: Decimal | null
    modified_at: Date | null
  }

  export type User_2faCountAggregateOutputType = {
    id: number
    user_id: number
    mfa_enabled: number
    dice_enabled: number
    created_by: number
    created_at: number
    modified_by: number
    modified_at: number
    _all: number
  }


  export type User_2faAvgAggregateInputType = {
    id?: true
    user_id?: true
    created_by?: true
    modified_by?: true
  }

  export type User_2faSumAggregateInputType = {
    id?: true
    user_id?: true
    created_by?: true
    modified_by?: true
  }

  export type User_2faMinAggregateInputType = {
    id?: true
    user_id?: true
    mfa_enabled?: true
    dice_enabled?: true
    created_by?: true
    created_at?: true
    modified_by?: true
    modified_at?: true
  }

  export type User_2faMaxAggregateInputType = {
    id?: true
    user_id?: true
    mfa_enabled?: true
    dice_enabled?: true
    created_by?: true
    created_at?: true
    modified_by?: true
    modified_at?: true
  }

  export type User_2faCountAggregateInputType = {
    id?: true
    user_id?: true
    mfa_enabled?: true
    dice_enabled?: true
    created_by?: true
    created_at?: true
    modified_by?: true
    modified_at?: true
    _all?: true
  }

  export type User_2faAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_2fa to aggregate.
     */
    where?: user_2faWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_2fas to fetch.
     */
    orderBy?: user_2faOrderByWithRelationInput | user_2faOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_2faWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_2fas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_2fas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_2fas
    **/
    _count?: true | User_2faCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_2faAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_2faSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_2faMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_2faMaxAggregateInputType
  }

  export type GetUser_2faAggregateType<T extends User_2faAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_2fa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_2fa[P]>
      : GetScalarType<T[P], AggregateUser_2fa[P]>
  }




  export type user_2faGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_2faWhereInput
    orderBy?: user_2faOrderByWithAggregationInput | user_2faOrderByWithAggregationInput[]
    by: User_2faScalarFieldEnum[] | User_2faScalarFieldEnum
    having?: user_2faScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_2faCountAggregateInputType | true
    _avg?: User_2faAvgAggregateInputType
    _sum?: User_2faSumAggregateInputType
    _min?: User_2faMinAggregateInputType
    _max?: User_2faMaxAggregateInputType
  }

  export type User_2faGroupByOutputType = {
    id: number
    user_id: Decimal
    mfa_enabled: boolean
    dice_enabled: boolean
    created_by: Decimal
    created_at: Date
    modified_by: Decimal
    modified_at: Date
    _count: User_2faCountAggregateOutputType | null
    _avg: User_2faAvgAggregateOutputType | null
    _sum: User_2faSumAggregateOutputType | null
    _min: User_2faMinAggregateOutputType | null
    _max: User_2faMaxAggregateOutputType | null
  }

  type GetUser_2faGroupByPayload<T extends user_2faGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_2faGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_2faGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_2faGroupByOutputType[P]>
            : GetScalarType<T[P], User_2faGroupByOutputType[P]>
        }
      >
    >


  export type user_2faSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    mfa_enabled?: boolean
    dice_enabled?: boolean
    created_by?: boolean
    created_at?: boolean
    modified_by?: boolean
    modified_at?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_2fa"]>

  export type user_2faSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    mfa_enabled?: boolean
    dice_enabled?: boolean
    created_by?: boolean
    created_at?: boolean
    modified_by?: boolean
    modified_at?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_2fa"]>

  export type user_2faSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    mfa_enabled?: boolean
    dice_enabled?: boolean
    created_by?: boolean
    created_at?: boolean
    modified_by?: boolean
    modified_at?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_2fa"]>

  export type user_2faSelectScalar = {
    id?: boolean
    user_id?: boolean
    mfa_enabled?: boolean
    dice_enabled?: boolean
    created_by?: boolean
    created_at?: boolean
    modified_by?: boolean
    modified_at?: boolean
  }

  export type user_2faOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "mfa_enabled" | "dice_enabled" | "created_by" | "created_at" | "modified_by" | "modified_at", ExtArgs["result"]["user_2fa"]>
  export type user_2faInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type user_2faIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type user_2faIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $user_2faPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_2fa"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: Prisma.Decimal
      mfa_enabled: boolean
      dice_enabled: boolean
      created_by: Prisma.Decimal
      created_at: Date
      modified_by: Prisma.Decimal
      modified_at: Date
    }, ExtArgs["result"]["user_2fa"]>
    composites: {}
  }

  type user_2faGetPayload<S extends boolean | null | undefined | user_2faDefaultArgs> = $Result.GetResult<Prisma.$user_2faPayload, S>

  type user_2faCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_2faFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_2faCountAggregateInputType | true
    }

  export interface user_2faDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_2fa'], meta: { name: 'user_2fa' } }
    /**
     * Find zero or one User_2fa that matches the filter.
     * @param {user_2faFindUniqueArgs} args - Arguments to find a User_2fa
     * @example
     * // Get one User_2fa
     * const user_2fa = await prisma.user_2fa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_2faFindUniqueArgs>(args: SelectSubset<T, user_2faFindUniqueArgs<ExtArgs>>): Prisma__user_2faClient<$Result.GetResult<Prisma.$user_2faPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_2fa that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_2faFindUniqueOrThrowArgs} args - Arguments to find a User_2fa
     * @example
     * // Get one User_2fa
     * const user_2fa = await prisma.user_2fa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_2faFindUniqueOrThrowArgs>(args: SelectSubset<T, user_2faFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_2faClient<$Result.GetResult<Prisma.$user_2faPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_2fa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_2faFindFirstArgs} args - Arguments to find a User_2fa
     * @example
     * // Get one User_2fa
     * const user_2fa = await prisma.user_2fa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_2faFindFirstArgs>(args?: SelectSubset<T, user_2faFindFirstArgs<ExtArgs>>): Prisma__user_2faClient<$Result.GetResult<Prisma.$user_2faPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_2fa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_2faFindFirstOrThrowArgs} args - Arguments to find a User_2fa
     * @example
     * // Get one User_2fa
     * const user_2fa = await prisma.user_2fa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_2faFindFirstOrThrowArgs>(args?: SelectSubset<T, user_2faFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_2faClient<$Result.GetResult<Prisma.$user_2faPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_2fas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_2faFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_2fas
     * const user_2fas = await prisma.user_2fa.findMany()
     * 
     * // Get first 10 User_2fas
     * const user_2fas = await prisma.user_2fa.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_2faWithIdOnly = await prisma.user_2fa.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_2faFindManyArgs>(args?: SelectSubset<T, user_2faFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_2faPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_2fa.
     * @param {user_2faCreateArgs} args - Arguments to create a User_2fa.
     * @example
     * // Create one User_2fa
     * const User_2fa = await prisma.user_2fa.create({
     *   data: {
     *     // ... data to create a User_2fa
     *   }
     * })
     * 
     */
    create<T extends user_2faCreateArgs>(args: SelectSubset<T, user_2faCreateArgs<ExtArgs>>): Prisma__user_2faClient<$Result.GetResult<Prisma.$user_2faPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_2fas.
     * @param {user_2faCreateManyArgs} args - Arguments to create many User_2fas.
     * @example
     * // Create many User_2fas
     * const user_2fa = await prisma.user_2fa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_2faCreateManyArgs>(args?: SelectSubset<T, user_2faCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_2fas and returns the data saved in the database.
     * @param {user_2faCreateManyAndReturnArgs} args - Arguments to create many User_2fas.
     * @example
     * // Create many User_2fas
     * const user_2fa = await prisma.user_2fa.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_2fas and only return the `id`
     * const user_2faWithIdOnly = await prisma.user_2fa.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_2faCreateManyAndReturnArgs>(args?: SelectSubset<T, user_2faCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_2faPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_2fa.
     * @param {user_2faDeleteArgs} args - Arguments to delete one User_2fa.
     * @example
     * // Delete one User_2fa
     * const User_2fa = await prisma.user_2fa.delete({
     *   where: {
     *     // ... filter to delete one User_2fa
     *   }
     * })
     * 
     */
    delete<T extends user_2faDeleteArgs>(args: SelectSubset<T, user_2faDeleteArgs<ExtArgs>>): Prisma__user_2faClient<$Result.GetResult<Prisma.$user_2faPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_2fa.
     * @param {user_2faUpdateArgs} args - Arguments to update one User_2fa.
     * @example
     * // Update one User_2fa
     * const user_2fa = await prisma.user_2fa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_2faUpdateArgs>(args: SelectSubset<T, user_2faUpdateArgs<ExtArgs>>): Prisma__user_2faClient<$Result.GetResult<Prisma.$user_2faPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_2fas.
     * @param {user_2faDeleteManyArgs} args - Arguments to filter User_2fas to delete.
     * @example
     * // Delete a few User_2fas
     * const { count } = await prisma.user_2fa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_2faDeleteManyArgs>(args?: SelectSubset<T, user_2faDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_2fas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_2faUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_2fas
     * const user_2fa = await prisma.user_2fa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_2faUpdateManyArgs>(args: SelectSubset<T, user_2faUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_2fas and returns the data updated in the database.
     * @param {user_2faUpdateManyAndReturnArgs} args - Arguments to update many User_2fas.
     * @example
     * // Update many User_2fas
     * const user_2fa = await prisma.user_2fa.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_2fas and only return the `id`
     * const user_2faWithIdOnly = await prisma.user_2fa.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_2faUpdateManyAndReturnArgs>(args: SelectSubset<T, user_2faUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_2faPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_2fa.
     * @param {user_2faUpsertArgs} args - Arguments to update or create a User_2fa.
     * @example
     * // Update or create a User_2fa
     * const user_2fa = await prisma.user_2fa.upsert({
     *   create: {
     *     // ... data to create a User_2fa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_2fa we want to update
     *   }
     * })
     */
    upsert<T extends user_2faUpsertArgs>(args: SelectSubset<T, user_2faUpsertArgs<ExtArgs>>): Prisma__user_2faClient<$Result.GetResult<Prisma.$user_2faPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_2fas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_2faCountArgs} args - Arguments to filter User_2fas to count.
     * @example
     * // Count the number of User_2fas
     * const count = await prisma.user_2fa.count({
     *   where: {
     *     // ... the filter for the User_2fas we want to count
     *   }
     * })
    **/
    count<T extends user_2faCountArgs>(
      args?: Subset<T, user_2faCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_2faCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_2fa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_2faAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_2faAggregateArgs>(args: Subset<T, User_2faAggregateArgs>): Prisma.PrismaPromise<GetUser_2faAggregateType<T>>

    /**
     * Group by User_2fa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_2faGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_2faGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_2faGroupByArgs['orderBy'] }
        : { orderBy?: user_2faGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_2faGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_2faGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_2fa model
   */
  readonly fields: user_2faFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_2fa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_2faClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_2fa model
   */
  interface user_2faFieldRefs {
    readonly id: FieldRef<"user_2fa", 'Int'>
    readonly user_id: FieldRef<"user_2fa", 'Decimal'>
    readonly mfa_enabled: FieldRef<"user_2fa", 'Boolean'>
    readonly dice_enabled: FieldRef<"user_2fa", 'Boolean'>
    readonly created_by: FieldRef<"user_2fa", 'Decimal'>
    readonly created_at: FieldRef<"user_2fa", 'DateTime'>
    readonly modified_by: FieldRef<"user_2fa", 'Decimal'>
    readonly modified_at: FieldRef<"user_2fa", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_2fa findUnique
   */
  export type user_2faFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_2fa
     */
    select?: user_2faSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_2fa
     */
    omit?: user_2faOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_2faInclude<ExtArgs> | null
    /**
     * Filter, which user_2fa to fetch.
     */
    where: user_2faWhereUniqueInput
  }

  /**
   * user_2fa findUniqueOrThrow
   */
  export type user_2faFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_2fa
     */
    select?: user_2faSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_2fa
     */
    omit?: user_2faOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_2faInclude<ExtArgs> | null
    /**
     * Filter, which user_2fa to fetch.
     */
    where: user_2faWhereUniqueInput
  }

  /**
   * user_2fa findFirst
   */
  export type user_2faFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_2fa
     */
    select?: user_2faSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_2fa
     */
    omit?: user_2faOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_2faInclude<ExtArgs> | null
    /**
     * Filter, which user_2fa to fetch.
     */
    where?: user_2faWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_2fas to fetch.
     */
    orderBy?: user_2faOrderByWithRelationInput | user_2faOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_2fas.
     */
    cursor?: user_2faWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_2fas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_2fas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_2fas.
     */
    distinct?: User_2faScalarFieldEnum | User_2faScalarFieldEnum[]
  }

  /**
   * user_2fa findFirstOrThrow
   */
  export type user_2faFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_2fa
     */
    select?: user_2faSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_2fa
     */
    omit?: user_2faOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_2faInclude<ExtArgs> | null
    /**
     * Filter, which user_2fa to fetch.
     */
    where?: user_2faWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_2fas to fetch.
     */
    orderBy?: user_2faOrderByWithRelationInput | user_2faOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_2fas.
     */
    cursor?: user_2faWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_2fas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_2fas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_2fas.
     */
    distinct?: User_2faScalarFieldEnum | User_2faScalarFieldEnum[]
  }

  /**
   * user_2fa findMany
   */
  export type user_2faFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_2fa
     */
    select?: user_2faSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_2fa
     */
    omit?: user_2faOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_2faInclude<ExtArgs> | null
    /**
     * Filter, which user_2fas to fetch.
     */
    where?: user_2faWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_2fas to fetch.
     */
    orderBy?: user_2faOrderByWithRelationInput | user_2faOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_2fas.
     */
    cursor?: user_2faWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_2fas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_2fas.
     */
    skip?: number
    distinct?: User_2faScalarFieldEnum | User_2faScalarFieldEnum[]
  }

  /**
   * user_2fa create
   */
  export type user_2faCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_2fa
     */
    select?: user_2faSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_2fa
     */
    omit?: user_2faOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_2faInclude<ExtArgs> | null
    /**
     * The data needed to create a user_2fa.
     */
    data: XOR<user_2faCreateInput, user_2faUncheckedCreateInput>
  }

  /**
   * user_2fa createMany
   */
  export type user_2faCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_2fas.
     */
    data: user_2faCreateManyInput | user_2faCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_2fa createManyAndReturn
   */
  export type user_2faCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_2fa
     */
    select?: user_2faSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_2fa
     */
    omit?: user_2faOmit<ExtArgs> | null
    /**
     * The data used to create many user_2fas.
     */
    data: user_2faCreateManyInput | user_2faCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_2faIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_2fa update
   */
  export type user_2faUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_2fa
     */
    select?: user_2faSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_2fa
     */
    omit?: user_2faOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_2faInclude<ExtArgs> | null
    /**
     * The data needed to update a user_2fa.
     */
    data: XOR<user_2faUpdateInput, user_2faUncheckedUpdateInput>
    /**
     * Choose, which user_2fa to update.
     */
    where: user_2faWhereUniqueInput
  }

  /**
   * user_2fa updateMany
   */
  export type user_2faUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_2fas.
     */
    data: XOR<user_2faUpdateManyMutationInput, user_2faUncheckedUpdateManyInput>
    /**
     * Filter which user_2fas to update
     */
    where?: user_2faWhereInput
    /**
     * Limit how many user_2fas to update.
     */
    limit?: number
  }

  /**
   * user_2fa updateManyAndReturn
   */
  export type user_2faUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_2fa
     */
    select?: user_2faSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_2fa
     */
    omit?: user_2faOmit<ExtArgs> | null
    /**
     * The data used to update user_2fas.
     */
    data: XOR<user_2faUpdateManyMutationInput, user_2faUncheckedUpdateManyInput>
    /**
     * Filter which user_2fas to update
     */
    where?: user_2faWhereInput
    /**
     * Limit how many user_2fas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_2faIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_2fa upsert
   */
  export type user_2faUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_2fa
     */
    select?: user_2faSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_2fa
     */
    omit?: user_2faOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_2faInclude<ExtArgs> | null
    /**
     * The filter to search for the user_2fa to update in case it exists.
     */
    where: user_2faWhereUniqueInput
    /**
     * In case the user_2fa found by the `where` argument doesn't exist, create a new user_2fa with this data.
     */
    create: XOR<user_2faCreateInput, user_2faUncheckedCreateInput>
    /**
     * In case the user_2fa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_2faUpdateInput, user_2faUncheckedUpdateInput>
  }

  /**
   * user_2fa delete
   */
  export type user_2faDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_2fa
     */
    select?: user_2faSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_2fa
     */
    omit?: user_2faOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_2faInclude<ExtArgs> | null
    /**
     * Filter which user_2fa to delete.
     */
    where: user_2faWhereUniqueInput
  }

  /**
   * user_2fa deleteMany
   */
  export type user_2faDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_2fas to delete
     */
    where?: user_2faWhereInput
    /**
     * Limit how many user_2fas to delete.
     */
    limit?: number
  }

  /**
   * user_2fa without action
   */
  export type user_2faDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_2fa
     */
    select?: user_2faSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_2fa
     */
    omit?: user_2faOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_2faInclude<ExtArgs> | null
  }


  /**
   * Model user_achievement
   */

  export type AggregateUser_achievement = {
    _count: User_achievementCountAggregateOutputType | null
    _avg: User_achievementAvgAggregateOutputType | null
    _sum: User_achievementSumAggregateOutputType | null
    _min: User_achievementMinAggregateOutputType | null
    _max: User_achievementMaxAggregateOutputType | null
  }

  export type User_achievementAvgAggregateOutputType = {
    user_id: Decimal | null
    achievement_type_id: Decimal | null
  }

  export type User_achievementSumAggregateOutputType = {
    user_id: Decimal | null
    achievement_type_id: Decimal | null
  }

  export type User_achievementMinAggregateOutputType = {
    user_id: Decimal | null
    achievement_date: Date | null
    achievement_type_id: Decimal | null
    description: string | null
    create_date: Date | null
  }

  export type User_achievementMaxAggregateOutputType = {
    user_id: Decimal | null
    achievement_date: Date | null
    achievement_type_id: Decimal | null
    description: string | null
    create_date: Date | null
  }

  export type User_achievementCountAggregateOutputType = {
    user_id: number
    achievement_date: number
    achievement_type_id: number
    description: number
    create_date: number
    _all: number
  }


  export type User_achievementAvgAggregateInputType = {
    user_id?: true
    achievement_type_id?: true
  }

  export type User_achievementSumAggregateInputType = {
    user_id?: true
    achievement_type_id?: true
  }

  export type User_achievementMinAggregateInputType = {
    user_id?: true
    achievement_date?: true
    achievement_type_id?: true
    description?: true
    create_date?: true
  }

  export type User_achievementMaxAggregateInputType = {
    user_id?: true
    achievement_date?: true
    achievement_type_id?: true
    description?: true
    create_date?: true
  }

  export type User_achievementCountAggregateInputType = {
    user_id?: true
    achievement_date?: true
    achievement_type_id?: true
    description?: true
    create_date?: true
    _all?: true
  }

  export type User_achievementAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_achievement to aggregate.
     */
    where?: user_achievementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_achievements to fetch.
     */
    orderBy?: user_achievementOrderByWithRelationInput | user_achievementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_achievementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_achievements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_achievements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_achievements
    **/
    _count?: true | User_achievementCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_achievementAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_achievementSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_achievementMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_achievementMaxAggregateInputType
  }

  export type GetUser_achievementAggregateType<T extends User_achievementAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_achievement]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_achievement[P]>
      : GetScalarType<T[P], AggregateUser_achievement[P]>
  }




  export type user_achievementGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_achievementWhereInput
    orderBy?: user_achievementOrderByWithAggregationInput | user_achievementOrderByWithAggregationInput[]
    by: User_achievementScalarFieldEnum[] | User_achievementScalarFieldEnum
    having?: user_achievementScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_achievementCountAggregateInputType | true
    _avg?: User_achievementAvgAggregateInputType
    _sum?: User_achievementSumAggregateInputType
    _min?: User_achievementMinAggregateInputType
    _max?: User_achievementMaxAggregateInputType
  }

  export type User_achievementGroupByOutputType = {
    user_id: Decimal
    achievement_date: Date
    achievement_type_id: Decimal
    description: string | null
    create_date: Date | null
    _count: User_achievementCountAggregateOutputType | null
    _avg: User_achievementAvgAggregateOutputType | null
    _sum: User_achievementSumAggregateOutputType | null
    _min: User_achievementMinAggregateOutputType | null
    _max: User_achievementMaxAggregateOutputType | null
  }

  type GetUser_achievementGroupByPayload<T extends user_achievementGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_achievementGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_achievementGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_achievementGroupByOutputType[P]>
            : GetScalarType<T[P], User_achievementGroupByOutputType[P]>
        }
      >
    >


  export type user_achievementSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    achievement_date?: boolean
    achievement_type_id?: boolean
    description?: boolean
    create_date?: boolean
    achievement_type_lu?: boolean | achievement_type_luDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_achievement"]>

  export type user_achievementSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    achievement_date?: boolean
    achievement_type_id?: boolean
    description?: boolean
    create_date?: boolean
    achievement_type_lu?: boolean | achievement_type_luDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_achievement"]>

  export type user_achievementSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    achievement_date?: boolean
    achievement_type_id?: boolean
    description?: boolean
    create_date?: boolean
    achievement_type_lu?: boolean | achievement_type_luDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_achievement"]>

  export type user_achievementSelectScalar = {
    user_id?: boolean
    achievement_date?: boolean
    achievement_type_id?: boolean
    description?: boolean
    create_date?: boolean
  }

  export type user_achievementOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"user_id" | "achievement_date" | "achievement_type_id" | "description" | "create_date", ExtArgs["result"]["user_achievement"]>
  export type user_achievementInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    achievement_type_lu?: boolean | achievement_type_luDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type user_achievementIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    achievement_type_lu?: boolean | achievement_type_luDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type user_achievementIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    achievement_type_lu?: boolean | achievement_type_luDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $user_achievementPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_achievement"
    objects: {
      achievement_type_lu: Prisma.$achievement_type_luPayload<ExtArgs>
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      user_id: Prisma.Decimal
      achievement_date: Date
      achievement_type_id: Prisma.Decimal
      description: string | null
      create_date: Date | null
    }, ExtArgs["result"]["user_achievement"]>
    composites: {}
  }

  type user_achievementGetPayload<S extends boolean | null | undefined | user_achievementDefaultArgs> = $Result.GetResult<Prisma.$user_achievementPayload, S>

  type user_achievementCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_achievementFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_achievementCountAggregateInputType | true
    }

  export interface user_achievementDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_achievement'], meta: { name: 'user_achievement' } }
    /**
     * Find zero or one User_achievement that matches the filter.
     * @param {user_achievementFindUniqueArgs} args - Arguments to find a User_achievement
     * @example
     * // Get one User_achievement
     * const user_achievement = await prisma.user_achievement.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_achievementFindUniqueArgs>(args: SelectSubset<T, user_achievementFindUniqueArgs<ExtArgs>>): Prisma__user_achievementClient<$Result.GetResult<Prisma.$user_achievementPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_achievement that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_achievementFindUniqueOrThrowArgs} args - Arguments to find a User_achievement
     * @example
     * // Get one User_achievement
     * const user_achievement = await prisma.user_achievement.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_achievementFindUniqueOrThrowArgs>(args: SelectSubset<T, user_achievementFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_achievementClient<$Result.GetResult<Prisma.$user_achievementPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_achievement that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_achievementFindFirstArgs} args - Arguments to find a User_achievement
     * @example
     * // Get one User_achievement
     * const user_achievement = await prisma.user_achievement.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_achievementFindFirstArgs>(args?: SelectSubset<T, user_achievementFindFirstArgs<ExtArgs>>): Prisma__user_achievementClient<$Result.GetResult<Prisma.$user_achievementPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_achievement that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_achievementFindFirstOrThrowArgs} args - Arguments to find a User_achievement
     * @example
     * // Get one User_achievement
     * const user_achievement = await prisma.user_achievement.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_achievementFindFirstOrThrowArgs>(args?: SelectSubset<T, user_achievementFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_achievementClient<$Result.GetResult<Prisma.$user_achievementPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_achievements that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_achievementFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_achievements
     * const user_achievements = await prisma.user_achievement.findMany()
     * 
     * // Get first 10 User_achievements
     * const user_achievements = await prisma.user_achievement.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const user_achievementWithUser_idOnly = await prisma.user_achievement.findMany({ select: { user_id: true } })
     * 
     */
    findMany<T extends user_achievementFindManyArgs>(args?: SelectSubset<T, user_achievementFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_achievementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_achievement.
     * @param {user_achievementCreateArgs} args - Arguments to create a User_achievement.
     * @example
     * // Create one User_achievement
     * const User_achievement = await prisma.user_achievement.create({
     *   data: {
     *     // ... data to create a User_achievement
     *   }
     * })
     * 
     */
    create<T extends user_achievementCreateArgs>(args: SelectSubset<T, user_achievementCreateArgs<ExtArgs>>): Prisma__user_achievementClient<$Result.GetResult<Prisma.$user_achievementPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_achievements.
     * @param {user_achievementCreateManyArgs} args - Arguments to create many User_achievements.
     * @example
     * // Create many User_achievements
     * const user_achievement = await prisma.user_achievement.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_achievementCreateManyArgs>(args?: SelectSubset<T, user_achievementCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_achievements and returns the data saved in the database.
     * @param {user_achievementCreateManyAndReturnArgs} args - Arguments to create many User_achievements.
     * @example
     * // Create many User_achievements
     * const user_achievement = await prisma.user_achievement.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_achievements and only return the `user_id`
     * const user_achievementWithUser_idOnly = await prisma.user_achievement.createManyAndReturn({
     *   select: { user_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_achievementCreateManyAndReturnArgs>(args?: SelectSubset<T, user_achievementCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_achievementPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_achievement.
     * @param {user_achievementDeleteArgs} args - Arguments to delete one User_achievement.
     * @example
     * // Delete one User_achievement
     * const User_achievement = await prisma.user_achievement.delete({
     *   where: {
     *     // ... filter to delete one User_achievement
     *   }
     * })
     * 
     */
    delete<T extends user_achievementDeleteArgs>(args: SelectSubset<T, user_achievementDeleteArgs<ExtArgs>>): Prisma__user_achievementClient<$Result.GetResult<Prisma.$user_achievementPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_achievement.
     * @param {user_achievementUpdateArgs} args - Arguments to update one User_achievement.
     * @example
     * // Update one User_achievement
     * const user_achievement = await prisma.user_achievement.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_achievementUpdateArgs>(args: SelectSubset<T, user_achievementUpdateArgs<ExtArgs>>): Prisma__user_achievementClient<$Result.GetResult<Prisma.$user_achievementPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_achievements.
     * @param {user_achievementDeleteManyArgs} args - Arguments to filter User_achievements to delete.
     * @example
     * // Delete a few User_achievements
     * const { count } = await prisma.user_achievement.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_achievementDeleteManyArgs>(args?: SelectSubset<T, user_achievementDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_achievements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_achievementUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_achievements
     * const user_achievement = await prisma.user_achievement.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_achievementUpdateManyArgs>(args: SelectSubset<T, user_achievementUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_achievements and returns the data updated in the database.
     * @param {user_achievementUpdateManyAndReturnArgs} args - Arguments to update many User_achievements.
     * @example
     * // Update many User_achievements
     * const user_achievement = await prisma.user_achievement.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_achievements and only return the `user_id`
     * const user_achievementWithUser_idOnly = await prisma.user_achievement.updateManyAndReturn({
     *   select: { user_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_achievementUpdateManyAndReturnArgs>(args: SelectSubset<T, user_achievementUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_achievementPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_achievement.
     * @param {user_achievementUpsertArgs} args - Arguments to update or create a User_achievement.
     * @example
     * // Update or create a User_achievement
     * const user_achievement = await prisma.user_achievement.upsert({
     *   create: {
     *     // ... data to create a User_achievement
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_achievement we want to update
     *   }
     * })
     */
    upsert<T extends user_achievementUpsertArgs>(args: SelectSubset<T, user_achievementUpsertArgs<ExtArgs>>): Prisma__user_achievementClient<$Result.GetResult<Prisma.$user_achievementPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_achievements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_achievementCountArgs} args - Arguments to filter User_achievements to count.
     * @example
     * // Count the number of User_achievements
     * const count = await prisma.user_achievement.count({
     *   where: {
     *     // ... the filter for the User_achievements we want to count
     *   }
     * })
    **/
    count<T extends user_achievementCountArgs>(
      args?: Subset<T, user_achievementCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_achievementCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_achievement.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_achievementAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_achievementAggregateArgs>(args: Subset<T, User_achievementAggregateArgs>): Prisma.PrismaPromise<GetUser_achievementAggregateType<T>>

    /**
     * Group by User_achievement.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_achievementGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_achievementGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_achievementGroupByArgs['orderBy'] }
        : { orderBy?: user_achievementGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_achievementGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_achievementGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_achievement model
   */
  readonly fields: user_achievementFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_achievement.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_achievementClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    achievement_type_lu<T extends achievement_type_luDefaultArgs<ExtArgs> = {}>(args?: Subset<T, achievement_type_luDefaultArgs<ExtArgs>>): Prisma__achievement_type_luClient<$Result.GetResult<Prisma.$achievement_type_luPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_achievement model
   */
  interface user_achievementFieldRefs {
    readonly user_id: FieldRef<"user_achievement", 'Decimal'>
    readonly achievement_date: FieldRef<"user_achievement", 'DateTime'>
    readonly achievement_type_id: FieldRef<"user_achievement", 'Decimal'>
    readonly description: FieldRef<"user_achievement", 'String'>
    readonly create_date: FieldRef<"user_achievement", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_achievement findUnique
   */
  export type user_achievementFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_achievement
     */
    select?: user_achievementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_achievement
     */
    omit?: user_achievementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_achievementInclude<ExtArgs> | null
    /**
     * Filter, which user_achievement to fetch.
     */
    where: user_achievementWhereUniqueInput
  }

  /**
   * user_achievement findUniqueOrThrow
   */
  export type user_achievementFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_achievement
     */
    select?: user_achievementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_achievement
     */
    omit?: user_achievementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_achievementInclude<ExtArgs> | null
    /**
     * Filter, which user_achievement to fetch.
     */
    where: user_achievementWhereUniqueInput
  }

  /**
   * user_achievement findFirst
   */
  export type user_achievementFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_achievement
     */
    select?: user_achievementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_achievement
     */
    omit?: user_achievementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_achievementInclude<ExtArgs> | null
    /**
     * Filter, which user_achievement to fetch.
     */
    where?: user_achievementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_achievements to fetch.
     */
    orderBy?: user_achievementOrderByWithRelationInput | user_achievementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_achievements.
     */
    cursor?: user_achievementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_achievements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_achievements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_achievements.
     */
    distinct?: User_achievementScalarFieldEnum | User_achievementScalarFieldEnum[]
  }

  /**
   * user_achievement findFirstOrThrow
   */
  export type user_achievementFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_achievement
     */
    select?: user_achievementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_achievement
     */
    omit?: user_achievementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_achievementInclude<ExtArgs> | null
    /**
     * Filter, which user_achievement to fetch.
     */
    where?: user_achievementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_achievements to fetch.
     */
    orderBy?: user_achievementOrderByWithRelationInput | user_achievementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_achievements.
     */
    cursor?: user_achievementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_achievements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_achievements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_achievements.
     */
    distinct?: User_achievementScalarFieldEnum | User_achievementScalarFieldEnum[]
  }

  /**
   * user_achievement findMany
   */
  export type user_achievementFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_achievement
     */
    select?: user_achievementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_achievement
     */
    omit?: user_achievementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_achievementInclude<ExtArgs> | null
    /**
     * Filter, which user_achievements to fetch.
     */
    where?: user_achievementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_achievements to fetch.
     */
    orderBy?: user_achievementOrderByWithRelationInput | user_achievementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_achievements.
     */
    cursor?: user_achievementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_achievements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_achievements.
     */
    skip?: number
    distinct?: User_achievementScalarFieldEnum | User_achievementScalarFieldEnum[]
  }

  /**
   * user_achievement create
   */
  export type user_achievementCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_achievement
     */
    select?: user_achievementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_achievement
     */
    omit?: user_achievementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_achievementInclude<ExtArgs> | null
    /**
     * The data needed to create a user_achievement.
     */
    data: XOR<user_achievementCreateInput, user_achievementUncheckedCreateInput>
  }

  /**
   * user_achievement createMany
   */
  export type user_achievementCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_achievements.
     */
    data: user_achievementCreateManyInput | user_achievementCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_achievement createManyAndReturn
   */
  export type user_achievementCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_achievement
     */
    select?: user_achievementSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_achievement
     */
    omit?: user_achievementOmit<ExtArgs> | null
    /**
     * The data used to create many user_achievements.
     */
    data: user_achievementCreateManyInput | user_achievementCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_achievementIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_achievement update
   */
  export type user_achievementUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_achievement
     */
    select?: user_achievementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_achievement
     */
    omit?: user_achievementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_achievementInclude<ExtArgs> | null
    /**
     * The data needed to update a user_achievement.
     */
    data: XOR<user_achievementUpdateInput, user_achievementUncheckedUpdateInput>
    /**
     * Choose, which user_achievement to update.
     */
    where: user_achievementWhereUniqueInput
  }

  /**
   * user_achievement updateMany
   */
  export type user_achievementUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_achievements.
     */
    data: XOR<user_achievementUpdateManyMutationInput, user_achievementUncheckedUpdateManyInput>
    /**
     * Filter which user_achievements to update
     */
    where?: user_achievementWhereInput
    /**
     * Limit how many user_achievements to update.
     */
    limit?: number
  }

  /**
   * user_achievement updateManyAndReturn
   */
  export type user_achievementUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_achievement
     */
    select?: user_achievementSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_achievement
     */
    omit?: user_achievementOmit<ExtArgs> | null
    /**
     * The data used to update user_achievements.
     */
    data: XOR<user_achievementUpdateManyMutationInput, user_achievementUncheckedUpdateManyInput>
    /**
     * Filter which user_achievements to update
     */
    where?: user_achievementWhereInput
    /**
     * Limit how many user_achievements to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_achievementIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_achievement upsert
   */
  export type user_achievementUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_achievement
     */
    select?: user_achievementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_achievement
     */
    omit?: user_achievementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_achievementInclude<ExtArgs> | null
    /**
     * The filter to search for the user_achievement to update in case it exists.
     */
    where: user_achievementWhereUniqueInput
    /**
     * In case the user_achievement found by the `where` argument doesn't exist, create a new user_achievement with this data.
     */
    create: XOR<user_achievementCreateInput, user_achievementUncheckedCreateInput>
    /**
     * In case the user_achievement was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_achievementUpdateInput, user_achievementUncheckedUpdateInput>
  }

  /**
   * user_achievement delete
   */
  export type user_achievementDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_achievement
     */
    select?: user_achievementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_achievement
     */
    omit?: user_achievementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_achievementInclude<ExtArgs> | null
    /**
     * Filter which user_achievement to delete.
     */
    where: user_achievementWhereUniqueInput
  }

  /**
   * user_achievement deleteMany
   */
  export type user_achievementDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_achievements to delete
     */
    where?: user_achievementWhereInput
    /**
     * Limit how many user_achievements to delete.
     */
    limit?: number
  }

  /**
   * user_achievement without action
   */
  export type user_achievementDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_achievement
     */
    select?: user_achievementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_achievement
     */
    omit?: user_achievementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_achievementInclude<ExtArgs> | null
  }


  /**
   * Model user_group_xref
   */

  export type AggregateUser_group_xref = {
    _count: User_group_xrefCountAggregateOutputType | null
    _avg: User_group_xrefAvgAggregateOutputType | null
    _sum: User_group_xrefSumAggregateOutputType | null
    _min: User_group_xrefMinAggregateOutputType | null
    _max: User_group_xrefMaxAggregateOutputType | null
  }

  export type User_group_xrefAvgAggregateOutputType = {
    user_group_id: Decimal | null
    login_id: Decimal | null
    group_id: Decimal | null
    create_user_id: Decimal | null
    security_status_id: Decimal | null
  }

  export type User_group_xrefSumAggregateOutputType = {
    user_group_id: Decimal | null
    login_id: Decimal | null
    group_id: Decimal | null
    create_user_id: Decimal | null
    security_status_id: Decimal | null
  }

  export type User_group_xrefMinAggregateOutputType = {
    user_group_id: Decimal | null
    login_id: Decimal | null
    group_id: Decimal | null
    create_user_id: Decimal | null
    security_status_id: Decimal | null
    create_date: Date | null
  }

  export type User_group_xrefMaxAggregateOutputType = {
    user_group_id: Decimal | null
    login_id: Decimal | null
    group_id: Decimal | null
    create_user_id: Decimal | null
    security_status_id: Decimal | null
    create_date: Date | null
  }

  export type User_group_xrefCountAggregateOutputType = {
    user_group_id: number
    login_id: number
    group_id: number
    create_user_id: number
    security_status_id: number
    create_date: number
    _all: number
  }


  export type User_group_xrefAvgAggregateInputType = {
    user_group_id?: true
    login_id?: true
    group_id?: true
    create_user_id?: true
    security_status_id?: true
  }

  export type User_group_xrefSumAggregateInputType = {
    user_group_id?: true
    login_id?: true
    group_id?: true
    create_user_id?: true
    security_status_id?: true
  }

  export type User_group_xrefMinAggregateInputType = {
    user_group_id?: true
    login_id?: true
    group_id?: true
    create_user_id?: true
    security_status_id?: true
    create_date?: true
  }

  export type User_group_xrefMaxAggregateInputType = {
    user_group_id?: true
    login_id?: true
    group_id?: true
    create_user_id?: true
    security_status_id?: true
    create_date?: true
  }

  export type User_group_xrefCountAggregateInputType = {
    user_group_id?: true
    login_id?: true
    group_id?: true
    create_user_id?: true
    security_status_id?: true
    create_date?: true
    _all?: true
  }

  export type User_group_xrefAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_group_xref to aggregate.
     */
    where?: user_group_xrefWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_group_xrefs to fetch.
     */
    orderBy?: user_group_xrefOrderByWithRelationInput | user_group_xrefOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_group_xrefWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_group_xrefs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_group_xrefs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_group_xrefs
    **/
    _count?: true | User_group_xrefCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_group_xrefAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_group_xrefSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_group_xrefMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_group_xrefMaxAggregateInputType
  }

  export type GetUser_group_xrefAggregateType<T extends User_group_xrefAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_group_xref]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_group_xref[P]>
      : GetScalarType<T[P], AggregateUser_group_xref[P]>
  }




  export type user_group_xrefGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_group_xrefWhereInput
    orderBy?: user_group_xrefOrderByWithAggregationInput | user_group_xrefOrderByWithAggregationInput[]
    by: User_group_xrefScalarFieldEnum[] | User_group_xrefScalarFieldEnum
    having?: user_group_xrefScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_group_xrefCountAggregateInputType | true
    _avg?: User_group_xrefAvgAggregateInputType
    _sum?: User_group_xrefSumAggregateInputType
    _min?: User_group_xrefMinAggregateInputType
    _max?: User_group_xrefMaxAggregateInputType
  }

  export type User_group_xrefGroupByOutputType = {
    user_group_id: Decimal
    login_id: Decimal | null
    group_id: Decimal | null
    create_user_id: Decimal | null
    security_status_id: Decimal | null
    create_date: Date | null
    _count: User_group_xrefCountAggregateOutputType | null
    _avg: User_group_xrefAvgAggregateOutputType | null
    _sum: User_group_xrefSumAggregateOutputType | null
    _min: User_group_xrefMinAggregateOutputType | null
    _max: User_group_xrefMaxAggregateOutputType | null
  }

  type GetUser_group_xrefGroupByPayload<T extends user_group_xrefGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_group_xrefGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_group_xrefGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_group_xrefGroupByOutputType[P]>
            : GetScalarType<T[P], User_group_xrefGroupByOutputType[P]>
        }
      >
    >


  export type user_group_xrefSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_group_id?: boolean
    login_id?: boolean
    group_id?: boolean
    create_user_id?: boolean
    security_status_id?: boolean
    create_date?: boolean
    security_user?: boolean | user_group_xref$security_userArgs<ExtArgs>
    security_groups?: boolean | user_group_xref$security_groupsArgs<ExtArgs>
    security_status_lu?: boolean | user_group_xref$security_status_luArgs<ExtArgs>
  }, ExtArgs["result"]["user_group_xref"]>

  export type user_group_xrefSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_group_id?: boolean
    login_id?: boolean
    group_id?: boolean
    create_user_id?: boolean
    security_status_id?: boolean
    create_date?: boolean
    security_user?: boolean | user_group_xref$security_userArgs<ExtArgs>
    security_groups?: boolean | user_group_xref$security_groupsArgs<ExtArgs>
    security_status_lu?: boolean | user_group_xref$security_status_luArgs<ExtArgs>
  }, ExtArgs["result"]["user_group_xref"]>

  export type user_group_xrefSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_group_id?: boolean
    login_id?: boolean
    group_id?: boolean
    create_user_id?: boolean
    security_status_id?: boolean
    create_date?: boolean
    security_user?: boolean | user_group_xref$security_userArgs<ExtArgs>
    security_groups?: boolean | user_group_xref$security_groupsArgs<ExtArgs>
    security_status_lu?: boolean | user_group_xref$security_status_luArgs<ExtArgs>
  }, ExtArgs["result"]["user_group_xref"]>

  export type user_group_xrefSelectScalar = {
    user_group_id?: boolean
    login_id?: boolean
    group_id?: boolean
    create_user_id?: boolean
    security_status_id?: boolean
    create_date?: boolean
  }

  export type user_group_xrefOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"user_group_id" | "login_id" | "group_id" | "create_user_id" | "security_status_id" | "create_date", ExtArgs["result"]["user_group_xref"]>
  export type user_group_xrefInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    security_user?: boolean | user_group_xref$security_userArgs<ExtArgs>
    security_groups?: boolean | user_group_xref$security_groupsArgs<ExtArgs>
    security_status_lu?: boolean | user_group_xref$security_status_luArgs<ExtArgs>
  }
  export type user_group_xrefIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    security_user?: boolean | user_group_xref$security_userArgs<ExtArgs>
    security_groups?: boolean | user_group_xref$security_groupsArgs<ExtArgs>
    security_status_lu?: boolean | user_group_xref$security_status_luArgs<ExtArgs>
  }
  export type user_group_xrefIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    security_user?: boolean | user_group_xref$security_userArgs<ExtArgs>
    security_groups?: boolean | user_group_xref$security_groupsArgs<ExtArgs>
    security_status_lu?: boolean | user_group_xref$security_status_luArgs<ExtArgs>
  }

  export type $user_group_xrefPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_group_xref"
    objects: {
      security_user: Prisma.$security_userPayload<ExtArgs> | null
      security_groups: Prisma.$security_groupsPayload<ExtArgs> | null
      security_status_lu: Prisma.$security_status_luPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      user_group_id: Prisma.Decimal
      login_id: Prisma.Decimal | null
      group_id: Prisma.Decimal | null
      create_user_id: Prisma.Decimal | null
      security_status_id: Prisma.Decimal | null
      create_date: Date | null
    }, ExtArgs["result"]["user_group_xref"]>
    composites: {}
  }

  type user_group_xrefGetPayload<S extends boolean | null | undefined | user_group_xrefDefaultArgs> = $Result.GetResult<Prisma.$user_group_xrefPayload, S>

  type user_group_xrefCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_group_xrefFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_group_xrefCountAggregateInputType | true
    }

  export interface user_group_xrefDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_group_xref'], meta: { name: 'user_group_xref' } }
    /**
     * Find zero or one User_group_xref that matches the filter.
     * @param {user_group_xrefFindUniqueArgs} args - Arguments to find a User_group_xref
     * @example
     * // Get one User_group_xref
     * const user_group_xref = await prisma.user_group_xref.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_group_xrefFindUniqueArgs>(args: SelectSubset<T, user_group_xrefFindUniqueArgs<ExtArgs>>): Prisma__user_group_xrefClient<$Result.GetResult<Prisma.$user_group_xrefPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_group_xref that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_group_xrefFindUniqueOrThrowArgs} args - Arguments to find a User_group_xref
     * @example
     * // Get one User_group_xref
     * const user_group_xref = await prisma.user_group_xref.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_group_xrefFindUniqueOrThrowArgs>(args: SelectSubset<T, user_group_xrefFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_group_xrefClient<$Result.GetResult<Prisma.$user_group_xrefPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_group_xref that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_group_xrefFindFirstArgs} args - Arguments to find a User_group_xref
     * @example
     * // Get one User_group_xref
     * const user_group_xref = await prisma.user_group_xref.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_group_xrefFindFirstArgs>(args?: SelectSubset<T, user_group_xrefFindFirstArgs<ExtArgs>>): Prisma__user_group_xrefClient<$Result.GetResult<Prisma.$user_group_xrefPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_group_xref that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_group_xrefFindFirstOrThrowArgs} args - Arguments to find a User_group_xref
     * @example
     * // Get one User_group_xref
     * const user_group_xref = await prisma.user_group_xref.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_group_xrefFindFirstOrThrowArgs>(args?: SelectSubset<T, user_group_xrefFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_group_xrefClient<$Result.GetResult<Prisma.$user_group_xrefPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_group_xrefs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_group_xrefFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_group_xrefs
     * const user_group_xrefs = await prisma.user_group_xref.findMany()
     * 
     * // Get first 10 User_group_xrefs
     * const user_group_xrefs = await prisma.user_group_xref.findMany({ take: 10 })
     * 
     * // Only select the `user_group_id`
     * const user_group_xrefWithUser_group_idOnly = await prisma.user_group_xref.findMany({ select: { user_group_id: true } })
     * 
     */
    findMany<T extends user_group_xrefFindManyArgs>(args?: SelectSubset<T, user_group_xrefFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_group_xrefPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_group_xref.
     * @param {user_group_xrefCreateArgs} args - Arguments to create a User_group_xref.
     * @example
     * // Create one User_group_xref
     * const User_group_xref = await prisma.user_group_xref.create({
     *   data: {
     *     // ... data to create a User_group_xref
     *   }
     * })
     * 
     */
    create<T extends user_group_xrefCreateArgs>(args: SelectSubset<T, user_group_xrefCreateArgs<ExtArgs>>): Prisma__user_group_xrefClient<$Result.GetResult<Prisma.$user_group_xrefPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_group_xrefs.
     * @param {user_group_xrefCreateManyArgs} args - Arguments to create many User_group_xrefs.
     * @example
     * // Create many User_group_xrefs
     * const user_group_xref = await prisma.user_group_xref.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_group_xrefCreateManyArgs>(args?: SelectSubset<T, user_group_xrefCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_group_xrefs and returns the data saved in the database.
     * @param {user_group_xrefCreateManyAndReturnArgs} args - Arguments to create many User_group_xrefs.
     * @example
     * // Create many User_group_xrefs
     * const user_group_xref = await prisma.user_group_xref.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_group_xrefs and only return the `user_group_id`
     * const user_group_xrefWithUser_group_idOnly = await prisma.user_group_xref.createManyAndReturn({
     *   select: { user_group_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_group_xrefCreateManyAndReturnArgs>(args?: SelectSubset<T, user_group_xrefCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_group_xrefPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_group_xref.
     * @param {user_group_xrefDeleteArgs} args - Arguments to delete one User_group_xref.
     * @example
     * // Delete one User_group_xref
     * const User_group_xref = await prisma.user_group_xref.delete({
     *   where: {
     *     // ... filter to delete one User_group_xref
     *   }
     * })
     * 
     */
    delete<T extends user_group_xrefDeleteArgs>(args: SelectSubset<T, user_group_xrefDeleteArgs<ExtArgs>>): Prisma__user_group_xrefClient<$Result.GetResult<Prisma.$user_group_xrefPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_group_xref.
     * @param {user_group_xrefUpdateArgs} args - Arguments to update one User_group_xref.
     * @example
     * // Update one User_group_xref
     * const user_group_xref = await prisma.user_group_xref.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_group_xrefUpdateArgs>(args: SelectSubset<T, user_group_xrefUpdateArgs<ExtArgs>>): Prisma__user_group_xrefClient<$Result.GetResult<Prisma.$user_group_xrefPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_group_xrefs.
     * @param {user_group_xrefDeleteManyArgs} args - Arguments to filter User_group_xrefs to delete.
     * @example
     * // Delete a few User_group_xrefs
     * const { count } = await prisma.user_group_xref.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_group_xrefDeleteManyArgs>(args?: SelectSubset<T, user_group_xrefDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_group_xrefs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_group_xrefUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_group_xrefs
     * const user_group_xref = await prisma.user_group_xref.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_group_xrefUpdateManyArgs>(args: SelectSubset<T, user_group_xrefUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_group_xrefs and returns the data updated in the database.
     * @param {user_group_xrefUpdateManyAndReturnArgs} args - Arguments to update many User_group_xrefs.
     * @example
     * // Update many User_group_xrefs
     * const user_group_xref = await prisma.user_group_xref.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_group_xrefs and only return the `user_group_id`
     * const user_group_xrefWithUser_group_idOnly = await prisma.user_group_xref.updateManyAndReturn({
     *   select: { user_group_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_group_xrefUpdateManyAndReturnArgs>(args: SelectSubset<T, user_group_xrefUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_group_xrefPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_group_xref.
     * @param {user_group_xrefUpsertArgs} args - Arguments to update or create a User_group_xref.
     * @example
     * // Update or create a User_group_xref
     * const user_group_xref = await prisma.user_group_xref.upsert({
     *   create: {
     *     // ... data to create a User_group_xref
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_group_xref we want to update
     *   }
     * })
     */
    upsert<T extends user_group_xrefUpsertArgs>(args: SelectSubset<T, user_group_xrefUpsertArgs<ExtArgs>>): Prisma__user_group_xrefClient<$Result.GetResult<Prisma.$user_group_xrefPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_group_xrefs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_group_xrefCountArgs} args - Arguments to filter User_group_xrefs to count.
     * @example
     * // Count the number of User_group_xrefs
     * const count = await prisma.user_group_xref.count({
     *   where: {
     *     // ... the filter for the User_group_xrefs we want to count
     *   }
     * })
    **/
    count<T extends user_group_xrefCountArgs>(
      args?: Subset<T, user_group_xrefCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_group_xrefCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_group_xref.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_group_xrefAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_group_xrefAggregateArgs>(args: Subset<T, User_group_xrefAggregateArgs>): Prisma.PrismaPromise<GetUser_group_xrefAggregateType<T>>

    /**
     * Group by User_group_xref.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_group_xrefGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_group_xrefGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_group_xrefGroupByArgs['orderBy'] }
        : { orderBy?: user_group_xrefGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_group_xrefGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_group_xrefGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_group_xref model
   */
  readonly fields: user_group_xrefFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_group_xref.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_group_xrefClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    security_user<T extends user_group_xref$security_userArgs<ExtArgs> = {}>(args?: Subset<T, user_group_xref$security_userArgs<ExtArgs>>): Prisma__security_userClient<$Result.GetResult<Prisma.$security_userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    security_groups<T extends user_group_xref$security_groupsArgs<ExtArgs> = {}>(args?: Subset<T, user_group_xref$security_groupsArgs<ExtArgs>>): Prisma__security_groupsClient<$Result.GetResult<Prisma.$security_groupsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    security_status_lu<T extends user_group_xref$security_status_luArgs<ExtArgs> = {}>(args?: Subset<T, user_group_xref$security_status_luArgs<ExtArgs>>): Prisma__security_status_luClient<$Result.GetResult<Prisma.$security_status_luPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_group_xref model
   */
  interface user_group_xrefFieldRefs {
    readonly user_group_id: FieldRef<"user_group_xref", 'Decimal'>
    readonly login_id: FieldRef<"user_group_xref", 'Decimal'>
    readonly group_id: FieldRef<"user_group_xref", 'Decimal'>
    readonly create_user_id: FieldRef<"user_group_xref", 'Decimal'>
    readonly security_status_id: FieldRef<"user_group_xref", 'Decimal'>
    readonly create_date: FieldRef<"user_group_xref", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_group_xref findUnique
   */
  export type user_group_xrefFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_group_xref
     */
    select?: user_group_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_group_xref
     */
    omit?: user_group_xrefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_group_xrefInclude<ExtArgs> | null
    /**
     * Filter, which user_group_xref to fetch.
     */
    where: user_group_xrefWhereUniqueInput
  }

  /**
   * user_group_xref findUniqueOrThrow
   */
  export type user_group_xrefFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_group_xref
     */
    select?: user_group_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_group_xref
     */
    omit?: user_group_xrefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_group_xrefInclude<ExtArgs> | null
    /**
     * Filter, which user_group_xref to fetch.
     */
    where: user_group_xrefWhereUniqueInput
  }

  /**
   * user_group_xref findFirst
   */
  export type user_group_xrefFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_group_xref
     */
    select?: user_group_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_group_xref
     */
    omit?: user_group_xrefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_group_xrefInclude<ExtArgs> | null
    /**
     * Filter, which user_group_xref to fetch.
     */
    where?: user_group_xrefWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_group_xrefs to fetch.
     */
    orderBy?: user_group_xrefOrderByWithRelationInput | user_group_xrefOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_group_xrefs.
     */
    cursor?: user_group_xrefWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_group_xrefs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_group_xrefs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_group_xrefs.
     */
    distinct?: User_group_xrefScalarFieldEnum | User_group_xrefScalarFieldEnum[]
  }

  /**
   * user_group_xref findFirstOrThrow
   */
  export type user_group_xrefFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_group_xref
     */
    select?: user_group_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_group_xref
     */
    omit?: user_group_xrefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_group_xrefInclude<ExtArgs> | null
    /**
     * Filter, which user_group_xref to fetch.
     */
    where?: user_group_xrefWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_group_xrefs to fetch.
     */
    orderBy?: user_group_xrefOrderByWithRelationInput | user_group_xrefOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_group_xrefs.
     */
    cursor?: user_group_xrefWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_group_xrefs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_group_xrefs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_group_xrefs.
     */
    distinct?: User_group_xrefScalarFieldEnum | User_group_xrefScalarFieldEnum[]
  }

  /**
   * user_group_xref findMany
   */
  export type user_group_xrefFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_group_xref
     */
    select?: user_group_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_group_xref
     */
    omit?: user_group_xrefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_group_xrefInclude<ExtArgs> | null
    /**
     * Filter, which user_group_xrefs to fetch.
     */
    where?: user_group_xrefWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_group_xrefs to fetch.
     */
    orderBy?: user_group_xrefOrderByWithRelationInput | user_group_xrefOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_group_xrefs.
     */
    cursor?: user_group_xrefWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_group_xrefs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_group_xrefs.
     */
    skip?: number
    distinct?: User_group_xrefScalarFieldEnum | User_group_xrefScalarFieldEnum[]
  }

  /**
   * user_group_xref create
   */
  export type user_group_xrefCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_group_xref
     */
    select?: user_group_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_group_xref
     */
    omit?: user_group_xrefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_group_xrefInclude<ExtArgs> | null
    /**
     * The data needed to create a user_group_xref.
     */
    data: XOR<user_group_xrefCreateInput, user_group_xrefUncheckedCreateInput>
  }

  /**
   * user_group_xref createMany
   */
  export type user_group_xrefCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_group_xrefs.
     */
    data: user_group_xrefCreateManyInput | user_group_xrefCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_group_xref createManyAndReturn
   */
  export type user_group_xrefCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_group_xref
     */
    select?: user_group_xrefSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_group_xref
     */
    omit?: user_group_xrefOmit<ExtArgs> | null
    /**
     * The data used to create many user_group_xrefs.
     */
    data: user_group_xrefCreateManyInput | user_group_xrefCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_group_xrefIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_group_xref update
   */
  export type user_group_xrefUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_group_xref
     */
    select?: user_group_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_group_xref
     */
    omit?: user_group_xrefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_group_xrefInclude<ExtArgs> | null
    /**
     * The data needed to update a user_group_xref.
     */
    data: XOR<user_group_xrefUpdateInput, user_group_xrefUncheckedUpdateInput>
    /**
     * Choose, which user_group_xref to update.
     */
    where: user_group_xrefWhereUniqueInput
  }

  /**
   * user_group_xref updateMany
   */
  export type user_group_xrefUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_group_xrefs.
     */
    data: XOR<user_group_xrefUpdateManyMutationInput, user_group_xrefUncheckedUpdateManyInput>
    /**
     * Filter which user_group_xrefs to update
     */
    where?: user_group_xrefWhereInput
    /**
     * Limit how many user_group_xrefs to update.
     */
    limit?: number
  }

  /**
   * user_group_xref updateManyAndReturn
   */
  export type user_group_xrefUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_group_xref
     */
    select?: user_group_xrefSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_group_xref
     */
    omit?: user_group_xrefOmit<ExtArgs> | null
    /**
     * The data used to update user_group_xrefs.
     */
    data: XOR<user_group_xrefUpdateManyMutationInput, user_group_xrefUncheckedUpdateManyInput>
    /**
     * Filter which user_group_xrefs to update
     */
    where?: user_group_xrefWhereInput
    /**
     * Limit how many user_group_xrefs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_group_xrefIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_group_xref upsert
   */
  export type user_group_xrefUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_group_xref
     */
    select?: user_group_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_group_xref
     */
    omit?: user_group_xrefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_group_xrefInclude<ExtArgs> | null
    /**
     * The filter to search for the user_group_xref to update in case it exists.
     */
    where: user_group_xrefWhereUniqueInput
    /**
     * In case the user_group_xref found by the `where` argument doesn't exist, create a new user_group_xref with this data.
     */
    create: XOR<user_group_xrefCreateInput, user_group_xrefUncheckedCreateInput>
    /**
     * In case the user_group_xref was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_group_xrefUpdateInput, user_group_xrefUncheckedUpdateInput>
  }

  /**
   * user_group_xref delete
   */
  export type user_group_xrefDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_group_xref
     */
    select?: user_group_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_group_xref
     */
    omit?: user_group_xrefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_group_xrefInclude<ExtArgs> | null
    /**
     * Filter which user_group_xref to delete.
     */
    where: user_group_xrefWhereUniqueInput
  }

  /**
   * user_group_xref deleteMany
   */
  export type user_group_xrefDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_group_xrefs to delete
     */
    where?: user_group_xrefWhereInput
    /**
     * Limit how many user_group_xrefs to delete.
     */
    limit?: number
  }

  /**
   * user_group_xref.security_user
   */
  export type user_group_xref$security_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_user
     */
    select?: security_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_user
     */
    omit?: security_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_userInclude<ExtArgs> | null
    where?: security_userWhereInput
  }

  /**
   * user_group_xref.security_groups
   */
  export type user_group_xref$security_groupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_groups
     */
    select?: security_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_groups
     */
    omit?: security_groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_groupsInclude<ExtArgs> | null
    where?: security_groupsWhereInput
  }

  /**
   * user_group_xref.security_status_lu
   */
  export type user_group_xref$security_status_luArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_status_lu
     */
    select?: security_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the security_status_lu
     */
    omit?: security_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: security_status_luInclude<ExtArgs> | null
    where?: security_status_luWhereInput
  }

  /**
   * user_group_xref without action
   */
  export type user_group_xrefDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_group_xref
     */
    select?: user_group_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_group_xref
     */
    omit?: user_group_xrefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_group_xrefInclude<ExtArgs> | null
  }


  /**
   * Model user_otp_email
   */

  export type AggregateUser_otp_email = {
    _count: User_otp_emailCountAggregateOutputType | null
    _avg: User_otp_emailAvgAggregateOutputType | null
    _sum: User_otp_emailSumAggregateOutputType | null
    _min: User_otp_emailMinAggregateOutputType | null
    _max: User_otp_emailMaxAggregateOutputType | null
  }

  export type User_otp_emailAvgAggregateOutputType = {
    id: number | null
    user_id: Decimal | null
    mode: number | null
    fail_count: number | null
  }

  export type User_otp_emailSumAggregateOutputType = {
    id: number | null
    user_id: Decimal | null
    mode: number | null
    fail_count: number | null
  }

  export type User_otp_emailMinAggregateOutputType = {
    id: number | null
    user_id: Decimal | null
    mode: number | null
    otp: string | null
    expire_at: Date | null
    resend: boolean | null
    fail_count: number | null
  }

  export type User_otp_emailMaxAggregateOutputType = {
    id: number | null
    user_id: Decimal | null
    mode: number | null
    otp: string | null
    expire_at: Date | null
    resend: boolean | null
    fail_count: number | null
  }

  export type User_otp_emailCountAggregateOutputType = {
    id: number
    user_id: number
    mode: number
    otp: number
    expire_at: number
    resend: number
    fail_count: number
    _all: number
  }


  export type User_otp_emailAvgAggregateInputType = {
    id?: true
    user_id?: true
    mode?: true
    fail_count?: true
  }

  export type User_otp_emailSumAggregateInputType = {
    id?: true
    user_id?: true
    mode?: true
    fail_count?: true
  }

  export type User_otp_emailMinAggregateInputType = {
    id?: true
    user_id?: true
    mode?: true
    otp?: true
    expire_at?: true
    resend?: true
    fail_count?: true
  }

  export type User_otp_emailMaxAggregateInputType = {
    id?: true
    user_id?: true
    mode?: true
    otp?: true
    expire_at?: true
    resend?: true
    fail_count?: true
  }

  export type User_otp_emailCountAggregateInputType = {
    id?: true
    user_id?: true
    mode?: true
    otp?: true
    expire_at?: true
    resend?: true
    fail_count?: true
    _all?: true
  }

  export type User_otp_emailAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_otp_email to aggregate.
     */
    where?: user_otp_emailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_otp_emails to fetch.
     */
    orderBy?: user_otp_emailOrderByWithRelationInput | user_otp_emailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_otp_emailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_otp_emails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_otp_emails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_otp_emails
    **/
    _count?: true | User_otp_emailCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_otp_emailAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_otp_emailSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_otp_emailMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_otp_emailMaxAggregateInputType
  }

  export type GetUser_otp_emailAggregateType<T extends User_otp_emailAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_otp_email]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_otp_email[P]>
      : GetScalarType<T[P], AggregateUser_otp_email[P]>
  }




  export type user_otp_emailGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_otp_emailWhereInput
    orderBy?: user_otp_emailOrderByWithAggregationInput | user_otp_emailOrderByWithAggregationInput[]
    by: User_otp_emailScalarFieldEnum[] | User_otp_emailScalarFieldEnum
    having?: user_otp_emailScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_otp_emailCountAggregateInputType | true
    _avg?: User_otp_emailAvgAggregateInputType
    _sum?: User_otp_emailSumAggregateInputType
    _min?: User_otp_emailMinAggregateInputType
    _max?: User_otp_emailMaxAggregateInputType
  }

  export type User_otp_emailGroupByOutputType = {
    id: number
    user_id: Decimal
    mode: number
    otp: string
    expire_at: Date
    resend: boolean
    fail_count: number
    _count: User_otp_emailCountAggregateOutputType | null
    _avg: User_otp_emailAvgAggregateOutputType | null
    _sum: User_otp_emailSumAggregateOutputType | null
    _min: User_otp_emailMinAggregateOutputType | null
    _max: User_otp_emailMaxAggregateOutputType | null
  }

  type GetUser_otp_emailGroupByPayload<T extends user_otp_emailGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_otp_emailGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_otp_emailGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_otp_emailGroupByOutputType[P]>
            : GetScalarType<T[P], User_otp_emailGroupByOutputType[P]>
        }
      >
    >


  export type user_otp_emailSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    mode?: boolean
    otp?: boolean
    expire_at?: boolean
    resend?: boolean
    fail_count?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_otp_email"]>

  export type user_otp_emailSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    mode?: boolean
    otp?: boolean
    expire_at?: boolean
    resend?: boolean
    fail_count?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_otp_email"]>

  export type user_otp_emailSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    mode?: boolean
    otp?: boolean
    expire_at?: boolean
    resend?: boolean
    fail_count?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_otp_email"]>

  export type user_otp_emailSelectScalar = {
    id?: boolean
    user_id?: boolean
    mode?: boolean
    otp?: boolean
    expire_at?: boolean
    resend?: boolean
    fail_count?: boolean
  }

  export type user_otp_emailOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "mode" | "otp" | "expire_at" | "resend" | "fail_count", ExtArgs["result"]["user_otp_email"]>
  export type user_otp_emailInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type user_otp_emailIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type user_otp_emailIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $user_otp_emailPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_otp_email"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: Prisma.Decimal
      mode: number
      otp: string
      expire_at: Date
      resend: boolean
      fail_count: number
    }, ExtArgs["result"]["user_otp_email"]>
    composites: {}
  }

  type user_otp_emailGetPayload<S extends boolean | null | undefined | user_otp_emailDefaultArgs> = $Result.GetResult<Prisma.$user_otp_emailPayload, S>

  type user_otp_emailCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_otp_emailFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_otp_emailCountAggregateInputType | true
    }

  export interface user_otp_emailDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_otp_email'], meta: { name: 'user_otp_email' } }
    /**
     * Find zero or one User_otp_email that matches the filter.
     * @param {user_otp_emailFindUniqueArgs} args - Arguments to find a User_otp_email
     * @example
     * // Get one User_otp_email
     * const user_otp_email = await prisma.user_otp_email.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_otp_emailFindUniqueArgs>(args: SelectSubset<T, user_otp_emailFindUniqueArgs<ExtArgs>>): Prisma__user_otp_emailClient<$Result.GetResult<Prisma.$user_otp_emailPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_otp_email that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_otp_emailFindUniqueOrThrowArgs} args - Arguments to find a User_otp_email
     * @example
     * // Get one User_otp_email
     * const user_otp_email = await prisma.user_otp_email.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_otp_emailFindUniqueOrThrowArgs>(args: SelectSubset<T, user_otp_emailFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_otp_emailClient<$Result.GetResult<Prisma.$user_otp_emailPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_otp_email that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_otp_emailFindFirstArgs} args - Arguments to find a User_otp_email
     * @example
     * // Get one User_otp_email
     * const user_otp_email = await prisma.user_otp_email.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_otp_emailFindFirstArgs>(args?: SelectSubset<T, user_otp_emailFindFirstArgs<ExtArgs>>): Prisma__user_otp_emailClient<$Result.GetResult<Prisma.$user_otp_emailPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_otp_email that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_otp_emailFindFirstOrThrowArgs} args - Arguments to find a User_otp_email
     * @example
     * // Get one User_otp_email
     * const user_otp_email = await prisma.user_otp_email.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_otp_emailFindFirstOrThrowArgs>(args?: SelectSubset<T, user_otp_emailFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_otp_emailClient<$Result.GetResult<Prisma.$user_otp_emailPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_otp_emails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_otp_emailFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_otp_emails
     * const user_otp_emails = await prisma.user_otp_email.findMany()
     * 
     * // Get first 10 User_otp_emails
     * const user_otp_emails = await prisma.user_otp_email.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_otp_emailWithIdOnly = await prisma.user_otp_email.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_otp_emailFindManyArgs>(args?: SelectSubset<T, user_otp_emailFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_otp_emailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_otp_email.
     * @param {user_otp_emailCreateArgs} args - Arguments to create a User_otp_email.
     * @example
     * // Create one User_otp_email
     * const User_otp_email = await prisma.user_otp_email.create({
     *   data: {
     *     // ... data to create a User_otp_email
     *   }
     * })
     * 
     */
    create<T extends user_otp_emailCreateArgs>(args: SelectSubset<T, user_otp_emailCreateArgs<ExtArgs>>): Prisma__user_otp_emailClient<$Result.GetResult<Prisma.$user_otp_emailPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_otp_emails.
     * @param {user_otp_emailCreateManyArgs} args - Arguments to create many User_otp_emails.
     * @example
     * // Create many User_otp_emails
     * const user_otp_email = await prisma.user_otp_email.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_otp_emailCreateManyArgs>(args?: SelectSubset<T, user_otp_emailCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_otp_emails and returns the data saved in the database.
     * @param {user_otp_emailCreateManyAndReturnArgs} args - Arguments to create many User_otp_emails.
     * @example
     * // Create many User_otp_emails
     * const user_otp_email = await prisma.user_otp_email.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_otp_emails and only return the `id`
     * const user_otp_emailWithIdOnly = await prisma.user_otp_email.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_otp_emailCreateManyAndReturnArgs>(args?: SelectSubset<T, user_otp_emailCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_otp_emailPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_otp_email.
     * @param {user_otp_emailDeleteArgs} args - Arguments to delete one User_otp_email.
     * @example
     * // Delete one User_otp_email
     * const User_otp_email = await prisma.user_otp_email.delete({
     *   where: {
     *     // ... filter to delete one User_otp_email
     *   }
     * })
     * 
     */
    delete<T extends user_otp_emailDeleteArgs>(args: SelectSubset<T, user_otp_emailDeleteArgs<ExtArgs>>): Prisma__user_otp_emailClient<$Result.GetResult<Prisma.$user_otp_emailPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_otp_email.
     * @param {user_otp_emailUpdateArgs} args - Arguments to update one User_otp_email.
     * @example
     * // Update one User_otp_email
     * const user_otp_email = await prisma.user_otp_email.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_otp_emailUpdateArgs>(args: SelectSubset<T, user_otp_emailUpdateArgs<ExtArgs>>): Prisma__user_otp_emailClient<$Result.GetResult<Prisma.$user_otp_emailPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_otp_emails.
     * @param {user_otp_emailDeleteManyArgs} args - Arguments to filter User_otp_emails to delete.
     * @example
     * // Delete a few User_otp_emails
     * const { count } = await prisma.user_otp_email.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_otp_emailDeleteManyArgs>(args?: SelectSubset<T, user_otp_emailDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_otp_emails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_otp_emailUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_otp_emails
     * const user_otp_email = await prisma.user_otp_email.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_otp_emailUpdateManyArgs>(args: SelectSubset<T, user_otp_emailUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_otp_emails and returns the data updated in the database.
     * @param {user_otp_emailUpdateManyAndReturnArgs} args - Arguments to update many User_otp_emails.
     * @example
     * // Update many User_otp_emails
     * const user_otp_email = await prisma.user_otp_email.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_otp_emails and only return the `id`
     * const user_otp_emailWithIdOnly = await prisma.user_otp_email.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_otp_emailUpdateManyAndReturnArgs>(args: SelectSubset<T, user_otp_emailUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_otp_emailPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_otp_email.
     * @param {user_otp_emailUpsertArgs} args - Arguments to update or create a User_otp_email.
     * @example
     * // Update or create a User_otp_email
     * const user_otp_email = await prisma.user_otp_email.upsert({
     *   create: {
     *     // ... data to create a User_otp_email
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_otp_email we want to update
     *   }
     * })
     */
    upsert<T extends user_otp_emailUpsertArgs>(args: SelectSubset<T, user_otp_emailUpsertArgs<ExtArgs>>): Prisma__user_otp_emailClient<$Result.GetResult<Prisma.$user_otp_emailPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_otp_emails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_otp_emailCountArgs} args - Arguments to filter User_otp_emails to count.
     * @example
     * // Count the number of User_otp_emails
     * const count = await prisma.user_otp_email.count({
     *   where: {
     *     // ... the filter for the User_otp_emails we want to count
     *   }
     * })
    **/
    count<T extends user_otp_emailCountArgs>(
      args?: Subset<T, user_otp_emailCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_otp_emailCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_otp_email.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_otp_emailAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_otp_emailAggregateArgs>(args: Subset<T, User_otp_emailAggregateArgs>): Prisma.PrismaPromise<GetUser_otp_emailAggregateType<T>>

    /**
     * Group by User_otp_email.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_otp_emailGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_otp_emailGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_otp_emailGroupByArgs['orderBy'] }
        : { orderBy?: user_otp_emailGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_otp_emailGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_otp_emailGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_otp_email model
   */
  readonly fields: user_otp_emailFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_otp_email.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_otp_emailClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_otp_email model
   */
  interface user_otp_emailFieldRefs {
    readonly id: FieldRef<"user_otp_email", 'Int'>
    readonly user_id: FieldRef<"user_otp_email", 'Decimal'>
    readonly mode: FieldRef<"user_otp_email", 'Int'>
    readonly otp: FieldRef<"user_otp_email", 'String'>
    readonly expire_at: FieldRef<"user_otp_email", 'DateTime'>
    readonly resend: FieldRef<"user_otp_email", 'Boolean'>
    readonly fail_count: FieldRef<"user_otp_email", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * user_otp_email findUnique
   */
  export type user_otp_emailFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_otp_email
     */
    select?: user_otp_emailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_otp_email
     */
    omit?: user_otp_emailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_otp_emailInclude<ExtArgs> | null
    /**
     * Filter, which user_otp_email to fetch.
     */
    where: user_otp_emailWhereUniqueInput
  }

  /**
   * user_otp_email findUniqueOrThrow
   */
  export type user_otp_emailFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_otp_email
     */
    select?: user_otp_emailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_otp_email
     */
    omit?: user_otp_emailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_otp_emailInclude<ExtArgs> | null
    /**
     * Filter, which user_otp_email to fetch.
     */
    where: user_otp_emailWhereUniqueInput
  }

  /**
   * user_otp_email findFirst
   */
  export type user_otp_emailFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_otp_email
     */
    select?: user_otp_emailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_otp_email
     */
    omit?: user_otp_emailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_otp_emailInclude<ExtArgs> | null
    /**
     * Filter, which user_otp_email to fetch.
     */
    where?: user_otp_emailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_otp_emails to fetch.
     */
    orderBy?: user_otp_emailOrderByWithRelationInput | user_otp_emailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_otp_emails.
     */
    cursor?: user_otp_emailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_otp_emails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_otp_emails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_otp_emails.
     */
    distinct?: User_otp_emailScalarFieldEnum | User_otp_emailScalarFieldEnum[]
  }

  /**
   * user_otp_email findFirstOrThrow
   */
  export type user_otp_emailFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_otp_email
     */
    select?: user_otp_emailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_otp_email
     */
    omit?: user_otp_emailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_otp_emailInclude<ExtArgs> | null
    /**
     * Filter, which user_otp_email to fetch.
     */
    where?: user_otp_emailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_otp_emails to fetch.
     */
    orderBy?: user_otp_emailOrderByWithRelationInput | user_otp_emailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_otp_emails.
     */
    cursor?: user_otp_emailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_otp_emails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_otp_emails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_otp_emails.
     */
    distinct?: User_otp_emailScalarFieldEnum | User_otp_emailScalarFieldEnum[]
  }

  /**
   * user_otp_email findMany
   */
  export type user_otp_emailFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_otp_email
     */
    select?: user_otp_emailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_otp_email
     */
    omit?: user_otp_emailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_otp_emailInclude<ExtArgs> | null
    /**
     * Filter, which user_otp_emails to fetch.
     */
    where?: user_otp_emailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_otp_emails to fetch.
     */
    orderBy?: user_otp_emailOrderByWithRelationInput | user_otp_emailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_otp_emails.
     */
    cursor?: user_otp_emailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_otp_emails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_otp_emails.
     */
    skip?: number
    distinct?: User_otp_emailScalarFieldEnum | User_otp_emailScalarFieldEnum[]
  }

  /**
   * user_otp_email create
   */
  export type user_otp_emailCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_otp_email
     */
    select?: user_otp_emailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_otp_email
     */
    omit?: user_otp_emailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_otp_emailInclude<ExtArgs> | null
    /**
     * The data needed to create a user_otp_email.
     */
    data: XOR<user_otp_emailCreateInput, user_otp_emailUncheckedCreateInput>
  }

  /**
   * user_otp_email createMany
   */
  export type user_otp_emailCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_otp_emails.
     */
    data: user_otp_emailCreateManyInput | user_otp_emailCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_otp_email createManyAndReturn
   */
  export type user_otp_emailCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_otp_email
     */
    select?: user_otp_emailSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_otp_email
     */
    omit?: user_otp_emailOmit<ExtArgs> | null
    /**
     * The data used to create many user_otp_emails.
     */
    data: user_otp_emailCreateManyInput | user_otp_emailCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_otp_emailIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_otp_email update
   */
  export type user_otp_emailUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_otp_email
     */
    select?: user_otp_emailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_otp_email
     */
    omit?: user_otp_emailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_otp_emailInclude<ExtArgs> | null
    /**
     * The data needed to update a user_otp_email.
     */
    data: XOR<user_otp_emailUpdateInput, user_otp_emailUncheckedUpdateInput>
    /**
     * Choose, which user_otp_email to update.
     */
    where: user_otp_emailWhereUniqueInput
  }

  /**
   * user_otp_email updateMany
   */
  export type user_otp_emailUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_otp_emails.
     */
    data: XOR<user_otp_emailUpdateManyMutationInput, user_otp_emailUncheckedUpdateManyInput>
    /**
     * Filter which user_otp_emails to update
     */
    where?: user_otp_emailWhereInput
    /**
     * Limit how many user_otp_emails to update.
     */
    limit?: number
  }

  /**
   * user_otp_email updateManyAndReturn
   */
  export type user_otp_emailUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_otp_email
     */
    select?: user_otp_emailSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_otp_email
     */
    omit?: user_otp_emailOmit<ExtArgs> | null
    /**
     * The data used to update user_otp_emails.
     */
    data: XOR<user_otp_emailUpdateManyMutationInput, user_otp_emailUncheckedUpdateManyInput>
    /**
     * Filter which user_otp_emails to update
     */
    where?: user_otp_emailWhereInput
    /**
     * Limit how many user_otp_emails to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_otp_emailIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_otp_email upsert
   */
  export type user_otp_emailUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_otp_email
     */
    select?: user_otp_emailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_otp_email
     */
    omit?: user_otp_emailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_otp_emailInclude<ExtArgs> | null
    /**
     * The filter to search for the user_otp_email to update in case it exists.
     */
    where: user_otp_emailWhereUniqueInput
    /**
     * In case the user_otp_email found by the `where` argument doesn't exist, create a new user_otp_email with this data.
     */
    create: XOR<user_otp_emailCreateInput, user_otp_emailUncheckedCreateInput>
    /**
     * In case the user_otp_email was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_otp_emailUpdateInput, user_otp_emailUncheckedUpdateInput>
  }

  /**
   * user_otp_email delete
   */
  export type user_otp_emailDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_otp_email
     */
    select?: user_otp_emailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_otp_email
     */
    omit?: user_otp_emailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_otp_emailInclude<ExtArgs> | null
    /**
     * Filter which user_otp_email to delete.
     */
    where: user_otp_emailWhereUniqueInput
  }

  /**
   * user_otp_email deleteMany
   */
  export type user_otp_emailDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_otp_emails to delete
     */
    where?: user_otp_emailWhereInput
    /**
     * Limit how many user_otp_emails to delete.
     */
    limit?: number
  }

  /**
   * user_otp_email without action
   */
  export type user_otp_emailDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_otp_email
     */
    select?: user_otp_emailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_otp_email
     */
    omit?: user_otp_emailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_otp_emailInclude<ExtArgs> | null
  }


  /**
   * Model user_social_login
   */

  export type AggregateUser_social_login = {
    _count: User_social_loginCountAggregateOutputType | null
    _avg: User_social_loginAvgAggregateOutputType | null
    _sum: User_social_loginSumAggregateOutputType | null
    _min: User_social_loginMinAggregateOutputType | null
    _max: User_social_loginMaxAggregateOutputType | null
  }

  export type User_social_loginAvgAggregateOutputType = {
    user_id: Decimal | null
    social_login_provider_id: Decimal | null
  }

  export type User_social_loginSumAggregateOutputType = {
    user_id: Decimal | null
    social_login_provider_id: Decimal | null
  }

  export type User_social_loginMinAggregateOutputType = {
    social_user_id: string | null
    user_id: Decimal | null
    social_login_provider_id: Decimal | null
    social_user_name: string | null
    social_email: string | null
    social_email_verified: boolean | null
    create_date: Date | null
    modify_date: Date | null
  }

  export type User_social_loginMaxAggregateOutputType = {
    social_user_id: string | null
    user_id: Decimal | null
    social_login_provider_id: Decimal | null
    social_user_name: string | null
    social_email: string | null
    social_email_verified: boolean | null
    create_date: Date | null
    modify_date: Date | null
  }

  export type User_social_loginCountAggregateOutputType = {
    social_user_id: number
    user_id: number
    social_login_provider_id: number
    social_user_name: number
    social_email: number
    social_email_verified: number
    create_date: number
    modify_date: number
    _all: number
  }


  export type User_social_loginAvgAggregateInputType = {
    user_id?: true
    social_login_provider_id?: true
  }

  export type User_social_loginSumAggregateInputType = {
    user_id?: true
    social_login_provider_id?: true
  }

  export type User_social_loginMinAggregateInputType = {
    social_user_id?: true
    user_id?: true
    social_login_provider_id?: true
    social_user_name?: true
    social_email?: true
    social_email_verified?: true
    create_date?: true
    modify_date?: true
  }

  export type User_social_loginMaxAggregateInputType = {
    social_user_id?: true
    user_id?: true
    social_login_provider_id?: true
    social_user_name?: true
    social_email?: true
    social_email_verified?: true
    create_date?: true
    modify_date?: true
  }

  export type User_social_loginCountAggregateInputType = {
    social_user_id?: true
    user_id?: true
    social_login_provider_id?: true
    social_user_name?: true
    social_email?: true
    social_email_verified?: true
    create_date?: true
    modify_date?: true
    _all?: true
  }

  export type User_social_loginAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_social_login to aggregate.
     */
    where?: user_social_loginWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_social_logins to fetch.
     */
    orderBy?: user_social_loginOrderByWithRelationInput | user_social_loginOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_social_loginWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_social_logins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_social_logins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_social_logins
    **/
    _count?: true | User_social_loginCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_social_loginAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_social_loginSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_social_loginMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_social_loginMaxAggregateInputType
  }

  export type GetUser_social_loginAggregateType<T extends User_social_loginAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_social_login]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_social_login[P]>
      : GetScalarType<T[P], AggregateUser_social_login[P]>
  }




  export type user_social_loginGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_social_loginWhereInput
    orderBy?: user_social_loginOrderByWithAggregationInput | user_social_loginOrderByWithAggregationInput[]
    by: User_social_loginScalarFieldEnum[] | User_social_loginScalarFieldEnum
    having?: user_social_loginScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_social_loginCountAggregateInputType | true
    _avg?: User_social_loginAvgAggregateInputType
    _sum?: User_social_loginSumAggregateInputType
    _min?: User_social_loginMinAggregateInputType
    _max?: User_social_loginMaxAggregateInputType
  }

  export type User_social_loginGroupByOutputType = {
    social_user_id: string | null
    user_id: Decimal
    social_login_provider_id: Decimal
    social_user_name: string
    social_email: string | null
    social_email_verified: boolean | null
    create_date: Date | null
    modify_date: Date | null
    _count: User_social_loginCountAggregateOutputType | null
    _avg: User_social_loginAvgAggregateOutputType | null
    _sum: User_social_loginSumAggregateOutputType | null
    _min: User_social_loginMinAggregateOutputType | null
    _max: User_social_loginMaxAggregateOutputType | null
  }

  type GetUser_social_loginGroupByPayload<T extends user_social_loginGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_social_loginGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_social_loginGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_social_loginGroupByOutputType[P]>
            : GetScalarType<T[P], User_social_loginGroupByOutputType[P]>
        }
      >
    >


  export type user_social_loginSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    social_user_id?: boolean
    user_id?: boolean
    social_login_provider_id?: boolean
    social_user_name?: boolean
    social_email?: boolean
    social_email_verified?: boolean
    create_date?: boolean
    modify_date?: boolean
    social_login_provider?: boolean | social_login_providerDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_social_login"]>

  export type user_social_loginSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    social_user_id?: boolean
    user_id?: boolean
    social_login_provider_id?: boolean
    social_user_name?: boolean
    social_email?: boolean
    social_email_verified?: boolean
    create_date?: boolean
    modify_date?: boolean
    social_login_provider?: boolean | social_login_providerDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_social_login"]>

  export type user_social_loginSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    social_user_id?: boolean
    user_id?: boolean
    social_login_provider_id?: boolean
    social_user_name?: boolean
    social_email?: boolean
    social_email_verified?: boolean
    create_date?: boolean
    modify_date?: boolean
    social_login_provider?: boolean | social_login_providerDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_social_login"]>

  export type user_social_loginSelectScalar = {
    social_user_id?: boolean
    user_id?: boolean
    social_login_provider_id?: boolean
    social_user_name?: boolean
    social_email?: boolean
    social_email_verified?: boolean
    create_date?: boolean
    modify_date?: boolean
  }

  export type user_social_loginOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"social_user_id" | "user_id" | "social_login_provider_id" | "social_user_name" | "social_email" | "social_email_verified" | "create_date" | "modify_date", ExtArgs["result"]["user_social_login"]>
  export type user_social_loginInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    social_login_provider?: boolean | social_login_providerDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type user_social_loginIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    social_login_provider?: boolean | social_login_providerDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type user_social_loginIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    social_login_provider?: boolean | social_login_providerDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $user_social_loginPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_social_login"
    objects: {
      social_login_provider: Prisma.$social_login_providerPayload<ExtArgs>
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      social_user_id: string | null
      user_id: Prisma.Decimal
      social_login_provider_id: Prisma.Decimal
      social_user_name: string
      social_email: string | null
      social_email_verified: boolean | null
      create_date: Date | null
      modify_date: Date | null
    }, ExtArgs["result"]["user_social_login"]>
    composites: {}
  }

  type user_social_loginGetPayload<S extends boolean | null | undefined | user_social_loginDefaultArgs> = $Result.GetResult<Prisma.$user_social_loginPayload, S>

  type user_social_loginCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_social_loginFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_social_loginCountAggregateInputType | true
    }

  export interface user_social_loginDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_social_login'], meta: { name: 'user_social_login' } }
    /**
     * Find zero or one User_social_login that matches the filter.
     * @param {user_social_loginFindUniqueArgs} args - Arguments to find a User_social_login
     * @example
     * // Get one User_social_login
     * const user_social_login = await prisma.user_social_login.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_social_loginFindUniqueArgs>(args: SelectSubset<T, user_social_loginFindUniqueArgs<ExtArgs>>): Prisma__user_social_loginClient<$Result.GetResult<Prisma.$user_social_loginPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_social_login that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_social_loginFindUniqueOrThrowArgs} args - Arguments to find a User_social_login
     * @example
     * // Get one User_social_login
     * const user_social_login = await prisma.user_social_login.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_social_loginFindUniqueOrThrowArgs>(args: SelectSubset<T, user_social_loginFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_social_loginClient<$Result.GetResult<Prisma.$user_social_loginPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_social_login that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_social_loginFindFirstArgs} args - Arguments to find a User_social_login
     * @example
     * // Get one User_social_login
     * const user_social_login = await prisma.user_social_login.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_social_loginFindFirstArgs>(args?: SelectSubset<T, user_social_loginFindFirstArgs<ExtArgs>>): Prisma__user_social_loginClient<$Result.GetResult<Prisma.$user_social_loginPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_social_login that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_social_loginFindFirstOrThrowArgs} args - Arguments to find a User_social_login
     * @example
     * // Get one User_social_login
     * const user_social_login = await prisma.user_social_login.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_social_loginFindFirstOrThrowArgs>(args?: SelectSubset<T, user_social_loginFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_social_loginClient<$Result.GetResult<Prisma.$user_social_loginPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_social_logins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_social_loginFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_social_logins
     * const user_social_logins = await prisma.user_social_login.findMany()
     * 
     * // Get first 10 User_social_logins
     * const user_social_logins = await prisma.user_social_login.findMany({ take: 10 })
     * 
     * // Only select the `social_user_id`
     * const user_social_loginWithSocial_user_idOnly = await prisma.user_social_login.findMany({ select: { social_user_id: true } })
     * 
     */
    findMany<T extends user_social_loginFindManyArgs>(args?: SelectSubset<T, user_social_loginFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_social_loginPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_social_login.
     * @param {user_social_loginCreateArgs} args - Arguments to create a User_social_login.
     * @example
     * // Create one User_social_login
     * const User_social_login = await prisma.user_social_login.create({
     *   data: {
     *     // ... data to create a User_social_login
     *   }
     * })
     * 
     */
    create<T extends user_social_loginCreateArgs>(args: SelectSubset<T, user_social_loginCreateArgs<ExtArgs>>): Prisma__user_social_loginClient<$Result.GetResult<Prisma.$user_social_loginPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_social_logins.
     * @param {user_social_loginCreateManyArgs} args - Arguments to create many User_social_logins.
     * @example
     * // Create many User_social_logins
     * const user_social_login = await prisma.user_social_login.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_social_loginCreateManyArgs>(args?: SelectSubset<T, user_social_loginCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_social_logins and returns the data saved in the database.
     * @param {user_social_loginCreateManyAndReturnArgs} args - Arguments to create many User_social_logins.
     * @example
     * // Create many User_social_logins
     * const user_social_login = await prisma.user_social_login.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_social_logins and only return the `social_user_id`
     * const user_social_loginWithSocial_user_idOnly = await prisma.user_social_login.createManyAndReturn({
     *   select: { social_user_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_social_loginCreateManyAndReturnArgs>(args?: SelectSubset<T, user_social_loginCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_social_loginPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_social_login.
     * @param {user_social_loginDeleteArgs} args - Arguments to delete one User_social_login.
     * @example
     * // Delete one User_social_login
     * const User_social_login = await prisma.user_social_login.delete({
     *   where: {
     *     // ... filter to delete one User_social_login
     *   }
     * })
     * 
     */
    delete<T extends user_social_loginDeleteArgs>(args: SelectSubset<T, user_social_loginDeleteArgs<ExtArgs>>): Prisma__user_social_loginClient<$Result.GetResult<Prisma.$user_social_loginPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_social_login.
     * @param {user_social_loginUpdateArgs} args - Arguments to update one User_social_login.
     * @example
     * // Update one User_social_login
     * const user_social_login = await prisma.user_social_login.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_social_loginUpdateArgs>(args: SelectSubset<T, user_social_loginUpdateArgs<ExtArgs>>): Prisma__user_social_loginClient<$Result.GetResult<Prisma.$user_social_loginPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_social_logins.
     * @param {user_social_loginDeleteManyArgs} args - Arguments to filter User_social_logins to delete.
     * @example
     * // Delete a few User_social_logins
     * const { count } = await prisma.user_social_login.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_social_loginDeleteManyArgs>(args?: SelectSubset<T, user_social_loginDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_social_logins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_social_loginUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_social_logins
     * const user_social_login = await prisma.user_social_login.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_social_loginUpdateManyArgs>(args: SelectSubset<T, user_social_loginUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_social_logins and returns the data updated in the database.
     * @param {user_social_loginUpdateManyAndReturnArgs} args - Arguments to update many User_social_logins.
     * @example
     * // Update many User_social_logins
     * const user_social_login = await prisma.user_social_login.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_social_logins and only return the `social_user_id`
     * const user_social_loginWithSocial_user_idOnly = await prisma.user_social_login.updateManyAndReturn({
     *   select: { social_user_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_social_loginUpdateManyAndReturnArgs>(args: SelectSubset<T, user_social_loginUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_social_loginPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_social_login.
     * @param {user_social_loginUpsertArgs} args - Arguments to update or create a User_social_login.
     * @example
     * // Update or create a User_social_login
     * const user_social_login = await prisma.user_social_login.upsert({
     *   create: {
     *     // ... data to create a User_social_login
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_social_login we want to update
     *   }
     * })
     */
    upsert<T extends user_social_loginUpsertArgs>(args: SelectSubset<T, user_social_loginUpsertArgs<ExtArgs>>): Prisma__user_social_loginClient<$Result.GetResult<Prisma.$user_social_loginPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_social_logins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_social_loginCountArgs} args - Arguments to filter User_social_logins to count.
     * @example
     * // Count the number of User_social_logins
     * const count = await prisma.user_social_login.count({
     *   where: {
     *     // ... the filter for the User_social_logins we want to count
     *   }
     * })
    **/
    count<T extends user_social_loginCountArgs>(
      args?: Subset<T, user_social_loginCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_social_loginCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_social_login.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_social_loginAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_social_loginAggregateArgs>(args: Subset<T, User_social_loginAggregateArgs>): Prisma.PrismaPromise<GetUser_social_loginAggregateType<T>>

    /**
     * Group by User_social_login.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_social_loginGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_social_loginGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_social_loginGroupByArgs['orderBy'] }
        : { orderBy?: user_social_loginGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_social_loginGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_social_loginGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_social_login model
   */
  readonly fields: user_social_loginFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_social_login.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_social_loginClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    social_login_provider<T extends social_login_providerDefaultArgs<ExtArgs> = {}>(args?: Subset<T, social_login_providerDefaultArgs<ExtArgs>>): Prisma__social_login_providerClient<$Result.GetResult<Prisma.$social_login_providerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_social_login model
   */
  interface user_social_loginFieldRefs {
    readonly social_user_id: FieldRef<"user_social_login", 'String'>
    readonly user_id: FieldRef<"user_social_login", 'Decimal'>
    readonly social_login_provider_id: FieldRef<"user_social_login", 'Decimal'>
    readonly social_user_name: FieldRef<"user_social_login", 'String'>
    readonly social_email: FieldRef<"user_social_login", 'String'>
    readonly social_email_verified: FieldRef<"user_social_login", 'Boolean'>
    readonly create_date: FieldRef<"user_social_login", 'DateTime'>
    readonly modify_date: FieldRef<"user_social_login", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_social_login findUnique
   */
  export type user_social_loginFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_social_login
     */
    select?: user_social_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_social_login
     */
    omit?: user_social_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_social_loginInclude<ExtArgs> | null
    /**
     * Filter, which user_social_login to fetch.
     */
    where: user_social_loginWhereUniqueInput
  }

  /**
   * user_social_login findUniqueOrThrow
   */
  export type user_social_loginFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_social_login
     */
    select?: user_social_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_social_login
     */
    omit?: user_social_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_social_loginInclude<ExtArgs> | null
    /**
     * Filter, which user_social_login to fetch.
     */
    where: user_social_loginWhereUniqueInput
  }

  /**
   * user_social_login findFirst
   */
  export type user_social_loginFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_social_login
     */
    select?: user_social_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_social_login
     */
    omit?: user_social_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_social_loginInclude<ExtArgs> | null
    /**
     * Filter, which user_social_login to fetch.
     */
    where?: user_social_loginWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_social_logins to fetch.
     */
    orderBy?: user_social_loginOrderByWithRelationInput | user_social_loginOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_social_logins.
     */
    cursor?: user_social_loginWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_social_logins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_social_logins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_social_logins.
     */
    distinct?: User_social_loginScalarFieldEnum | User_social_loginScalarFieldEnum[]
  }

  /**
   * user_social_login findFirstOrThrow
   */
  export type user_social_loginFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_social_login
     */
    select?: user_social_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_social_login
     */
    omit?: user_social_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_social_loginInclude<ExtArgs> | null
    /**
     * Filter, which user_social_login to fetch.
     */
    where?: user_social_loginWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_social_logins to fetch.
     */
    orderBy?: user_social_loginOrderByWithRelationInput | user_social_loginOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_social_logins.
     */
    cursor?: user_social_loginWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_social_logins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_social_logins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_social_logins.
     */
    distinct?: User_social_loginScalarFieldEnum | User_social_loginScalarFieldEnum[]
  }

  /**
   * user_social_login findMany
   */
  export type user_social_loginFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_social_login
     */
    select?: user_social_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_social_login
     */
    omit?: user_social_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_social_loginInclude<ExtArgs> | null
    /**
     * Filter, which user_social_logins to fetch.
     */
    where?: user_social_loginWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_social_logins to fetch.
     */
    orderBy?: user_social_loginOrderByWithRelationInput | user_social_loginOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_social_logins.
     */
    cursor?: user_social_loginWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_social_logins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_social_logins.
     */
    skip?: number
    distinct?: User_social_loginScalarFieldEnum | User_social_loginScalarFieldEnum[]
  }

  /**
   * user_social_login create
   */
  export type user_social_loginCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_social_login
     */
    select?: user_social_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_social_login
     */
    omit?: user_social_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_social_loginInclude<ExtArgs> | null
    /**
     * The data needed to create a user_social_login.
     */
    data: XOR<user_social_loginCreateInput, user_social_loginUncheckedCreateInput>
  }

  /**
   * user_social_login createMany
   */
  export type user_social_loginCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_social_logins.
     */
    data: user_social_loginCreateManyInput | user_social_loginCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_social_login createManyAndReturn
   */
  export type user_social_loginCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_social_login
     */
    select?: user_social_loginSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_social_login
     */
    omit?: user_social_loginOmit<ExtArgs> | null
    /**
     * The data used to create many user_social_logins.
     */
    data: user_social_loginCreateManyInput | user_social_loginCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_social_loginIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_social_login update
   */
  export type user_social_loginUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_social_login
     */
    select?: user_social_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_social_login
     */
    omit?: user_social_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_social_loginInclude<ExtArgs> | null
    /**
     * The data needed to update a user_social_login.
     */
    data: XOR<user_social_loginUpdateInput, user_social_loginUncheckedUpdateInput>
    /**
     * Choose, which user_social_login to update.
     */
    where: user_social_loginWhereUniqueInput
  }

  /**
   * user_social_login updateMany
   */
  export type user_social_loginUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_social_logins.
     */
    data: XOR<user_social_loginUpdateManyMutationInput, user_social_loginUncheckedUpdateManyInput>
    /**
     * Filter which user_social_logins to update
     */
    where?: user_social_loginWhereInput
    /**
     * Limit how many user_social_logins to update.
     */
    limit?: number
  }

  /**
   * user_social_login updateManyAndReturn
   */
  export type user_social_loginUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_social_login
     */
    select?: user_social_loginSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_social_login
     */
    omit?: user_social_loginOmit<ExtArgs> | null
    /**
     * The data used to update user_social_logins.
     */
    data: XOR<user_social_loginUpdateManyMutationInput, user_social_loginUncheckedUpdateManyInput>
    /**
     * Filter which user_social_logins to update
     */
    where?: user_social_loginWhereInput
    /**
     * Limit how many user_social_logins to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_social_loginIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_social_login upsert
   */
  export type user_social_loginUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_social_login
     */
    select?: user_social_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_social_login
     */
    omit?: user_social_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_social_loginInclude<ExtArgs> | null
    /**
     * The filter to search for the user_social_login to update in case it exists.
     */
    where: user_social_loginWhereUniqueInput
    /**
     * In case the user_social_login found by the `where` argument doesn't exist, create a new user_social_login with this data.
     */
    create: XOR<user_social_loginCreateInput, user_social_loginUncheckedCreateInput>
    /**
     * In case the user_social_login was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_social_loginUpdateInput, user_social_loginUncheckedUpdateInput>
  }

  /**
   * user_social_login delete
   */
  export type user_social_loginDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_social_login
     */
    select?: user_social_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_social_login
     */
    omit?: user_social_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_social_loginInclude<ExtArgs> | null
    /**
     * Filter which user_social_login to delete.
     */
    where: user_social_loginWhereUniqueInput
  }

  /**
   * user_social_login deleteMany
   */
  export type user_social_loginDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_social_logins to delete
     */
    where?: user_social_loginWhereInput
    /**
     * Limit how many user_social_logins to delete.
     */
    limit?: number
  }

  /**
   * user_social_login without action
   */
  export type user_social_loginDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_social_login
     */
    select?: user_social_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_social_login
     */
    omit?: user_social_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_social_loginInclude<ExtArgs> | null
  }


  /**
   * Model user_sso_login
   */

  export type AggregateUser_sso_login = {
    _count: User_sso_loginCountAggregateOutputType | null
    _avg: User_sso_loginAvgAggregateOutputType | null
    _sum: User_sso_loginSumAggregateOutputType | null
    _min: User_sso_loginMinAggregateOutputType | null
    _max: User_sso_loginMaxAggregateOutputType | null
  }

  export type User_sso_loginAvgAggregateOutputType = {
    user_id: Decimal | null
    provider_id: Decimal | null
  }

  export type User_sso_loginSumAggregateOutputType = {
    user_id: Decimal | null
    provider_id: Decimal | null
  }

  export type User_sso_loginMinAggregateOutputType = {
    user_id: Decimal | null
    sso_user_id: string | null
    sso_user_name: string | null
    provider_id: Decimal | null
    email: string | null
  }

  export type User_sso_loginMaxAggregateOutputType = {
    user_id: Decimal | null
    sso_user_id: string | null
    sso_user_name: string | null
    provider_id: Decimal | null
    email: string | null
  }

  export type User_sso_loginCountAggregateOutputType = {
    user_id: number
    sso_user_id: number
    sso_user_name: number
    provider_id: number
    email: number
    _all: number
  }


  export type User_sso_loginAvgAggregateInputType = {
    user_id?: true
    provider_id?: true
  }

  export type User_sso_loginSumAggregateInputType = {
    user_id?: true
    provider_id?: true
  }

  export type User_sso_loginMinAggregateInputType = {
    user_id?: true
    sso_user_id?: true
    sso_user_name?: true
    provider_id?: true
    email?: true
  }

  export type User_sso_loginMaxAggregateInputType = {
    user_id?: true
    sso_user_id?: true
    sso_user_name?: true
    provider_id?: true
    email?: true
  }

  export type User_sso_loginCountAggregateInputType = {
    user_id?: true
    sso_user_id?: true
    sso_user_name?: true
    provider_id?: true
    email?: true
    _all?: true
  }

  export type User_sso_loginAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_sso_login to aggregate.
     */
    where?: user_sso_loginWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_sso_logins to fetch.
     */
    orderBy?: user_sso_loginOrderByWithRelationInput | user_sso_loginOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_sso_loginWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_sso_logins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_sso_logins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_sso_logins
    **/
    _count?: true | User_sso_loginCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_sso_loginAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_sso_loginSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_sso_loginMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_sso_loginMaxAggregateInputType
  }

  export type GetUser_sso_loginAggregateType<T extends User_sso_loginAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_sso_login]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_sso_login[P]>
      : GetScalarType<T[P], AggregateUser_sso_login[P]>
  }




  export type user_sso_loginGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_sso_loginWhereInput
    orderBy?: user_sso_loginOrderByWithAggregationInput | user_sso_loginOrderByWithAggregationInput[]
    by: User_sso_loginScalarFieldEnum[] | User_sso_loginScalarFieldEnum
    having?: user_sso_loginScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_sso_loginCountAggregateInputType | true
    _avg?: User_sso_loginAvgAggregateInputType
    _sum?: User_sso_loginSumAggregateInputType
    _min?: User_sso_loginMinAggregateInputType
    _max?: User_sso_loginMaxAggregateInputType
  }

  export type User_sso_loginGroupByOutputType = {
    user_id: Decimal
    sso_user_id: string
    sso_user_name: string | null
    provider_id: Decimal
    email: string | null
    _count: User_sso_loginCountAggregateOutputType | null
    _avg: User_sso_loginAvgAggregateOutputType | null
    _sum: User_sso_loginSumAggregateOutputType | null
    _min: User_sso_loginMinAggregateOutputType | null
    _max: User_sso_loginMaxAggregateOutputType | null
  }

  type GetUser_sso_loginGroupByPayload<T extends user_sso_loginGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_sso_loginGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_sso_loginGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_sso_loginGroupByOutputType[P]>
            : GetScalarType<T[P], User_sso_loginGroupByOutputType[P]>
        }
      >
    >


  export type user_sso_loginSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    sso_user_id?: boolean
    sso_user_name?: boolean
    provider_id?: boolean
    email?: boolean
    sso_login_provider?: boolean | sso_login_providerDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_sso_login"]>

  export type user_sso_loginSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    sso_user_id?: boolean
    sso_user_name?: boolean
    provider_id?: boolean
    email?: boolean
    sso_login_provider?: boolean | sso_login_providerDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_sso_login"]>

  export type user_sso_loginSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    sso_user_id?: boolean
    sso_user_name?: boolean
    provider_id?: boolean
    email?: boolean
    sso_login_provider?: boolean | sso_login_providerDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_sso_login"]>

  export type user_sso_loginSelectScalar = {
    user_id?: boolean
    sso_user_id?: boolean
    sso_user_name?: boolean
    provider_id?: boolean
    email?: boolean
  }

  export type user_sso_loginOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"user_id" | "sso_user_id" | "sso_user_name" | "provider_id" | "email", ExtArgs["result"]["user_sso_login"]>
  export type user_sso_loginInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sso_login_provider?: boolean | sso_login_providerDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type user_sso_loginIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sso_login_provider?: boolean | sso_login_providerDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type user_sso_loginIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sso_login_provider?: boolean | sso_login_providerDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $user_sso_loginPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_sso_login"
    objects: {
      sso_login_provider: Prisma.$sso_login_providerPayload<ExtArgs>
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      user_id: Prisma.Decimal
      sso_user_id: string
      sso_user_name: string | null
      provider_id: Prisma.Decimal
      email: string | null
    }, ExtArgs["result"]["user_sso_login"]>
    composites: {}
  }

  type user_sso_loginGetPayload<S extends boolean | null | undefined | user_sso_loginDefaultArgs> = $Result.GetResult<Prisma.$user_sso_loginPayload, S>

  type user_sso_loginCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_sso_loginFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_sso_loginCountAggregateInputType | true
    }

  export interface user_sso_loginDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_sso_login'], meta: { name: 'user_sso_login' } }
    /**
     * Find zero or one User_sso_login that matches the filter.
     * @param {user_sso_loginFindUniqueArgs} args - Arguments to find a User_sso_login
     * @example
     * // Get one User_sso_login
     * const user_sso_login = await prisma.user_sso_login.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_sso_loginFindUniqueArgs>(args: SelectSubset<T, user_sso_loginFindUniqueArgs<ExtArgs>>): Prisma__user_sso_loginClient<$Result.GetResult<Prisma.$user_sso_loginPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_sso_login that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_sso_loginFindUniqueOrThrowArgs} args - Arguments to find a User_sso_login
     * @example
     * // Get one User_sso_login
     * const user_sso_login = await prisma.user_sso_login.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_sso_loginFindUniqueOrThrowArgs>(args: SelectSubset<T, user_sso_loginFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_sso_loginClient<$Result.GetResult<Prisma.$user_sso_loginPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_sso_login that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_sso_loginFindFirstArgs} args - Arguments to find a User_sso_login
     * @example
     * // Get one User_sso_login
     * const user_sso_login = await prisma.user_sso_login.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_sso_loginFindFirstArgs>(args?: SelectSubset<T, user_sso_loginFindFirstArgs<ExtArgs>>): Prisma__user_sso_loginClient<$Result.GetResult<Prisma.$user_sso_loginPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_sso_login that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_sso_loginFindFirstOrThrowArgs} args - Arguments to find a User_sso_login
     * @example
     * // Get one User_sso_login
     * const user_sso_login = await prisma.user_sso_login.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_sso_loginFindFirstOrThrowArgs>(args?: SelectSubset<T, user_sso_loginFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_sso_loginClient<$Result.GetResult<Prisma.$user_sso_loginPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_sso_logins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_sso_loginFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_sso_logins
     * const user_sso_logins = await prisma.user_sso_login.findMany()
     * 
     * // Get first 10 User_sso_logins
     * const user_sso_logins = await prisma.user_sso_login.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const user_sso_loginWithUser_idOnly = await prisma.user_sso_login.findMany({ select: { user_id: true } })
     * 
     */
    findMany<T extends user_sso_loginFindManyArgs>(args?: SelectSubset<T, user_sso_loginFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_sso_loginPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_sso_login.
     * @param {user_sso_loginCreateArgs} args - Arguments to create a User_sso_login.
     * @example
     * // Create one User_sso_login
     * const User_sso_login = await prisma.user_sso_login.create({
     *   data: {
     *     // ... data to create a User_sso_login
     *   }
     * })
     * 
     */
    create<T extends user_sso_loginCreateArgs>(args: SelectSubset<T, user_sso_loginCreateArgs<ExtArgs>>): Prisma__user_sso_loginClient<$Result.GetResult<Prisma.$user_sso_loginPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_sso_logins.
     * @param {user_sso_loginCreateManyArgs} args - Arguments to create many User_sso_logins.
     * @example
     * // Create many User_sso_logins
     * const user_sso_login = await prisma.user_sso_login.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_sso_loginCreateManyArgs>(args?: SelectSubset<T, user_sso_loginCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_sso_logins and returns the data saved in the database.
     * @param {user_sso_loginCreateManyAndReturnArgs} args - Arguments to create many User_sso_logins.
     * @example
     * // Create many User_sso_logins
     * const user_sso_login = await prisma.user_sso_login.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_sso_logins and only return the `user_id`
     * const user_sso_loginWithUser_idOnly = await prisma.user_sso_login.createManyAndReturn({
     *   select: { user_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_sso_loginCreateManyAndReturnArgs>(args?: SelectSubset<T, user_sso_loginCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_sso_loginPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_sso_login.
     * @param {user_sso_loginDeleteArgs} args - Arguments to delete one User_sso_login.
     * @example
     * // Delete one User_sso_login
     * const User_sso_login = await prisma.user_sso_login.delete({
     *   where: {
     *     // ... filter to delete one User_sso_login
     *   }
     * })
     * 
     */
    delete<T extends user_sso_loginDeleteArgs>(args: SelectSubset<T, user_sso_loginDeleteArgs<ExtArgs>>): Prisma__user_sso_loginClient<$Result.GetResult<Prisma.$user_sso_loginPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_sso_login.
     * @param {user_sso_loginUpdateArgs} args - Arguments to update one User_sso_login.
     * @example
     * // Update one User_sso_login
     * const user_sso_login = await prisma.user_sso_login.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_sso_loginUpdateArgs>(args: SelectSubset<T, user_sso_loginUpdateArgs<ExtArgs>>): Prisma__user_sso_loginClient<$Result.GetResult<Prisma.$user_sso_loginPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_sso_logins.
     * @param {user_sso_loginDeleteManyArgs} args - Arguments to filter User_sso_logins to delete.
     * @example
     * // Delete a few User_sso_logins
     * const { count } = await prisma.user_sso_login.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_sso_loginDeleteManyArgs>(args?: SelectSubset<T, user_sso_loginDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_sso_logins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_sso_loginUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_sso_logins
     * const user_sso_login = await prisma.user_sso_login.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_sso_loginUpdateManyArgs>(args: SelectSubset<T, user_sso_loginUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_sso_logins and returns the data updated in the database.
     * @param {user_sso_loginUpdateManyAndReturnArgs} args - Arguments to update many User_sso_logins.
     * @example
     * // Update many User_sso_logins
     * const user_sso_login = await prisma.user_sso_login.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_sso_logins and only return the `user_id`
     * const user_sso_loginWithUser_idOnly = await prisma.user_sso_login.updateManyAndReturn({
     *   select: { user_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_sso_loginUpdateManyAndReturnArgs>(args: SelectSubset<T, user_sso_loginUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_sso_loginPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_sso_login.
     * @param {user_sso_loginUpsertArgs} args - Arguments to update or create a User_sso_login.
     * @example
     * // Update or create a User_sso_login
     * const user_sso_login = await prisma.user_sso_login.upsert({
     *   create: {
     *     // ... data to create a User_sso_login
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_sso_login we want to update
     *   }
     * })
     */
    upsert<T extends user_sso_loginUpsertArgs>(args: SelectSubset<T, user_sso_loginUpsertArgs<ExtArgs>>): Prisma__user_sso_loginClient<$Result.GetResult<Prisma.$user_sso_loginPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_sso_logins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_sso_loginCountArgs} args - Arguments to filter User_sso_logins to count.
     * @example
     * // Count the number of User_sso_logins
     * const count = await prisma.user_sso_login.count({
     *   where: {
     *     // ... the filter for the User_sso_logins we want to count
     *   }
     * })
    **/
    count<T extends user_sso_loginCountArgs>(
      args?: Subset<T, user_sso_loginCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_sso_loginCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_sso_login.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_sso_loginAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_sso_loginAggregateArgs>(args: Subset<T, User_sso_loginAggregateArgs>): Prisma.PrismaPromise<GetUser_sso_loginAggregateType<T>>

    /**
     * Group by User_sso_login.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_sso_loginGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_sso_loginGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_sso_loginGroupByArgs['orderBy'] }
        : { orderBy?: user_sso_loginGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_sso_loginGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_sso_loginGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_sso_login model
   */
  readonly fields: user_sso_loginFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_sso_login.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_sso_loginClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sso_login_provider<T extends sso_login_providerDefaultArgs<ExtArgs> = {}>(args?: Subset<T, sso_login_providerDefaultArgs<ExtArgs>>): Prisma__sso_login_providerClient<$Result.GetResult<Prisma.$sso_login_providerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_sso_login model
   */
  interface user_sso_loginFieldRefs {
    readonly user_id: FieldRef<"user_sso_login", 'Decimal'>
    readonly sso_user_id: FieldRef<"user_sso_login", 'String'>
    readonly sso_user_name: FieldRef<"user_sso_login", 'String'>
    readonly provider_id: FieldRef<"user_sso_login", 'Decimal'>
    readonly email: FieldRef<"user_sso_login", 'String'>
  }
    

  // Custom InputTypes
  /**
   * user_sso_login findUnique
   */
  export type user_sso_loginFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sso_login
     */
    select?: user_sso_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sso_login
     */
    omit?: user_sso_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sso_loginInclude<ExtArgs> | null
    /**
     * Filter, which user_sso_login to fetch.
     */
    where: user_sso_loginWhereUniqueInput
  }

  /**
   * user_sso_login findUniqueOrThrow
   */
  export type user_sso_loginFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sso_login
     */
    select?: user_sso_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sso_login
     */
    omit?: user_sso_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sso_loginInclude<ExtArgs> | null
    /**
     * Filter, which user_sso_login to fetch.
     */
    where: user_sso_loginWhereUniqueInput
  }

  /**
   * user_sso_login findFirst
   */
  export type user_sso_loginFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sso_login
     */
    select?: user_sso_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sso_login
     */
    omit?: user_sso_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sso_loginInclude<ExtArgs> | null
    /**
     * Filter, which user_sso_login to fetch.
     */
    where?: user_sso_loginWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_sso_logins to fetch.
     */
    orderBy?: user_sso_loginOrderByWithRelationInput | user_sso_loginOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_sso_logins.
     */
    cursor?: user_sso_loginWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_sso_logins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_sso_logins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_sso_logins.
     */
    distinct?: User_sso_loginScalarFieldEnum | User_sso_loginScalarFieldEnum[]
  }

  /**
   * user_sso_login findFirstOrThrow
   */
  export type user_sso_loginFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sso_login
     */
    select?: user_sso_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sso_login
     */
    omit?: user_sso_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sso_loginInclude<ExtArgs> | null
    /**
     * Filter, which user_sso_login to fetch.
     */
    where?: user_sso_loginWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_sso_logins to fetch.
     */
    orderBy?: user_sso_loginOrderByWithRelationInput | user_sso_loginOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_sso_logins.
     */
    cursor?: user_sso_loginWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_sso_logins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_sso_logins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_sso_logins.
     */
    distinct?: User_sso_loginScalarFieldEnum | User_sso_loginScalarFieldEnum[]
  }

  /**
   * user_sso_login findMany
   */
  export type user_sso_loginFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sso_login
     */
    select?: user_sso_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sso_login
     */
    omit?: user_sso_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sso_loginInclude<ExtArgs> | null
    /**
     * Filter, which user_sso_logins to fetch.
     */
    where?: user_sso_loginWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_sso_logins to fetch.
     */
    orderBy?: user_sso_loginOrderByWithRelationInput | user_sso_loginOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_sso_logins.
     */
    cursor?: user_sso_loginWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_sso_logins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_sso_logins.
     */
    skip?: number
    distinct?: User_sso_loginScalarFieldEnum | User_sso_loginScalarFieldEnum[]
  }

  /**
   * user_sso_login create
   */
  export type user_sso_loginCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sso_login
     */
    select?: user_sso_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sso_login
     */
    omit?: user_sso_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sso_loginInclude<ExtArgs> | null
    /**
     * The data needed to create a user_sso_login.
     */
    data: XOR<user_sso_loginCreateInput, user_sso_loginUncheckedCreateInput>
  }

  /**
   * user_sso_login createMany
   */
  export type user_sso_loginCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_sso_logins.
     */
    data: user_sso_loginCreateManyInput | user_sso_loginCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_sso_login createManyAndReturn
   */
  export type user_sso_loginCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sso_login
     */
    select?: user_sso_loginSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_sso_login
     */
    omit?: user_sso_loginOmit<ExtArgs> | null
    /**
     * The data used to create many user_sso_logins.
     */
    data: user_sso_loginCreateManyInput | user_sso_loginCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sso_loginIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_sso_login update
   */
  export type user_sso_loginUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sso_login
     */
    select?: user_sso_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sso_login
     */
    omit?: user_sso_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sso_loginInclude<ExtArgs> | null
    /**
     * The data needed to update a user_sso_login.
     */
    data: XOR<user_sso_loginUpdateInput, user_sso_loginUncheckedUpdateInput>
    /**
     * Choose, which user_sso_login to update.
     */
    where: user_sso_loginWhereUniqueInput
  }

  /**
   * user_sso_login updateMany
   */
  export type user_sso_loginUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_sso_logins.
     */
    data: XOR<user_sso_loginUpdateManyMutationInput, user_sso_loginUncheckedUpdateManyInput>
    /**
     * Filter which user_sso_logins to update
     */
    where?: user_sso_loginWhereInput
    /**
     * Limit how many user_sso_logins to update.
     */
    limit?: number
  }

  /**
   * user_sso_login updateManyAndReturn
   */
  export type user_sso_loginUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sso_login
     */
    select?: user_sso_loginSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_sso_login
     */
    omit?: user_sso_loginOmit<ExtArgs> | null
    /**
     * The data used to update user_sso_logins.
     */
    data: XOR<user_sso_loginUpdateManyMutationInput, user_sso_loginUncheckedUpdateManyInput>
    /**
     * Filter which user_sso_logins to update
     */
    where?: user_sso_loginWhereInput
    /**
     * Limit how many user_sso_logins to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sso_loginIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_sso_login upsert
   */
  export type user_sso_loginUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sso_login
     */
    select?: user_sso_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sso_login
     */
    omit?: user_sso_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sso_loginInclude<ExtArgs> | null
    /**
     * The filter to search for the user_sso_login to update in case it exists.
     */
    where: user_sso_loginWhereUniqueInput
    /**
     * In case the user_sso_login found by the `where` argument doesn't exist, create a new user_sso_login with this data.
     */
    create: XOR<user_sso_loginCreateInput, user_sso_loginUncheckedCreateInput>
    /**
     * In case the user_sso_login was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_sso_loginUpdateInput, user_sso_loginUncheckedUpdateInput>
  }

  /**
   * user_sso_login delete
   */
  export type user_sso_loginDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sso_login
     */
    select?: user_sso_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sso_login
     */
    omit?: user_sso_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sso_loginInclude<ExtArgs> | null
    /**
     * Filter which user_sso_login to delete.
     */
    where: user_sso_loginWhereUniqueInput
  }

  /**
   * user_sso_login deleteMany
   */
  export type user_sso_loginDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_sso_logins to delete
     */
    where?: user_sso_loginWhereInput
    /**
     * Limit how many user_sso_logins to delete.
     */
    limit?: number
  }

  /**
   * user_sso_login without action
   */
  export type user_sso_loginDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sso_login
     */
    select?: user_sso_loginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sso_login
     */
    omit?: user_sso_loginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sso_loginInclude<ExtArgs> | null
  }


  /**
   * Model user_status
   */

  export type AggregateUser_status = {
    _count: User_statusCountAggregateOutputType | null
    _avg: User_statusAvgAggregateOutputType | null
    _sum: User_statusSumAggregateOutputType | null
    _min: User_statusMinAggregateOutputType | null
    _max: User_statusMaxAggregateOutputType | null
  }

  export type User_statusAvgAggregateOutputType = {
    user_id: Decimal | null
    user_status_type_id: Decimal | null
    user_status_id: Decimal | null
  }

  export type User_statusSumAggregateOutputType = {
    user_id: Decimal | null
    user_status_type_id: Decimal | null
    user_status_id: Decimal | null
  }

  export type User_statusMinAggregateOutputType = {
    user_id: Decimal | null
    user_status_type_id: Decimal | null
    user_status_id: Decimal | null
  }

  export type User_statusMaxAggregateOutputType = {
    user_id: Decimal | null
    user_status_type_id: Decimal | null
    user_status_id: Decimal | null
  }

  export type User_statusCountAggregateOutputType = {
    user_id: number
    user_status_type_id: number
    user_status_id: number
    _all: number
  }


  export type User_statusAvgAggregateInputType = {
    user_id?: true
    user_status_type_id?: true
    user_status_id?: true
  }

  export type User_statusSumAggregateInputType = {
    user_id?: true
    user_status_type_id?: true
    user_status_id?: true
  }

  export type User_statusMinAggregateInputType = {
    user_id?: true
    user_status_type_id?: true
    user_status_id?: true
  }

  export type User_statusMaxAggregateInputType = {
    user_id?: true
    user_status_type_id?: true
    user_status_id?: true
  }

  export type User_statusCountAggregateInputType = {
    user_id?: true
    user_status_type_id?: true
    user_status_id?: true
    _all?: true
  }

  export type User_statusAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_status to aggregate.
     */
    where?: user_statusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_statuses to fetch.
     */
    orderBy?: user_statusOrderByWithRelationInput | user_statusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_statusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_statuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_statuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_statuses
    **/
    _count?: true | User_statusCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_statusAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_statusSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_statusMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_statusMaxAggregateInputType
  }

  export type GetUser_statusAggregateType<T extends User_statusAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_status]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_status[P]>
      : GetScalarType<T[P], AggregateUser_status[P]>
  }




  export type user_statusGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_statusWhereInput
    orderBy?: user_statusOrderByWithAggregationInput | user_statusOrderByWithAggregationInput[]
    by: User_statusScalarFieldEnum[] | User_statusScalarFieldEnum
    having?: user_statusScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_statusCountAggregateInputType | true
    _avg?: User_statusAvgAggregateInputType
    _sum?: User_statusSumAggregateInputType
    _min?: User_statusMinAggregateInputType
    _max?: User_statusMaxAggregateInputType
  }

  export type User_statusGroupByOutputType = {
    user_id: Decimal
    user_status_type_id: Decimal
    user_status_id: Decimal | null
    _count: User_statusCountAggregateOutputType | null
    _avg: User_statusAvgAggregateOutputType | null
    _sum: User_statusSumAggregateOutputType | null
    _min: User_statusMinAggregateOutputType | null
    _max: User_statusMaxAggregateOutputType | null
  }

  type GetUser_statusGroupByPayload<T extends user_statusGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_statusGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_statusGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_statusGroupByOutputType[P]>
            : GetScalarType<T[P], User_statusGroupByOutputType[P]>
        }
      >
    >


  export type user_statusSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    user_status_type_id?: boolean
    user_status_id?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    user_status_lu?: boolean | user_status$user_status_luArgs<ExtArgs>
    user_status_type_lu?: boolean | user_status_type_luDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_status"]>

  export type user_statusSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    user_status_type_id?: boolean
    user_status_id?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    user_status_lu?: boolean | user_status$user_status_luArgs<ExtArgs>
    user_status_type_lu?: boolean | user_status_type_luDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_status"]>

  export type user_statusSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    user_status_type_id?: boolean
    user_status_id?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    user_status_lu?: boolean | user_status$user_status_luArgs<ExtArgs>
    user_status_type_lu?: boolean | user_status_type_luDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_status"]>

  export type user_statusSelectScalar = {
    user_id?: boolean
    user_status_type_id?: boolean
    user_status_id?: boolean
  }

  export type user_statusOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"user_id" | "user_status_type_id" | "user_status_id", ExtArgs["result"]["user_status"]>
  export type user_statusInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    user_status_lu?: boolean | user_status$user_status_luArgs<ExtArgs>
    user_status_type_lu?: boolean | user_status_type_luDefaultArgs<ExtArgs>
  }
  export type user_statusIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    user_status_lu?: boolean | user_status$user_status_luArgs<ExtArgs>
    user_status_type_lu?: boolean | user_status_type_luDefaultArgs<ExtArgs>
  }
  export type user_statusIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    user_status_lu?: boolean | user_status$user_status_luArgs<ExtArgs>
    user_status_type_lu?: boolean | user_status_type_luDefaultArgs<ExtArgs>
  }

  export type $user_statusPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_status"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
      user_status_lu: Prisma.$user_status_luPayload<ExtArgs> | null
      user_status_type_lu: Prisma.$user_status_type_luPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      user_id: Prisma.Decimal
      user_status_type_id: Prisma.Decimal
      user_status_id: Prisma.Decimal | null
    }, ExtArgs["result"]["user_status"]>
    composites: {}
  }

  type user_statusGetPayload<S extends boolean | null | undefined | user_statusDefaultArgs> = $Result.GetResult<Prisma.$user_statusPayload, S>

  type user_statusCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_statusFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_statusCountAggregateInputType | true
    }

  export interface user_statusDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_status'], meta: { name: 'user_status' } }
    /**
     * Find zero or one User_status that matches the filter.
     * @param {user_statusFindUniqueArgs} args - Arguments to find a User_status
     * @example
     * // Get one User_status
     * const user_status = await prisma.user_status.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_statusFindUniqueArgs>(args: SelectSubset<T, user_statusFindUniqueArgs<ExtArgs>>): Prisma__user_statusClient<$Result.GetResult<Prisma.$user_statusPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_status that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_statusFindUniqueOrThrowArgs} args - Arguments to find a User_status
     * @example
     * // Get one User_status
     * const user_status = await prisma.user_status.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_statusFindUniqueOrThrowArgs>(args: SelectSubset<T, user_statusFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_statusClient<$Result.GetResult<Prisma.$user_statusPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_status that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_statusFindFirstArgs} args - Arguments to find a User_status
     * @example
     * // Get one User_status
     * const user_status = await prisma.user_status.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_statusFindFirstArgs>(args?: SelectSubset<T, user_statusFindFirstArgs<ExtArgs>>): Prisma__user_statusClient<$Result.GetResult<Prisma.$user_statusPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_status that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_statusFindFirstOrThrowArgs} args - Arguments to find a User_status
     * @example
     * // Get one User_status
     * const user_status = await prisma.user_status.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_statusFindFirstOrThrowArgs>(args?: SelectSubset<T, user_statusFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_statusClient<$Result.GetResult<Prisma.$user_statusPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_statuses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_statusFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_statuses
     * const user_statuses = await prisma.user_status.findMany()
     * 
     * // Get first 10 User_statuses
     * const user_statuses = await prisma.user_status.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const user_statusWithUser_idOnly = await prisma.user_status.findMany({ select: { user_id: true } })
     * 
     */
    findMany<T extends user_statusFindManyArgs>(args?: SelectSubset<T, user_statusFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_statusPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_status.
     * @param {user_statusCreateArgs} args - Arguments to create a User_status.
     * @example
     * // Create one User_status
     * const User_status = await prisma.user_status.create({
     *   data: {
     *     // ... data to create a User_status
     *   }
     * })
     * 
     */
    create<T extends user_statusCreateArgs>(args: SelectSubset<T, user_statusCreateArgs<ExtArgs>>): Prisma__user_statusClient<$Result.GetResult<Prisma.$user_statusPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_statuses.
     * @param {user_statusCreateManyArgs} args - Arguments to create many User_statuses.
     * @example
     * // Create many User_statuses
     * const user_status = await prisma.user_status.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_statusCreateManyArgs>(args?: SelectSubset<T, user_statusCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_statuses and returns the data saved in the database.
     * @param {user_statusCreateManyAndReturnArgs} args - Arguments to create many User_statuses.
     * @example
     * // Create many User_statuses
     * const user_status = await prisma.user_status.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_statuses and only return the `user_id`
     * const user_statusWithUser_idOnly = await prisma.user_status.createManyAndReturn({
     *   select: { user_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_statusCreateManyAndReturnArgs>(args?: SelectSubset<T, user_statusCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_statusPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_status.
     * @param {user_statusDeleteArgs} args - Arguments to delete one User_status.
     * @example
     * // Delete one User_status
     * const User_status = await prisma.user_status.delete({
     *   where: {
     *     // ... filter to delete one User_status
     *   }
     * })
     * 
     */
    delete<T extends user_statusDeleteArgs>(args: SelectSubset<T, user_statusDeleteArgs<ExtArgs>>): Prisma__user_statusClient<$Result.GetResult<Prisma.$user_statusPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_status.
     * @param {user_statusUpdateArgs} args - Arguments to update one User_status.
     * @example
     * // Update one User_status
     * const user_status = await prisma.user_status.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_statusUpdateArgs>(args: SelectSubset<T, user_statusUpdateArgs<ExtArgs>>): Prisma__user_statusClient<$Result.GetResult<Prisma.$user_statusPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_statuses.
     * @param {user_statusDeleteManyArgs} args - Arguments to filter User_statuses to delete.
     * @example
     * // Delete a few User_statuses
     * const { count } = await prisma.user_status.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_statusDeleteManyArgs>(args?: SelectSubset<T, user_statusDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_statuses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_statusUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_statuses
     * const user_status = await prisma.user_status.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_statusUpdateManyArgs>(args: SelectSubset<T, user_statusUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_statuses and returns the data updated in the database.
     * @param {user_statusUpdateManyAndReturnArgs} args - Arguments to update many User_statuses.
     * @example
     * // Update many User_statuses
     * const user_status = await prisma.user_status.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_statuses and only return the `user_id`
     * const user_statusWithUser_idOnly = await prisma.user_status.updateManyAndReturn({
     *   select: { user_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_statusUpdateManyAndReturnArgs>(args: SelectSubset<T, user_statusUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_statusPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_status.
     * @param {user_statusUpsertArgs} args - Arguments to update or create a User_status.
     * @example
     * // Update or create a User_status
     * const user_status = await prisma.user_status.upsert({
     *   create: {
     *     // ... data to create a User_status
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_status we want to update
     *   }
     * })
     */
    upsert<T extends user_statusUpsertArgs>(args: SelectSubset<T, user_statusUpsertArgs<ExtArgs>>): Prisma__user_statusClient<$Result.GetResult<Prisma.$user_statusPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_statuses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_statusCountArgs} args - Arguments to filter User_statuses to count.
     * @example
     * // Count the number of User_statuses
     * const count = await prisma.user_status.count({
     *   where: {
     *     // ... the filter for the User_statuses we want to count
     *   }
     * })
    **/
    count<T extends user_statusCountArgs>(
      args?: Subset<T, user_statusCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_statusCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_status.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_statusAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_statusAggregateArgs>(args: Subset<T, User_statusAggregateArgs>): Prisma.PrismaPromise<GetUser_statusAggregateType<T>>

    /**
     * Group by User_status.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_statusGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_statusGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_statusGroupByArgs['orderBy'] }
        : { orderBy?: user_statusGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_statusGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_statusGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_status model
   */
  readonly fields: user_statusFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_status.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_statusClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user_status_lu<T extends user_status$user_status_luArgs<ExtArgs> = {}>(args?: Subset<T, user_status$user_status_luArgs<ExtArgs>>): Prisma__user_status_luClient<$Result.GetResult<Prisma.$user_status_luPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user_status_type_lu<T extends user_status_type_luDefaultArgs<ExtArgs> = {}>(args?: Subset<T, user_status_type_luDefaultArgs<ExtArgs>>): Prisma__user_status_type_luClient<$Result.GetResult<Prisma.$user_status_type_luPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_status model
   */
  interface user_statusFieldRefs {
    readonly user_id: FieldRef<"user_status", 'Decimal'>
    readonly user_status_type_id: FieldRef<"user_status", 'Decimal'>
    readonly user_status_id: FieldRef<"user_status", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * user_status findUnique
   */
  export type user_statusFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status
     */
    select?: user_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status
     */
    omit?: user_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_statusInclude<ExtArgs> | null
    /**
     * Filter, which user_status to fetch.
     */
    where: user_statusWhereUniqueInput
  }

  /**
   * user_status findUniqueOrThrow
   */
  export type user_statusFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status
     */
    select?: user_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status
     */
    omit?: user_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_statusInclude<ExtArgs> | null
    /**
     * Filter, which user_status to fetch.
     */
    where: user_statusWhereUniqueInput
  }

  /**
   * user_status findFirst
   */
  export type user_statusFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status
     */
    select?: user_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status
     */
    omit?: user_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_statusInclude<ExtArgs> | null
    /**
     * Filter, which user_status to fetch.
     */
    where?: user_statusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_statuses to fetch.
     */
    orderBy?: user_statusOrderByWithRelationInput | user_statusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_statuses.
     */
    cursor?: user_statusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_statuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_statuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_statuses.
     */
    distinct?: User_statusScalarFieldEnum | User_statusScalarFieldEnum[]
  }

  /**
   * user_status findFirstOrThrow
   */
  export type user_statusFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status
     */
    select?: user_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status
     */
    omit?: user_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_statusInclude<ExtArgs> | null
    /**
     * Filter, which user_status to fetch.
     */
    where?: user_statusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_statuses to fetch.
     */
    orderBy?: user_statusOrderByWithRelationInput | user_statusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_statuses.
     */
    cursor?: user_statusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_statuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_statuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_statuses.
     */
    distinct?: User_statusScalarFieldEnum | User_statusScalarFieldEnum[]
  }

  /**
   * user_status findMany
   */
  export type user_statusFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status
     */
    select?: user_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status
     */
    omit?: user_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_statusInclude<ExtArgs> | null
    /**
     * Filter, which user_statuses to fetch.
     */
    where?: user_statusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_statuses to fetch.
     */
    orderBy?: user_statusOrderByWithRelationInput | user_statusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_statuses.
     */
    cursor?: user_statusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_statuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_statuses.
     */
    skip?: number
    distinct?: User_statusScalarFieldEnum | User_statusScalarFieldEnum[]
  }

  /**
   * user_status create
   */
  export type user_statusCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status
     */
    select?: user_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status
     */
    omit?: user_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_statusInclude<ExtArgs> | null
    /**
     * The data needed to create a user_status.
     */
    data: XOR<user_statusCreateInput, user_statusUncheckedCreateInput>
  }

  /**
   * user_status createMany
   */
  export type user_statusCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_statuses.
     */
    data: user_statusCreateManyInput | user_statusCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_status createManyAndReturn
   */
  export type user_statusCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status
     */
    select?: user_statusSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_status
     */
    omit?: user_statusOmit<ExtArgs> | null
    /**
     * The data used to create many user_statuses.
     */
    data: user_statusCreateManyInput | user_statusCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_statusIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_status update
   */
  export type user_statusUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status
     */
    select?: user_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status
     */
    omit?: user_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_statusInclude<ExtArgs> | null
    /**
     * The data needed to update a user_status.
     */
    data: XOR<user_statusUpdateInput, user_statusUncheckedUpdateInput>
    /**
     * Choose, which user_status to update.
     */
    where: user_statusWhereUniqueInput
  }

  /**
   * user_status updateMany
   */
  export type user_statusUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_statuses.
     */
    data: XOR<user_statusUpdateManyMutationInput, user_statusUncheckedUpdateManyInput>
    /**
     * Filter which user_statuses to update
     */
    where?: user_statusWhereInput
    /**
     * Limit how many user_statuses to update.
     */
    limit?: number
  }

  /**
   * user_status updateManyAndReturn
   */
  export type user_statusUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status
     */
    select?: user_statusSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_status
     */
    omit?: user_statusOmit<ExtArgs> | null
    /**
     * The data used to update user_statuses.
     */
    data: XOR<user_statusUpdateManyMutationInput, user_statusUncheckedUpdateManyInput>
    /**
     * Filter which user_statuses to update
     */
    where?: user_statusWhereInput
    /**
     * Limit how many user_statuses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_statusIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_status upsert
   */
  export type user_statusUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status
     */
    select?: user_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status
     */
    omit?: user_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_statusInclude<ExtArgs> | null
    /**
     * The filter to search for the user_status to update in case it exists.
     */
    where: user_statusWhereUniqueInput
    /**
     * In case the user_status found by the `where` argument doesn't exist, create a new user_status with this data.
     */
    create: XOR<user_statusCreateInput, user_statusUncheckedCreateInput>
    /**
     * In case the user_status was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_statusUpdateInput, user_statusUncheckedUpdateInput>
  }

  /**
   * user_status delete
   */
  export type user_statusDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status
     */
    select?: user_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status
     */
    omit?: user_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_statusInclude<ExtArgs> | null
    /**
     * Filter which user_status to delete.
     */
    where: user_statusWhereUniqueInput
  }

  /**
   * user_status deleteMany
   */
  export type user_statusDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_statuses to delete
     */
    where?: user_statusWhereInput
    /**
     * Limit how many user_statuses to delete.
     */
    limit?: number
  }

  /**
   * user_status.user_status_lu
   */
  export type user_status$user_status_luArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status_lu
     */
    select?: user_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status_lu
     */
    omit?: user_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_status_luInclude<ExtArgs> | null
    where?: user_status_luWhereInput
  }

  /**
   * user_status without action
   */
  export type user_statusDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status
     */
    select?: user_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status
     */
    omit?: user_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_statusInclude<ExtArgs> | null
  }


  /**
   * Model user_status_lu
   */

  export type AggregateUser_status_lu = {
    _count: User_status_luCountAggregateOutputType | null
    _avg: User_status_luAvgAggregateOutputType | null
    _sum: User_status_luSumAggregateOutputType | null
    _min: User_status_luMinAggregateOutputType | null
    _max: User_status_luMaxAggregateOutputType | null
  }

  export type User_status_luAvgAggregateOutputType = {
    user_status_id: Decimal | null
  }

  export type User_status_luSumAggregateOutputType = {
    user_status_id: Decimal | null
  }

  export type User_status_luMinAggregateOutputType = {
    user_status_id: Decimal | null
    description: string | null
  }

  export type User_status_luMaxAggregateOutputType = {
    user_status_id: Decimal | null
    description: string | null
  }

  export type User_status_luCountAggregateOutputType = {
    user_status_id: number
    description: number
    _all: number
  }


  export type User_status_luAvgAggregateInputType = {
    user_status_id?: true
  }

  export type User_status_luSumAggregateInputType = {
    user_status_id?: true
  }

  export type User_status_luMinAggregateInputType = {
    user_status_id?: true
    description?: true
  }

  export type User_status_luMaxAggregateInputType = {
    user_status_id?: true
    description?: true
  }

  export type User_status_luCountAggregateInputType = {
    user_status_id?: true
    description?: true
    _all?: true
  }

  export type User_status_luAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_status_lu to aggregate.
     */
    where?: user_status_luWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_status_lus to fetch.
     */
    orderBy?: user_status_luOrderByWithRelationInput | user_status_luOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_status_luWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_status_lus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_status_lus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_status_lus
    **/
    _count?: true | User_status_luCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_status_luAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_status_luSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_status_luMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_status_luMaxAggregateInputType
  }

  export type GetUser_status_luAggregateType<T extends User_status_luAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_status_lu]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_status_lu[P]>
      : GetScalarType<T[P], AggregateUser_status_lu[P]>
  }




  export type user_status_luGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_status_luWhereInput
    orderBy?: user_status_luOrderByWithAggregationInput | user_status_luOrderByWithAggregationInput[]
    by: User_status_luScalarFieldEnum[] | User_status_luScalarFieldEnum
    having?: user_status_luScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_status_luCountAggregateInputType | true
    _avg?: User_status_luAvgAggregateInputType
    _sum?: User_status_luSumAggregateInputType
    _min?: User_status_luMinAggregateInputType
    _max?: User_status_luMaxAggregateInputType
  }

  export type User_status_luGroupByOutputType = {
    user_status_id: Decimal
    description: string | null
    _count: User_status_luCountAggregateOutputType | null
    _avg: User_status_luAvgAggregateOutputType | null
    _sum: User_status_luSumAggregateOutputType | null
    _min: User_status_luMinAggregateOutputType | null
    _max: User_status_luMaxAggregateOutputType | null
  }

  type GetUser_status_luGroupByPayload<T extends user_status_luGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_status_luGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_status_luGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_status_luGroupByOutputType[P]>
            : GetScalarType<T[P], User_status_luGroupByOutputType[P]>
        }
      >
    >


  export type user_status_luSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_status_id?: boolean
    description?: boolean
    user_status?: boolean | user_status_lu$user_statusArgs<ExtArgs>
    _count?: boolean | User_status_luCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_status_lu"]>

  export type user_status_luSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_status_id?: boolean
    description?: boolean
  }, ExtArgs["result"]["user_status_lu"]>

  export type user_status_luSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_status_id?: boolean
    description?: boolean
  }, ExtArgs["result"]["user_status_lu"]>

  export type user_status_luSelectScalar = {
    user_status_id?: boolean
    description?: boolean
  }

  export type user_status_luOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"user_status_id" | "description", ExtArgs["result"]["user_status_lu"]>
  export type user_status_luInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_status?: boolean | user_status_lu$user_statusArgs<ExtArgs>
    _count?: boolean | User_status_luCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type user_status_luIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type user_status_luIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $user_status_luPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_status_lu"
    objects: {
      user_status: Prisma.$user_statusPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      user_status_id: Prisma.Decimal
      description: string | null
    }, ExtArgs["result"]["user_status_lu"]>
    composites: {}
  }

  type user_status_luGetPayload<S extends boolean | null | undefined | user_status_luDefaultArgs> = $Result.GetResult<Prisma.$user_status_luPayload, S>

  type user_status_luCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_status_luFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_status_luCountAggregateInputType | true
    }

  export interface user_status_luDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_status_lu'], meta: { name: 'user_status_lu' } }
    /**
     * Find zero or one User_status_lu that matches the filter.
     * @param {user_status_luFindUniqueArgs} args - Arguments to find a User_status_lu
     * @example
     * // Get one User_status_lu
     * const user_status_lu = await prisma.user_status_lu.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_status_luFindUniqueArgs>(args: SelectSubset<T, user_status_luFindUniqueArgs<ExtArgs>>): Prisma__user_status_luClient<$Result.GetResult<Prisma.$user_status_luPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_status_lu that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_status_luFindUniqueOrThrowArgs} args - Arguments to find a User_status_lu
     * @example
     * // Get one User_status_lu
     * const user_status_lu = await prisma.user_status_lu.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_status_luFindUniqueOrThrowArgs>(args: SelectSubset<T, user_status_luFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_status_luClient<$Result.GetResult<Prisma.$user_status_luPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_status_lu that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_status_luFindFirstArgs} args - Arguments to find a User_status_lu
     * @example
     * // Get one User_status_lu
     * const user_status_lu = await prisma.user_status_lu.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_status_luFindFirstArgs>(args?: SelectSubset<T, user_status_luFindFirstArgs<ExtArgs>>): Prisma__user_status_luClient<$Result.GetResult<Prisma.$user_status_luPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_status_lu that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_status_luFindFirstOrThrowArgs} args - Arguments to find a User_status_lu
     * @example
     * // Get one User_status_lu
     * const user_status_lu = await prisma.user_status_lu.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_status_luFindFirstOrThrowArgs>(args?: SelectSubset<T, user_status_luFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_status_luClient<$Result.GetResult<Prisma.$user_status_luPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_status_lus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_status_luFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_status_lus
     * const user_status_lus = await prisma.user_status_lu.findMany()
     * 
     * // Get first 10 User_status_lus
     * const user_status_lus = await prisma.user_status_lu.findMany({ take: 10 })
     * 
     * // Only select the `user_status_id`
     * const user_status_luWithUser_status_idOnly = await prisma.user_status_lu.findMany({ select: { user_status_id: true } })
     * 
     */
    findMany<T extends user_status_luFindManyArgs>(args?: SelectSubset<T, user_status_luFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_status_luPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_status_lu.
     * @param {user_status_luCreateArgs} args - Arguments to create a User_status_lu.
     * @example
     * // Create one User_status_lu
     * const User_status_lu = await prisma.user_status_lu.create({
     *   data: {
     *     // ... data to create a User_status_lu
     *   }
     * })
     * 
     */
    create<T extends user_status_luCreateArgs>(args: SelectSubset<T, user_status_luCreateArgs<ExtArgs>>): Prisma__user_status_luClient<$Result.GetResult<Prisma.$user_status_luPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_status_lus.
     * @param {user_status_luCreateManyArgs} args - Arguments to create many User_status_lus.
     * @example
     * // Create many User_status_lus
     * const user_status_lu = await prisma.user_status_lu.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_status_luCreateManyArgs>(args?: SelectSubset<T, user_status_luCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_status_lus and returns the data saved in the database.
     * @param {user_status_luCreateManyAndReturnArgs} args - Arguments to create many User_status_lus.
     * @example
     * // Create many User_status_lus
     * const user_status_lu = await prisma.user_status_lu.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_status_lus and only return the `user_status_id`
     * const user_status_luWithUser_status_idOnly = await prisma.user_status_lu.createManyAndReturn({
     *   select: { user_status_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_status_luCreateManyAndReturnArgs>(args?: SelectSubset<T, user_status_luCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_status_luPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_status_lu.
     * @param {user_status_luDeleteArgs} args - Arguments to delete one User_status_lu.
     * @example
     * // Delete one User_status_lu
     * const User_status_lu = await prisma.user_status_lu.delete({
     *   where: {
     *     // ... filter to delete one User_status_lu
     *   }
     * })
     * 
     */
    delete<T extends user_status_luDeleteArgs>(args: SelectSubset<T, user_status_luDeleteArgs<ExtArgs>>): Prisma__user_status_luClient<$Result.GetResult<Prisma.$user_status_luPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_status_lu.
     * @param {user_status_luUpdateArgs} args - Arguments to update one User_status_lu.
     * @example
     * // Update one User_status_lu
     * const user_status_lu = await prisma.user_status_lu.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_status_luUpdateArgs>(args: SelectSubset<T, user_status_luUpdateArgs<ExtArgs>>): Prisma__user_status_luClient<$Result.GetResult<Prisma.$user_status_luPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_status_lus.
     * @param {user_status_luDeleteManyArgs} args - Arguments to filter User_status_lus to delete.
     * @example
     * // Delete a few User_status_lus
     * const { count } = await prisma.user_status_lu.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_status_luDeleteManyArgs>(args?: SelectSubset<T, user_status_luDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_status_lus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_status_luUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_status_lus
     * const user_status_lu = await prisma.user_status_lu.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_status_luUpdateManyArgs>(args: SelectSubset<T, user_status_luUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_status_lus and returns the data updated in the database.
     * @param {user_status_luUpdateManyAndReturnArgs} args - Arguments to update many User_status_lus.
     * @example
     * // Update many User_status_lus
     * const user_status_lu = await prisma.user_status_lu.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_status_lus and only return the `user_status_id`
     * const user_status_luWithUser_status_idOnly = await prisma.user_status_lu.updateManyAndReturn({
     *   select: { user_status_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_status_luUpdateManyAndReturnArgs>(args: SelectSubset<T, user_status_luUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_status_luPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_status_lu.
     * @param {user_status_luUpsertArgs} args - Arguments to update or create a User_status_lu.
     * @example
     * // Update or create a User_status_lu
     * const user_status_lu = await prisma.user_status_lu.upsert({
     *   create: {
     *     // ... data to create a User_status_lu
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_status_lu we want to update
     *   }
     * })
     */
    upsert<T extends user_status_luUpsertArgs>(args: SelectSubset<T, user_status_luUpsertArgs<ExtArgs>>): Prisma__user_status_luClient<$Result.GetResult<Prisma.$user_status_luPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_status_lus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_status_luCountArgs} args - Arguments to filter User_status_lus to count.
     * @example
     * // Count the number of User_status_lus
     * const count = await prisma.user_status_lu.count({
     *   where: {
     *     // ... the filter for the User_status_lus we want to count
     *   }
     * })
    **/
    count<T extends user_status_luCountArgs>(
      args?: Subset<T, user_status_luCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_status_luCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_status_lu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_status_luAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_status_luAggregateArgs>(args: Subset<T, User_status_luAggregateArgs>): Prisma.PrismaPromise<GetUser_status_luAggregateType<T>>

    /**
     * Group by User_status_lu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_status_luGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_status_luGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_status_luGroupByArgs['orderBy'] }
        : { orderBy?: user_status_luGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_status_luGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_status_luGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_status_lu model
   */
  readonly fields: user_status_luFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_status_lu.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_status_luClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user_status<T extends user_status_lu$user_statusArgs<ExtArgs> = {}>(args?: Subset<T, user_status_lu$user_statusArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_statusPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_status_lu model
   */
  interface user_status_luFieldRefs {
    readonly user_status_id: FieldRef<"user_status_lu", 'Decimal'>
    readonly description: FieldRef<"user_status_lu", 'String'>
  }
    

  // Custom InputTypes
  /**
   * user_status_lu findUnique
   */
  export type user_status_luFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status_lu
     */
    select?: user_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status_lu
     */
    omit?: user_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_status_luInclude<ExtArgs> | null
    /**
     * Filter, which user_status_lu to fetch.
     */
    where: user_status_luWhereUniqueInput
  }

  /**
   * user_status_lu findUniqueOrThrow
   */
  export type user_status_luFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status_lu
     */
    select?: user_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status_lu
     */
    omit?: user_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_status_luInclude<ExtArgs> | null
    /**
     * Filter, which user_status_lu to fetch.
     */
    where: user_status_luWhereUniqueInput
  }

  /**
   * user_status_lu findFirst
   */
  export type user_status_luFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status_lu
     */
    select?: user_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status_lu
     */
    omit?: user_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_status_luInclude<ExtArgs> | null
    /**
     * Filter, which user_status_lu to fetch.
     */
    where?: user_status_luWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_status_lus to fetch.
     */
    orderBy?: user_status_luOrderByWithRelationInput | user_status_luOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_status_lus.
     */
    cursor?: user_status_luWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_status_lus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_status_lus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_status_lus.
     */
    distinct?: User_status_luScalarFieldEnum | User_status_luScalarFieldEnum[]
  }

  /**
   * user_status_lu findFirstOrThrow
   */
  export type user_status_luFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status_lu
     */
    select?: user_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status_lu
     */
    omit?: user_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_status_luInclude<ExtArgs> | null
    /**
     * Filter, which user_status_lu to fetch.
     */
    where?: user_status_luWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_status_lus to fetch.
     */
    orderBy?: user_status_luOrderByWithRelationInput | user_status_luOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_status_lus.
     */
    cursor?: user_status_luWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_status_lus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_status_lus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_status_lus.
     */
    distinct?: User_status_luScalarFieldEnum | User_status_luScalarFieldEnum[]
  }

  /**
   * user_status_lu findMany
   */
  export type user_status_luFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status_lu
     */
    select?: user_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status_lu
     */
    omit?: user_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_status_luInclude<ExtArgs> | null
    /**
     * Filter, which user_status_lus to fetch.
     */
    where?: user_status_luWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_status_lus to fetch.
     */
    orderBy?: user_status_luOrderByWithRelationInput | user_status_luOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_status_lus.
     */
    cursor?: user_status_luWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_status_lus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_status_lus.
     */
    skip?: number
    distinct?: User_status_luScalarFieldEnum | User_status_luScalarFieldEnum[]
  }

  /**
   * user_status_lu create
   */
  export type user_status_luCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status_lu
     */
    select?: user_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status_lu
     */
    omit?: user_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_status_luInclude<ExtArgs> | null
    /**
     * The data needed to create a user_status_lu.
     */
    data: XOR<user_status_luCreateInput, user_status_luUncheckedCreateInput>
  }

  /**
   * user_status_lu createMany
   */
  export type user_status_luCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_status_lus.
     */
    data: user_status_luCreateManyInput | user_status_luCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_status_lu createManyAndReturn
   */
  export type user_status_luCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status_lu
     */
    select?: user_status_luSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_status_lu
     */
    omit?: user_status_luOmit<ExtArgs> | null
    /**
     * The data used to create many user_status_lus.
     */
    data: user_status_luCreateManyInput | user_status_luCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_status_lu update
   */
  export type user_status_luUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status_lu
     */
    select?: user_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status_lu
     */
    omit?: user_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_status_luInclude<ExtArgs> | null
    /**
     * The data needed to update a user_status_lu.
     */
    data: XOR<user_status_luUpdateInput, user_status_luUncheckedUpdateInput>
    /**
     * Choose, which user_status_lu to update.
     */
    where: user_status_luWhereUniqueInput
  }

  /**
   * user_status_lu updateMany
   */
  export type user_status_luUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_status_lus.
     */
    data: XOR<user_status_luUpdateManyMutationInput, user_status_luUncheckedUpdateManyInput>
    /**
     * Filter which user_status_lus to update
     */
    where?: user_status_luWhereInput
    /**
     * Limit how many user_status_lus to update.
     */
    limit?: number
  }

  /**
   * user_status_lu updateManyAndReturn
   */
  export type user_status_luUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status_lu
     */
    select?: user_status_luSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_status_lu
     */
    omit?: user_status_luOmit<ExtArgs> | null
    /**
     * The data used to update user_status_lus.
     */
    data: XOR<user_status_luUpdateManyMutationInput, user_status_luUncheckedUpdateManyInput>
    /**
     * Filter which user_status_lus to update
     */
    where?: user_status_luWhereInput
    /**
     * Limit how many user_status_lus to update.
     */
    limit?: number
  }

  /**
   * user_status_lu upsert
   */
  export type user_status_luUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status_lu
     */
    select?: user_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status_lu
     */
    omit?: user_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_status_luInclude<ExtArgs> | null
    /**
     * The filter to search for the user_status_lu to update in case it exists.
     */
    where: user_status_luWhereUniqueInput
    /**
     * In case the user_status_lu found by the `where` argument doesn't exist, create a new user_status_lu with this data.
     */
    create: XOR<user_status_luCreateInput, user_status_luUncheckedCreateInput>
    /**
     * In case the user_status_lu was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_status_luUpdateInput, user_status_luUncheckedUpdateInput>
  }

  /**
   * user_status_lu delete
   */
  export type user_status_luDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status_lu
     */
    select?: user_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status_lu
     */
    omit?: user_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_status_luInclude<ExtArgs> | null
    /**
     * Filter which user_status_lu to delete.
     */
    where: user_status_luWhereUniqueInput
  }

  /**
   * user_status_lu deleteMany
   */
  export type user_status_luDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_status_lus to delete
     */
    where?: user_status_luWhereInput
    /**
     * Limit how many user_status_lus to delete.
     */
    limit?: number
  }

  /**
   * user_status_lu.user_status
   */
  export type user_status_lu$user_statusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status
     */
    select?: user_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status
     */
    omit?: user_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_statusInclude<ExtArgs> | null
    where?: user_statusWhereInput
    orderBy?: user_statusOrderByWithRelationInput | user_statusOrderByWithRelationInput[]
    cursor?: user_statusWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_statusScalarFieldEnum | User_statusScalarFieldEnum[]
  }

  /**
   * user_status_lu without action
   */
  export type user_status_luDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status_lu
     */
    select?: user_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status_lu
     */
    omit?: user_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_status_luInclude<ExtArgs> | null
  }


  /**
   * Model user_status_type_lu
   */

  export type AggregateUser_status_type_lu = {
    _count: User_status_type_luCountAggregateOutputType | null
    _avg: User_status_type_luAvgAggregateOutputType | null
    _sum: User_status_type_luSumAggregateOutputType | null
    _min: User_status_type_luMinAggregateOutputType | null
    _max: User_status_type_luMaxAggregateOutputType | null
  }

  export type User_status_type_luAvgAggregateOutputType = {
    user_status_type_id: Decimal | null
  }

  export type User_status_type_luSumAggregateOutputType = {
    user_status_type_id: Decimal | null
  }

  export type User_status_type_luMinAggregateOutputType = {
    user_status_type_id: Decimal | null
    description: string | null
  }

  export type User_status_type_luMaxAggregateOutputType = {
    user_status_type_id: Decimal | null
    description: string | null
  }

  export type User_status_type_luCountAggregateOutputType = {
    user_status_type_id: number
    description: number
    _all: number
  }


  export type User_status_type_luAvgAggregateInputType = {
    user_status_type_id?: true
  }

  export type User_status_type_luSumAggregateInputType = {
    user_status_type_id?: true
  }

  export type User_status_type_luMinAggregateInputType = {
    user_status_type_id?: true
    description?: true
  }

  export type User_status_type_luMaxAggregateInputType = {
    user_status_type_id?: true
    description?: true
  }

  export type User_status_type_luCountAggregateInputType = {
    user_status_type_id?: true
    description?: true
    _all?: true
  }

  export type User_status_type_luAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_status_type_lu to aggregate.
     */
    where?: user_status_type_luWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_status_type_lus to fetch.
     */
    orderBy?: user_status_type_luOrderByWithRelationInput | user_status_type_luOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_status_type_luWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_status_type_lus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_status_type_lus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_status_type_lus
    **/
    _count?: true | User_status_type_luCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_status_type_luAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_status_type_luSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_status_type_luMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_status_type_luMaxAggregateInputType
  }

  export type GetUser_status_type_luAggregateType<T extends User_status_type_luAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_status_type_lu]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_status_type_lu[P]>
      : GetScalarType<T[P], AggregateUser_status_type_lu[P]>
  }




  export type user_status_type_luGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_status_type_luWhereInput
    orderBy?: user_status_type_luOrderByWithAggregationInput | user_status_type_luOrderByWithAggregationInput[]
    by: User_status_type_luScalarFieldEnum[] | User_status_type_luScalarFieldEnum
    having?: user_status_type_luScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_status_type_luCountAggregateInputType | true
    _avg?: User_status_type_luAvgAggregateInputType
    _sum?: User_status_type_luSumAggregateInputType
    _min?: User_status_type_luMinAggregateInputType
    _max?: User_status_type_luMaxAggregateInputType
  }

  export type User_status_type_luGroupByOutputType = {
    user_status_type_id: Decimal
    description: string | null
    _count: User_status_type_luCountAggregateOutputType | null
    _avg: User_status_type_luAvgAggregateOutputType | null
    _sum: User_status_type_luSumAggregateOutputType | null
    _min: User_status_type_luMinAggregateOutputType | null
    _max: User_status_type_luMaxAggregateOutputType | null
  }

  type GetUser_status_type_luGroupByPayload<T extends user_status_type_luGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_status_type_luGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_status_type_luGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_status_type_luGroupByOutputType[P]>
            : GetScalarType<T[P], User_status_type_luGroupByOutputType[P]>
        }
      >
    >


  export type user_status_type_luSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_status_type_id?: boolean
    description?: boolean
    user_status?: boolean | user_status_type_lu$user_statusArgs<ExtArgs>
    _count?: boolean | User_status_type_luCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_status_type_lu"]>

  export type user_status_type_luSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_status_type_id?: boolean
    description?: boolean
  }, ExtArgs["result"]["user_status_type_lu"]>

  export type user_status_type_luSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_status_type_id?: boolean
    description?: boolean
  }, ExtArgs["result"]["user_status_type_lu"]>

  export type user_status_type_luSelectScalar = {
    user_status_type_id?: boolean
    description?: boolean
  }

  export type user_status_type_luOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"user_status_type_id" | "description", ExtArgs["result"]["user_status_type_lu"]>
  export type user_status_type_luInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_status?: boolean | user_status_type_lu$user_statusArgs<ExtArgs>
    _count?: boolean | User_status_type_luCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type user_status_type_luIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type user_status_type_luIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $user_status_type_luPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_status_type_lu"
    objects: {
      user_status: Prisma.$user_statusPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      user_status_type_id: Prisma.Decimal
      description: string | null
    }, ExtArgs["result"]["user_status_type_lu"]>
    composites: {}
  }

  type user_status_type_luGetPayload<S extends boolean | null | undefined | user_status_type_luDefaultArgs> = $Result.GetResult<Prisma.$user_status_type_luPayload, S>

  type user_status_type_luCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_status_type_luFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_status_type_luCountAggregateInputType | true
    }

  export interface user_status_type_luDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_status_type_lu'], meta: { name: 'user_status_type_lu' } }
    /**
     * Find zero or one User_status_type_lu that matches the filter.
     * @param {user_status_type_luFindUniqueArgs} args - Arguments to find a User_status_type_lu
     * @example
     * // Get one User_status_type_lu
     * const user_status_type_lu = await prisma.user_status_type_lu.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_status_type_luFindUniqueArgs>(args: SelectSubset<T, user_status_type_luFindUniqueArgs<ExtArgs>>): Prisma__user_status_type_luClient<$Result.GetResult<Prisma.$user_status_type_luPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_status_type_lu that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_status_type_luFindUniqueOrThrowArgs} args - Arguments to find a User_status_type_lu
     * @example
     * // Get one User_status_type_lu
     * const user_status_type_lu = await prisma.user_status_type_lu.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_status_type_luFindUniqueOrThrowArgs>(args: SelectSubset<T, user_status_type_luFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_status_type_luClient<$Result.GetResult<Prisma.$user_status_type_luPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_status_type_lu that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_status_type_luFindFirstArgs} args - Arguments to find a User_status_type_lu
     * @example
     * // Get one User_status_type_lu
     * const user_status_type_lu = await prisma.user_status_type_lu.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_status_type_luFindFirstArgs>(args?: SelectSubset<T, user_status_type_luFindFirstArgs<ExtArgs>>): Prisma__user_status_type_luClient<$Result.GetResult<Prisma.$user_status_type_luPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_status_type_lu that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_status_type_luFindFirstOrThrowArgs} args - Arguments to find a User_status_type_lu
     * @example
     * // Get one User_status_type_lu
     * const user_status_type_lu = await prisma.user_status_type_lu.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_status_type_luFindFirstOrThrowArgs>(args?: SelectSubset<T, user_status_type_luFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_status_type_luClient<$Result.GetResult<Prisma.$user_status_type_luPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_status_type_lus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_status_type_luFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_status_type_lus
     * const user_status_type_lus = await prisma.user_status_type_lu.findMany()
     * 
     * // Get first 10 User_status_type_lus
     * const user_status_type_lus = await prisma.user_status_type_lu.findMany({ take: 10 })
     * 
     * // Only select the `user_status_type_id`
     * const user_status_type_luWithUser_status_type_idOnly = await prisma.user_status_type_lu.findMany({ select: { user_status_type_id: true } })
     * 
     */
    findMany<T extends user_status_type_luFindManyArgs>(args?: SelectSubset<T, user_status_type_luFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_status_type_luPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_status_type_lu.
     * @param {user_status_type_luCreateArgs} args - Arguments to create a User_status_type_lu.
     * @example
     * // Create one User_status_type_lu
     * const User_status_type_lu = await prisma.user_status_type_lu.create({
     *   data: {
     *     // ... data to create a User_status_type_lu
     *   }
     * })
     * 
     */
    create<T extends user_status_type_luCreateArgs>(args: SelectSubset<T, user_status_type_luCreateArgs<ExtArgs>>): Prisma__user_status_type_luClient<$Result.GetResult<Prisma.$user_status_type_luPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_status_type_lus.
     * @param {user_status_type_luCreateManyArgs} args - Arguments to create many User_status_type_lus.
     * @example
     * // Create many User_status_type_lus
     * const user_status_type_lu = await prisma.user_status_type_lu.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_status_type_luCreateManyArgs>(args?: SelectSubset<T, user_status_type_luCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_status_type_lus and returns the data saved in the database.
     * @param {user_status_type_luCreateManyAndReturnArgs} args - Arguments to create many User_status_type_lus.
     * @example
     * // Create many User_status_type_lus
     * const user_status_type_lu = await prisma.user_status_type_lu.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_status_type_lus and only return the `user_status_type_id`
     * const user_status_type_luWithUser_status_type_idOnly = await prisma.user_status_type_lu.createManyAndReturn({
     *   select: { user_status_type_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_status_type_luCreateManyAndReturnArgs>(args?: SelectSubset<T, user_status_type_luCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_status_type_luPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_status_type_lu.
     * @param {user_status_type_luDeleteArgs} args - Arguments to delete one User_status_type_lu.
     * @example
     * // Delete one User_status_type_lu
     * const User_status_type_lu = await prisma.user_status_type_lu.delete({
     *   where: {
     *     // ... filter to delete one User_status_type_lu
     *   }
     * })
     * 
     */
    delete<T extends user_status_type_luDeleteArgs>(args: SelectSubset<T, user_status_type_luDeleteArgs<ExtArgs>>): Prisma__user_status_type_luClient<$Result.GetResult<Prisma.$user_status_type_luPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_status_type_lu.
     * @param {user_status_type_luUpdateArgs} args - Arguments to update one User_status_type_lu.
     * @example
     * // Update one User_status_type_lu
     * const user_status_type_lu = await prisma.user_status_type_lu.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_status_type_luUpdateArgs>(args: SelectSubset<T, user_status_type_luUpdateArgs<ExtArgs>>): Prisma__user_status_type_luClient<$Result.GetResult<Prisma.$user_status_type_luPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_status_type_lus.
     * @param {user_status_type_luDeleteManyArgs} args - Arguments to filter User_status_type_lus to delete.
     * @example
     * // Delete a few User_status_type_lus
     * const { count } = await prisma.user_status_type_lu.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_status_type_luDeleteManyArgs>(args?: SelectSubset<T, user_status_type_luDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_status_type_lus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_status_type_luUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_status_type_lus
     * const user_status_type_lu = await prisma.user_status_type_lu.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_status_type_luUpdateManyArgs>(args: SelectSubset<T, user_status_type_luUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_status_type_lus and returns the data updated in the database.
     * @param {user_status_type_luUpdateManyAndReturnArgs} args - Arguments to update many User_status_type_lus.
     * @example
     * // Update many User_status_type_lus
     * const user_status_type_lu = await prisma.user_status_type_lu.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_status_type_lus and only return the `user_status_type_id`
     * const user_status_type_luWithUser_status_type_idOnly = await prisma.user_status_type_lu.updateManyAndReturn({
     *   select: { user_status_type_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_status_type_luUpdateManyAndReturnArgs>(args: SelectSubset<T, user_status_type_luUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_status_type_luPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_status_type_lu.
     * @param {user_status_type_luUpsertArgs} args - Arguments to update or create a User_status_type_lu.
     * @example
     * // Update or create a User_status_type_lu
     * const user_status_type_lu = await prisma.user_status_type_lu.upsert({
     *   create: {
     *     // ... data to create a User_status_type_lu
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_status_type_lu we want to update
     *   }
     * })
     */
    upsert<T extends user_status_type_luUpsertArgs>(args: SelectSubset<T, user_status_type_luUpsertArgs<ExtArgs>>): Prisma__user_status_type_luClient<$Result.GetResult<Prisma.$user_status_type_luPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_status_type_lus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_status_type_luCountArgs} args - Arguments to filter User_status_type_lus to count.
     * @example
     * // Count the number of User_status_type_lus
     * const count = await prisma.user_status_type_lu.count({
     *   where: {
     *     // ... the filter for the User_status_type_lus we want to count
     *   }
     * })
    **/
    count<T extends user_status_type_luCountArgs>(
      args?: Subset<T, user_status_type_luCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_status_type_luCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_status_type_lu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_status_type_luAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_status_type_luAggregateArgs>(args: Subset<T, User_status_type_luAggregateArgs>): Prisma.PrismaPromise<GetUser_status_type_luAggregateType<T>>

    /**
     * Group by User_status_type_lu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_status_type_luGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_status_type_luGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_status_type_luGroupByArgs['orderBy'] }
        : { orderBy?: user_status_type_luGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_status_type_luGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_status_type_luGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_status_type_lu model
   */
  readonly fields: user_status_type_luFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_status_type_lu.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_status_type_luClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user_status<T extends user_status_type_lu$user_statusArgs<ExtArgs> = {}>(args?: Subset<T, user_status_type_lu$user_statusArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_statusPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_status_type_lu model
   */
  interface user_status_type_luFieldRefs {
    readonly user_status_type_id: FieldRef<"user_status_type_lu", 'Decimal'>
    readonly description: FieldRef<"user_status_type_lu", 'String'>
  }
    

  // Custom InputTypes
  /**
   * user_status_type_lu findUnique
   */
  export type user_status_type_luFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status_type_lu
     */
    select?: user_status_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status_type_lu
     */
    omit?: user_status_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_status_type_luInclude<ExtArgs> | null
    /**
     * Filter, which user_status_type_lu to fetch.
     */
    where: user_status_type_luWhereUniqueInput
  }

  /**
   * user_status_type_lu findUniqueOrThrow
   */
  export type user_status_type_luFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status_type_lu
     */
    select?: user_status_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status_type_lu
     */
    omit?: user_status_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_status_type_luInclude<ExtArgs> | null
    /**
     * Filter, which user_status_type_lu to fetch.
     */
    where: user_status_type_luWhereUniqueInput
  }

  /**
   * user_status_type_lu findFirst
   */
  export type user_status_type_luFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status_type_lu
     */
    select?: user_status_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status_type_lu
     */
    omit?: user_status_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_status_type_luInclude<ExtArgs> | null
    /**
     * Filter, which user_status_type_lu to fetch.
     */
    where?: user_status_type_luWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_status_type_lus to fetch.
     */
    orderBy?: user_status_type_luOrderByWithRelationInput | user_status_type_luOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_status_type_lus.
     */
    cursor?: user_status_type_luWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_status_type_lus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_status_type_lus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_status_type_lus.
     */
    distinct?: User_status_type_luScalarFieldEnum | User_status_type_luScalarFieldEnum[]
  }

  /**
   * user_status_type_lu findFirstOrThrow
   */
  export type user_status_type_luFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status_type_lu
     */
    select?: user_status_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status_type_lu
     */
    omit?: user_status_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_status_type_luInclude<ExtArgs> | null
    /**
     * Filter, which user_status_type_lu to fetch.
     */
    where?: user_status_type_luWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_status_type_lus to fetch.
     */
    orderBy?: user_status_type_luOrderByWithRelationInput | user_status_type_luOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_status_type_lus.
     */
    cursor?: user_status_type_luWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_status_type_lus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_status_type_lus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_status_type_lus.
     */
    distinct?: User_status_type_luScalarFieldEnum | User_status_type_luScalarFieldEnum[]
  }

  /**
   * user_status_type_lu findMany
   */
  export type user_status_type_luFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status_type_lu
     */
    select?: user_status_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status_type_lu
     */
    omit?: user_status_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_status_type_luInclude<ExtArgs> | null
    /**
     * Filter, which user_status_type_lus to fetch.
     */
    where?: user_status_type_luWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_status_type_lus to fetch.
     */
    orderBy?: user_status_type_luOrderByWithRelationInput | user_status_type_luOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_status_type_lus.
     */
    cursor?: user_status_type_luWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_status_type_lus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_status_type_lus.
     */
    skip?: number
    distinct?: User_status_type_luScalarFieldEnum | User_status_type_luScalarFieldEnum[]
  }

  /**
   * user_status_type_lu create
   */
  export type user_status_type_luCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status_type_lu
     */
    select?: user_status_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status_type_lu
     */
    omit?: user_status_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_status_type_luInclude<ExtArgs> | null
    /**
     * The data needed to create a user_status_type_lu.
     */
    data: XOR<user_status_type_luCreateInput, user_status_type_luUncheckedCreateInput>
  }

  /**
   * user_status_type_lu createMany
   */
  export type user_status_type_luCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_status_type_lus.
     */
    data: user_status_type_luCreateManyInput | user_status_type_luCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_status_type_lu createManyAndReturn
   */
  export type user_status_type_luCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status_type_lu
     */
    select?: user_status_type_luSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_status_type_lu
     */
    omit?: user_status_type_luOmit<ExtArgs> | null
    /**
     * The data used to create many user_status_type_lus.
     */
    data: user_status_type_luCreateManyInput | user_status_type_luCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_status_type_lu update
   */
  export type user_status_type_luUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status_type_lu
     */
    select?: user_status_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status_type_lu
     */
    omit?: user_status_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_status_type_luInclude<ExtArgs> | null
    /**
     * The data needed to update a user_status_type_lu.
     */
    data: XOR<user_status_type_luUpdateInput, user_status_type_luUncheckedUpdateInput>
    /**
     * Choose, which user_status_type_lu to update.
     */
    where: user_status_type_luWhereUniqueInput
  }

  /**
   * user_status_type_lu updateMany
   */
  export type user_status_type_luUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_status_type_lus.
     */
    data: XOR<user_status_type_luUpdateManyMutationInput, user_status_type_luUncheckedUpdateManyInput>
    /**
     * Filter which user_status_type_lus to update
     */
    where?: user_status_type_luWhereInput
    /**
     * Limit how many user_status_type_lus to update.
     */
    limit?: number
  }

  /**
   * user_status_type_lu updateManyAndReturn
   */
  export type user_status_type_luUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status_type_lu
     */
    select?: user_status_type_luSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_status_type_lu
     */
    omit?: user_status_type_luOmit<ExtArgs> | null
    /**
     * The data used to update user_status_type_lus.
     */
    data: XOR<user_status_type_luUpdateManyMutationInput, user_status_type_luUncheckedUpdateManyInput>
    /**
     * Filter which user_status_type_lus to update
     */
    where?: user_status_type_luWhereInput
    /**
     * Limit how many user_status_type_lus to update.
     */
    limit?: number
  }

  /**
   * user_status_type_lu upsert
   */
  export type user_status_type_luUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status_type_lu
     */
    select?: user_status_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status_type_lu
     */
    omit?: user_status_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_status_type_luInclude<ExtArgs> | null
    /**
     * The filter to search for the user_status_type_lu to update in case it exists.
     */
    where: user_status_type_luWhereUniqueInput
    /**
     * In case the user_status_type_lu found by the `where` argument doesn't exist, create a new user_status_type_lu with this data.
     */
    create: XOR<user_status_type_luCreateInput, user_status_type_luUncheckedCreateInput>
    /**
     * In case the user_status_type_lu was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_status_type_luUpdateInput, user_status_type_luUncheckedUpdateInput>
  }

  /**
   * user_status_type_lu delete
   */
  export type user_status_type_luDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status_type_lu
     */
    select?: user_status_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status_type_lu
     */
    omit?: user_status_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_status_type_luInclude<ExtArgs> | null
    /**
     * Filter which user_status_type_lu to delete.
     */
    where: user_status_type_luWhereUniqueInput
  }

  /**
   * user_status_type_lu deleteMany
   */
  export type user_status_type_luDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_status_type_lus to delete
     */
    where?: user_status_type_luWhereInput
    /**
     * Limit how many user_status_type_lus to delete.
     */
    limit?: number
  }

  /**
   * user_status_type_lu.user_status
   */
  export type user_status_type_lu$user_statusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status
     */
    select?: user_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status
     */
    omit?: user_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_statusInclude<ExtArgs> | null
    where?: user_statusWhereInput
    orderBy?: user_statusOrderByWithRelationInput | user_statusOrderByWithRelationInput[]
    cursor?: user_statusWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_statusScalarFieldEnum | User_statusScalarFieldEnum[]
  }

  /**
   * user_status_type_lu without action
   */
  export type user_status_type_luDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_status_type_lu
     */
    select?: user_status_type_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_status_type_lu
     */
    omit?: user_status_type_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_status_type_luInclude<ExtArgs> | null
  }


  /**
   * Model user_email_xref
   */

  export type AggregateUser_email_xref = {
    _count: User_email_xrefCountAggregateOutputType | null
    _avg: User_email_xrefAvgAggregateOutputType | null
    _sum: User_email_xrefSumAggregateOutputType | null
    _min: User_email_xrefMinAggregateOutputType | null
    _max: User_email_xrefMaxAggregateOutputType | null
  }

  export type User_email_xrefAvgAggregateOutputType = {
    user_id: Decimal | null
    email_id: Decimal | null
    status_id: Decimal | null
  }

  export type User_email_xrefSumAggregateOutputType = {
    user_id: Decimal | null
    email_id: Decimal | null
    status_id: Decimal | null
  }

  export type User_email_xrefMinAggregateOutputType = {
    user_id: Decimal | null
    email_id: Decimal | null
    is_primary: boolean | null
    status_id: Decimal | null
    create_date: Date | null
    modify_date: Date | null
  }

  export type User_email_xrefMaxAggregateOutputType = {
    user_id: Decimal | null
    email_id: Decimal | null
    is_primary: boolean | null
    status_id: Decimal | null
    create_date: Date | null
    modify_date: Date | null
  }

  export type User_email_xrefCountAggregateOutputType = {
    user_id: number
    email_id: number
    is_primary: number
    status_id: number
    create_date: number
    modify_date: number
    _all: number
  }


  export type User_email_xrefAvgAggregateInputType = {
    user_id?: true
    email_id?: true
    status_id?: true
  }

  export type User_email_xrefSumAggregateInputType = {
    user_id?: true
    email_id?: true
    status_id?: true
  }

  export type User_email_xrefMinAggregateInputType = {
    user_id?: true
    email_id?: true
    is_primary?: true
    status_id?: true
    create_date?: true
    modify_date?: true
  }

  export type User_email_xrefMaxAggregateInputType = {
    user_id?: true
    email_id?: true
    is_primary?: true
    status_id?: true
    create_date?: true
    modify_date?: true
  }

  export type User_email_xrefCountAggregateInputType = {
    user_id?: true
    email_id?: true
    is_primary?: true
    status_id?: true
    create_date?: true
    modify_date?: true
    _all?: true
  }

  export type User_email_xrefAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_email_xref to aggregate.
     */
    where?: user_email_xrefWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_email_xrefs to fetch.
     */
    orderBy?: user_email_xrefOrderByWithRelationInput | user_email_xrefOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_email_xrefWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_email_xrefs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_email_xrefs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_email_xrefs
    **/
    _count?: true | User_email_xrefCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_email_xrefAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_email_xrefSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_email_xrefMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_email_xrefMaxAggregateInputType
  }

  export type GetUser_email_xrefAggregateType<T extends User_email_xrefAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_email_xref]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_email_xref[P]>
      : GetScalarType<T[P], AggregateUser_email_xref[P]>
  }




  export type user_email_xrefGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_email_xrefWhereInput
    orderBy?: user_email_xrefOrderByWithAggregationInput | user_email_xrefOrderByWithAggregationInput[]
    by: User_email_xrefScalarFieldEnum[] | User_email_xrefScalarFieldEnum
    having?: user_email_xrefScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_email_xrefCountAggregateInputType | true
    _avg?: User_email_xrefAvgAggregateInputType
    _sum?: User_email_xrefSumAggregateInputType
    _min?: User_email_xrefMinAggregateInputType
    _max?: User_email_xrefMaxAggregateInputType
  }

  export type User_email_xrefGroupByOutputType = {
    user_id: Decimal
    email_id: Decimal
    is_primary: boolean
    status_id: Decimal
    create_date: Date | null
    modify_date: Date | null
    _count: User_email_xrefCountAggregateOutputType | null
    _avg: User_email_xrefAvgAggregateOutputType | null
    _sum: User_email_xrefSumAggregateOutputType | null
    _min: User_email_xrefMinAggregateOutputType | null
    _max: User_email_xrefMaxAggregateOutputType | null
  }

  type GetUser_email_xrefGroupByPayload<T extends user_email_xrefGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_email_xrefGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_email_xrefGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_email_xrefGroupByOutputType[P]>
            : GetScalarType<T[P], User_email_xrefGroupByOutputType[P]>
        }
      >
    >


  export type user_email_xrefSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    email_id?: boolean
    is_primary?: boolean
    status_id?: boolean
    create_date?: boolean
    modify_date?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    email?: boolean | emailDefaultArgs<ExtArgs>
    email_status_lu?: boolean | user_email_xref$email_status_luArgs<ExtArgs>
  }, ExtArgs["result"]["user_email_xref"]>

  export type user_email_xrefSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    email_id?: boolean
    is_primary?: boolean
    status_id?: boolean
    create_date?: boolean
    modify_date?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    email?: boolean | emailDefaultArgs<ExtArgs>
    email_status_lu?: boolean | user_email_xref$email_status_luArgs<ExtArgs>
  }, ExtArgs["result"]["user_email_xref"]>

  export type user_email_xrefSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    email_id?: boolean
    is_primary?: boolean
    status_id?: boolean
    create_date?: boolean
    modify_date?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    email?: boolean | emailDefaultArgs<ExtArgs>
    email_status_lu?: boolean | user_email_xref$email_status_luArgs<ExtArgs>
  }, ExtArgs["result"]["user_email_xref"]>

  export type user_email_xrefSelectScalar = {
    user_id?: boolean
    email_id?: boolean
    is_primary?: boolean
    status_id?: boolean
    create_date?: boolean
    modify_date?: boolean
  }

  export type user_email_xrefOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"user_id" | "email_id" | "is_primary" | "status_id" | "create_date" | "modify_date", ExtArgs["result"]["user_email_xref"]>
  export type user_email_xrefInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    email?: boolean | emailDefaultArgs<ExtArgs>
    email_status_lu?: boolean | user_email_xref$email_status_luArgs<ExtArgs>
  }
  export type user_email_xrefIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    email?: boolean | emailDefaultArgs<ExtArgs>
    email_status_lu?: boolean | user_email_xref$email_status_luArgs<ExtArgs>
  }
  export type user_email_xrefIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    email?: boolean | emailDefaultArgs<ExtArgs>
    email_status_lu?: boolean | user_email_xref$email_status_luArgs<ExtArgs>
  }

  export type $user_email_xrefPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_email_xref"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
      email: Prisma.$emailPayload<ExtArgs>
      email_status_lu: Prisma.$email_status_luPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      user_id: Prisma.Decimal
      email_id: Prisma.Decimal
      is_primary: boolean
      status_id: Prisma.Decimal
      create_date: Date | null
      modify_date: Date | null
    }, ExtArgs["result"]["user_email_xref"]>
    composites: {}
  }

  type user_email_xrefGetPayload<S extends boolean | null | undefined | user_email_xrefDefaultArgs> = $Result.GetResult<Prisma.$user_email_xrefPayload, S>

  type user_email_xrefCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_email_xrefFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_email_xrefCountAggregateInputType | true
    }

  export interface user_email_xrefDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_email_xref'], meta: { name: 'user_email_xref' } }
    /**
     * Find zero or one User_email_xref that matches the filter.
     * @param {user_email_xrefFindUniqueArgs} args - Arguments to find a User_email_xref
     * @example
     * // Get one User_email_xref
     * const user_email_xref = await prisma.user_email_xref.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_email_xrefFindUniqueArgs>(args: SelectSubset<T, user_email_xrefFindUniqueArgs<ExtArgs>>): Prisma__user_email_xrefClient<$Result.GetResult<Prisma.$user_email_xrefPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_email_xref that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_email_xrefFindUniqueOrThrowArgs} args - Arguments to find a User_email_xref
     * @example
     * // Get one User_email_xref
     * const user_email_xref = await prisma.user_email_xref.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_email_xrefFindUniqueOrThrowArgs>(args: SelectSubset<T, user_email_xrefFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_email_xrefClient<$Result.GetResult<Prisma.$user_email_xrefPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_email_xref that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_email_xrefFindFirstArgs} args - Arguments to find a User_email_xref
     * @example
     * // Get one User_email_xref
     * const user_email_xref = await prisma.user_email_xref.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_email_xrefFindFirstArgs>(args?: SelectSubset<T, user_email_xrefFindFirstArgs<ExtArgs>>): Prisma__user_email_xrefClient<$Result.GetResult<Prisma.$user_email_xrefPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_email_xref that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_email_xrefFindFirstOrThrowArgs} args - Arguments to find a User_email_xref
     * @example
     * // Get one User_email_xref
     * const user_email_xref = await prisma.user_email_xref.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_email_xrefFindFirstOrThrowArgs>(args?: SelectSubset<T, user_email_xrefFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_email_xrefClient<$Result.GetResult<Prisma.$user_email_xrefPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_email_xrefs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_email_xrefFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_email_xrefs
     * const user_email_xrefs = await prisma.user_email_xref.findMany()
     * 
     * // Get first 10 User_email_xrefs
     * const user_email_xrefs = await prisma.user_email_xref.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const user_email_xrefWithUser_idOnly = await prisma.user_email_xref.findMany({ select: { user_id: true } })
     * 
     */
    findMany<T extends user_email_xrefFindManyArgs>(args?: SelectSubset<T, user_email_xrefFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_email_xrefPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_email_xref.
     * @param {user_email_xrefCreateArgs} args - Arguments to create a User_email_xref.
     * @example
     * // Create one User_email_xref
     * const User_email_xref = await prisma.user_email_xref.create({
     *   data: {
     *     // ... data to create a User_email_xref
     *   }
     * })
     * 
     */
    create<T extends user_email_xrefCreateArgs>(args: SelectSubset<T, user_email_xrefCreateArgs<ExtArgs>>): Prisma__user_email_xrefClient<$Result.GetResult<Prisma.$user_email_xrefPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_email_xrefs.
     * @param {user_email_xrefCreateManyArgs} args - Arguments to create many User_email_xrefs.
     * @example
     * // Create many User_email_xrefs
     * const user_email_xref = await prisma.user_email_xref.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_email_xrefCreateManyArgs>(args?: SelectSubset<T, user_email_xrefCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_email_xrefs and returns the data saved in the database.
     * @param {user_email_xrefCreateManyAndReturnArgs} args - Arguments to create many User_email_xrefs.
     * @example
     * // Create many User_email_xrefs
     * const user_email_xref = await prisma.user_email_xref.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_email_xrefs and only return the `user_id`
     * const user_email_xrefWithUser_idOnly = await prisma.user_email_xref.createManyAndReturn({
     *   select: { user_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_email_xrefCreateManyAndReturnArgs>(args?: SelectSubset<T, user_email_xrefCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_email_xrefPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_email_xref.
     * @param {user_email_xrefDeleteArgs} args - Arguments to delete one User_email_xref.
     * @example
     * // Delete one User_email_xref
     * const User_email_xref = await prisma.user_email_xref.delete({
     *   where: {
     *     // ... filter to delete one User_email_xref
     *   }
     * })
     * 
     */
    delete<T extends user_email_xrefDeleteArgs>(args: SelectSubset<T, user_email_xrefDeleteArgs<ExtArgs>>): Prisma__user_email_xrefClient<$Result.GetResult<Prisma.$user_email_xrefPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_email_xref.
     * @param {user_email_xrefUpdateArgs} args - Arguments to update one User_email_xref.
     * @example
     * // Update one User_email_xref
     * const user_email_xref = await prisma.user_email_xref.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_email_xrefUpdateArgs>(args: SelectSubset<T, user_email_xrefUpdateArgs<ExtArgs>>): Prisma__user_email_xrefClient<$Result.GetResult<Prisma.$user_email_xrefPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_email_xrefs.
     * @param {user_email_xrefDeleteManyArgs} args - Arguments to filter User_email_xrefs to delete.
     * @example
     * // Delete a few User_email_xrefs
     * const { count } = await prisma.user_email_xref.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_email_xrefDeleteManyArgs>(args?: SelectSubset<T, user_email_xrefDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_email_xrefs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_email_xrefUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_email_xrefs
     * const user_email_xref = await prisma.user_email_xref.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_email_xrefUpdateManyArgs>(args: SelectSubset<T, user_email_xrefUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_email_xrefs and returns the data updated in the database.
     * @param {user_email_xrefUpdateManyAndReturnArgs} args - Arguments to update many User_email_xrefs.
     * @example
     * // Update many User_email_xrefs
     * const user_email_xref = await prisma.user_email_xref.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_email_xrefs and only return the `user_id`
     * const user_email_xrefWithUser_idOnly = await prisma.user_email_xref.updateManyAndReturn({
     *   select: { user_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_email_xrefUpdateManyAndReturnArgs>(args: SelectSubset<T, user_email_xrefUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_email_xrefPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_email_xref.
     * @param {user_email_xrefUpsertArgs} args - Arguments to update or create a User_email_xref.
     * @example
     * // Update or create a User_email_xref
     * const user_email_xref = await prisma.user_email_xref.upsert({
     *   create: {
     *     // ... data to create a User_email_xref
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_email_xref we want to update
     *   }
     * })
     */
    upsert<T extends user_email_xrefUpsertArgs>(args: SelectSubset<T, user_email_xrefUpsertArgs<ExtArgs>>): Prisma__user_email_xrefClient<$Result.GetResult<Prisma.$user_email_xrefPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_email_xrefs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_email_xrefCountArgs} args - Arguments to filter User_email_xrefs to count.
     * @example
     * // Count the number of User_email_xrefs
     * const count = await prisma.user_email_xref.count({
     *   where: {
     *     // ... the filter for the User_email_xrefs we want to count
     *   }
     * })
    **/
    count<T extends user_email_xrefCountArgs>(
      args?: Subset<T, user_email_xrefCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_email_xrefCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_email_xref.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_email_xrefAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_email_xrefAggregateArgs>(args: Subset<T, User_email_xrefAggregateArgs>): Prisma.PrismaPromise<GetUser_email_xrefAggregateType<T>>

    /**
     * Group by User_email_xref.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_email_xrefGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_email_xrefGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_email_xrefGroupByArgs['orderBy'] }
        : { orderBy?: user_email_xrefGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_email_xrefGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_email_xrefGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_email_xref model
   */
  readonly fields: user_email_xrefFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_email_xref.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_email_xrefClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    email<T extends emailDefaultArgs<ExtArgs> = {}>(args?: Subset<T, emailDefaultArgs<ExtArgs>>): Prisma__emailClient<$Result.GetResult<Prisma.$emailPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    email_status_lu<T extends user_email_xref$email_status_luArgs<ExtArgs> = {}>(args?: Subset<T, user_email_xref$email_status_luArgs<ExtArgs>>): Prisma__email_status_luClient<$Result.GetResult<Prisma.$email_status_luPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_email_xref model
   */
  interface user_email_xrefFieldRefs {
    readonly user_id: FieldRef<"user_email_xref", 'Decimal'>
    readonly email_id: FieldRef<"user_email_xref", 'Decimal'>
    readonly is_primary: FieldRef<"user_email_xref", 'Boolean'>
    readonly status_id: FieldRef<"user_email_xref", 'Decimal'>
    readonly create_date: FieldRef<"user_email_xref", 'DateTime'>
    readonly modify_date: FieldRef<"user_email_xref", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_email_xref findUnique
   */
  export type user_email_xrefFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_email_xref
     */
    select?: user_email_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_email_xref
     */
    omit?: user_email_xrefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_email_xrefInclude<ExtArgs> | null
    /**
     * Filter, which user_email_xref to fetch.
     */
    where: user_email_xrefWhereUniqueInput
  }

  /**
   * user_email_xref findUniqueOrThrow
   */
  export type user_email_xrefFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_email_xref
     */
    select?: user_email_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_email_xref
     */
    omit?: user_email_xrefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_email_xrefInclude<ExtArgs> | null
    /**
     * Filter, which user_email_xref to fetch.
     */
    where: user_email_xrefWhereUniqueInput
  }

  /**
   * user_email_xref findFirst
   */
  export type user_email_xrefFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_email_xref
     */
    select?: user_email_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_email_xref
     */
    omit?: user_email_xrefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_email_xrefInclude<ExtArgs> | null
    /**
     * Filter, which user_email_xref to fetch.
     */
    where?: user_email_xrefWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_email_xrefs to fetch.
     */
    orderBy?: user_email_xrefOrderByWithRelationInput | user_email_xrefOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_email_xrefs.
     */
    cursor?: user_email_xrefWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_email_xrefs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_email_xrefs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_email_xrefs.
     */
    distinct?: User_email_xrefScalarFieldEnum | User_email_xrefScalarFieldEnum[]
  }

  /**
   * user_email_xref findFirstOrThrow
   */
  export type user_email_xrefFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_email_xref
     */
    select?: user_email_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_email_xref
     */
    omit?: user_email_xrefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_email_xrefInclude<ExtArgs> | null
    /**
     * Filter, which user_email_xref to fetch.
     */
    where?: user_email_xrefWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_email_xrefs to fetch.
     */
    orderBy?: user_email_xrefOrderByWithRelationInput | user_email_xrefOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_email_xrefs.
     */
    cursor?: user_email_xrefWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_email_xrefs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_email_xrefs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_email_xrefs.
     */
    distinct?: User_email_xrefScalarFieldEnum | User_email_xrefScalarFieldEnum[]
  }

  /**
   * user_email_xref findMany
   */
  export type user_email_xrefFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_email_xref
     */
    select?: user_email_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_email_xref
     */
    omit?: user_email_xrefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_email_xrefInclude<ExtArgs> | null
    /**
     * Filter, which user_email_xrefs to fetch.
     */
    where?: user_email_xrefWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_email_xrefs to fetch.
     */
    orderBy?: user_email_xrefOrderByWithRelationInput | user_email_xrefOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_email_xrefs.
     */
    cursor?: user_email_xrefWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_email_xrefs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_email_xrefs.
     */
    skip?: number
    distinct?: User_email_xrefScalarFieldEnum | User_email_xrefScalarFieldEnum[]
  }

  /**
   * user_email_xref create
   */
  export type user_email_xrefCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_email_xref
     */
    select?: user_email_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_email_xref
     */
    omit?: user_email_xrefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_email_xrefInclude<ExtArgs> | null
    /**
     * The data needed to create a user_email_xref.
     */
    data: XOR<user_email_xrefCreateInput, user_email_xrefUncheckedCreateInput>
  }

  /**
   * user_email_xref createMany
   */
  export type user_email_xrefCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_email_xrefs.
     */
    data: user_email_xrefCreateManyInput | user_email_xrefCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_email_xref createManyAndReturn
   */
  export type user_email_xrefCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_email_xref
     */
    select?: user_email_xrefSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_email_xref
     */
    omit?: user_email_xrefOmit<ExtArgs> | null
    /**
     * The data used to create many user_email_xrefs.
     */
    data: user_email_xrefCreateManyInput | user_email_xrefCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_email_xrefIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_email_xref update
   */
  export type user_email_xrefUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_email_xref
     */
    select?: user_email_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_email_xref
     */
    omit?: user_email_xrefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_email_xrefInclude<ExtArgs> | null
    /**
     * The data needed to update a user_email_xref.
     */
    data: XOR<user_email_xrefUpdateInput, user_email_xrefUncheckedUpdateInput>
    /**
     * Choose, which user_email_xref to update.
     */
    where: user_email_xrefWhereUniqueInput
  }

  /**
   * user_email_xref updateMany
   */
  export type user_email_xrefUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_email_xrefs.
     */
    data: XOR<user_email_xrefUpdateManyMutationInput, user_email_xrefUncheckedUpdateManyInput>
    /**
     * Filter which user_email_xrefs to update
     */
    where?: user_email_xrefWhereInput
    /**
     * Limit how many user_email_xrefs to update.
     */
    limit?: number
  }

  /**
   * user_email_xref updateManyAndReturn
   */
  export type user_email_xrefUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_email_xref
     */
    select?: user_email_xrefSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_email_xref
     */
    omit?: user_email_xrefOmit<ExtArgs> | null
    /**
     * The data used to update user_email_xrefs.
     */
    data: XOR<user_email_xrefUpdateManyMutationInput, user_email_xrefUncheckedUpdateManyInput>
    /**
     * Filter which user_email_xrefs to update
     */
    where?: user_email_xrefWhereInput
    /**
     * Limit how many user_email_xrefs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_email_xrefIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_email_xref upsert
   */
  export type user_email_xrefUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_email_xref
     */
    select?: user_email_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_email_xref
     */
    omit?: user_email_xrefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_email_xrefInclude<ExtArgs> | null
    /**
     * The filter to search for the user_email_xref to update in case it exists.
     */
    where: user_email_xrefWhereUniqueInput
    /**
     * In case the user_email_xref found by the `where` argument doesn't exist, create a new user_email_xref with this data.
     */
    create: XOR<user_email_xrefCreateInput, user_email_xrefUncheckedCreateInput>
    /**
     * In case the user_email_xref was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_email_xrefUpdateInput, user_email_xrefUncheckedUpdateInput>
  }

  /**
   * user_email_xref delete
   */
  export type user_email_xrefDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_email_xref
     */
    select?: user_email_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_email_xref
     */
    omit?: user_email_xrefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_email_xrefInclude<ExtArgs> | null
    /**
     * Filter which user_email_xref to delete.
     */
    where: user_email_xrefWhereUniqueInput
  }

  /**
   * user_email_xref deleteMany
   */
  export type user_email_xrefDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_email_xrefs to delete
     */
    where?: user_email_xrefWhereInput
    /**
     * Limit how many user_email_xrefs to delete.
     */
    limit?: number
  }

  /**
   * user_email_xref.email_status_lu
   */
  export type user_email_xref$email_status_luArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_status_lu
     */
    select?: email_status_luSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_status_lu
     */
    omit?: email_status_luOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: email_status_luInclude<ExtArgs> | null
    where?: email_status_luWhereInput
  }

  /**
   * user_email_xref without action
   */
  export type user_email_xrefDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_email_xref
     */
    select?: user_email_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_email_xref
     */
    omit?: user_email_xrefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_email_xrefInclude<ExtArgs> | null
  }


  /**
   * Model Client
   */

  export type AggregateClient = {
    _count: ClientCountAggregateOutputType | null
    _avg: ClientAvgAggregateOutputType | null
    _sum: ClientSumAggregateOutputType | null
    _min: ClientMinAggregateOutputType | null
    _max: ClientMaxAggregateOutputType | null
  }

  export type ClientAvgAggregateOutputType = {
    id: number | null
    createdBy: number | null
    modifiedBy: number | null
  }

  export type ClientSumAggregateOutputType = {
    id: number | null
    createdBy: number | null
    modifiedBy: number | null
  }

  export type ClientMinAggregateOutputType = {
    id: number | null
    clientId: string | null
    name: string | null
    redirectUri: string | null
    secret: string | null
    createdBy: number | null
    createdAt: Date | null
    modifiedBy: number | null
    modifiedAt: Date | null
  }

  export type ClientMaxAggregateOutputType = {
    id: number | null
    clientId: string | null
    name: string | null
    redirectUri: string | null
    secret: string | null
    createdBy: number | null
    createdAt: Date | null
    modifiedBy: number | null
    modifiedAt: Date | null
  }

  export type ClientCountAggregateOutputType = {
    id: number
    clientId: number
    name: number
    redirectUri: number
    secret: number
    createdBy: number
    createdAt: number
    modifiedBy: number
    modifiedAt: number
    _all: number
  }


  export type ClientAvgAggregateInputType = {
    id?: true
    createdBy?: true
    modifiedBy?: true
  }

  export type ClientSumAggregateInputType = {
    id?: true
    createdBy?: true
    modifiedBy?: true
  }

  export type ClientMinAggregateInputType = {
    id?: true
    clientId?: true
    name?: true
    redirectUri?: true
    secret?: true
    createdBy?: true
    createdAt?: true
    modifiedBy?: true
    modifiedAt?: true
  }

  export type ClientMaxAggregateInputType = {
    id?: true
    clientId?: true
    name?: true
    redirectUri?: true
    secret?: true
    createdBy?: true
    createdAt?: true
    modifiedBy?: true
    modifiedAt?: true
  }

  export type ClientCountAggregateInputType = {
    id?: true
    clientId?: true
    name?: true
    redirectUri?: true
    secret?: true
    createdBy?: true
    createdAt?: true
    modifiedBy?: true
    modifiedAt?: true
    _all?: true
  }

  export type ClientAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Client to aggregate.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Clients
    **/
    _count?: true | ClientCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClientAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClientSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClientMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClientMaxAggregateInputType
  }

  export type GetClientAggregateType<T extends ClientAggregateArgs> = {
        [P in keyof T & keyof AggregateClient]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClient[P]>
      : GetScalarType<T[P], AggregateClient[P]>
  }




  export type ClientGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientWhereInput
    orderBy?: ClientOrderByWithAggregationInput | ClientOrderByWithAggregationInput[]
    by: ClientScalarFieldEnum[] | ClientScalarFieldEnum
    having?: ClientScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClientCountAggregateInputType | true
    _avg?: ClientAvgAggregateInputType
    _sum?: ClientSumAggregateInputType
    _min?: ClientMinAggregateInputType
    _max?: ClientMaxAggregateInputType
  }

  export type ClientGroupByOutputType = {
    id: number
    clientId: string
    name: string
    redirectUri: string | null
    secret: string | null
    createdBy: number | null
    createdAt: Date | null
    modifiedBy: number | null
    modifiedAt: Date | null
    _count: ClientCountAggregateOutputType | null
    _avg: ClientAvgAggregateOutputType | null
    _sum: ClientSumAggregateOutputType | null
    _min: ClientMinAggregateOutputType | null
    _max: ClientMaxAggregateOutputType | null
  }

  type GetClientGroupByPayload<T extends ClientGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClientGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClientGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClientGroupByOutputType[P]>
            : GetScalarType<T[P], ClientGroupByOutputType[P]>
        }
      >
    >


  export type ClientSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    name?: boolean
    redirectUri?: boolean
    secret?: boolean
    createdBy?: boolean
    createdAt?: boolean
    modifiedBy?: boolean
    modifiedAt?: boolean
  }, ExtArgs["result"]["client"]>

  export type ClientSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    name?: boolean
    redirectUri?: boolean
    secret?: boolean
    createdBy?: boolean
    createdAt?: boolean
    modifiedBy?: boolean
    modifiedAt?: boolean
  }, ExtArgs["result"]["client"]>

  export type ClientSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    name?: boolean
    redirectUri?: boolean
    secret?: boolean
    createdBy?: boolean
    createdAt?: boolean
    modifiedBy?: boolean
    modifiedAt?: boolean
  }, ExtArgs["result"]["client"]>

  export type ClientSelectScalar = {
    id?: boolean
    clientId?: boolean
    name?: boolean
    redirectUri?: boolean
    secret?: boolean
    createdBy?: boolean
    createdAt?: boolean
    modifiedBy?: boolean
    modifiedAt?: boolean
  }

  export type ClientOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "clientId" | "name" | "redirectUri" | "secret" | "createdBy" | "createdAt" | "modifiedBy" | "modifiedAt", ExtArgs["result"]["client"]>

  export type $ClientPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Client"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      clientId: string
      name: string
      redirectUri: string | null
      secret: string | null
      createdBy: number | null
      createdAt: Date | null
      modifiedBy: number | null
      modifiedAt: Date | null
    }, ExtArgs["result"]["client"]>
    composites: {}
  }

  type ClientGetPayload<S extends boolean | null | undefined | ClientDefaultArgs> = $Result.GetResult<Prisma.$ClientPayload, S>

  type ClientCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ClientFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ClientCountAggregateInputType | true
    }

  export interface ClientDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Client'], meta: { name: 'Client' } }
    /**
     * Find zero or one Client that matches the filter.
     * @param {ClientFindUniqueArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClientFindUniqueArgs>(args: SelectSubset<T, ClientFindUniqueArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Client that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ClientFindUniqueOrThrowArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClientFindUniqueOrThrowArgs>(args: SelectSubset<T, ClientFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Client that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientFindFirstArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClientFindFirstArgs>(args?: SelectSubset<T, ClientFindFirstArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Client that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientFindFirstOrThrowArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClientFindFirstOrThrowArgs>(args?: SelectSubset<T, ClientFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Clients that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clients
     * const clients = await prisma.client.findMany()
     * 
     * // Get first 10 Clients
     * const clients = await prisma.client.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const clientWithIdOnly = await prisma.client.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ClientFindManyArgs>(args?: SelectSubset<T, ClientFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Client.
     * @param {ClientCreateArgs} args - Arguments to create a Client.
     * @example
     * // Create one Client
     * const Client = await prisma.client.create({
     *   data: {
     *     // ... data to create a Client
     *   }
     * })
     * 
     */
    create<T extends ClientCreateArgs>(args: SelectSubset<T, ClientCreateArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Clients.
     * @param {ClientCreateManyArgs} args - Arguments to create many Clients.
     * @example
     * // Create many Clients
     * const client = await prisma.client.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClientCreateManyArgs>(args?: SelectSubset<T, ClientCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Clients and returns the data saved in the database.
     * @param {ClientCreateManyAndReturnArgs} args - Arguments to create many Clients.
     * @example
     * // Create many Clients
     * const client = await prisma.client.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Clients and only return the `id`
     * const clientWithIdOnly = await prisma.client.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ClientCreateManyAndReturnArgs>(args?: SelectSubset<T, ClientCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Client.
     * @param {ClientDeleteArgs} args - Arguments to delete one Client.
     * @example
     * // Delete one Client
     * const Client = await prisma.client.delete({
     *   where: {
     *     // ... filter to delete one Client
     *   }
     * })
     * 
     */
    delete<T extends ClientDeleteArgs>(args: SelectSubset<T, ClientDeleteArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Client.
     * @param {ClientUpdateArgs} args - Arguments to update one Client.
     * @example
     * // Update one Client
     * const client = await prisma.client.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClientUpdateArgs>(args: SelectSubset<T, ClientUpdateArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Clients.
     * @param {ClientDeleteManyArgs} args - Arguments to filter Clients to delete.
     * @example
     * // Delete a few Clients
     * const { count } = await prisma.client.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClientDeleteManyArgs>(args?: SelectSubset<T, ClientDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clients
     * const client = await prisma.client.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClientUpdateManyArgs>(args: SelectSubset<T, ClientUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clients and returns the data updated in the database.
     * @param {ClientUpdateManyAndReturnArgs} args - Arguments to update many Clients.
     * @example
     * // Update many Clients
     * const client = await prisma.client.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Clients and only return the `id`
     * const clientWithIdOnly = await prisma.client.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ClientUpdateManyAndReturnArgs>(args: SelectSubset<T, ClientUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Client.
     * @param {ClientUpsertArgs} args - Arguments to update or create a Client.
     * @example
     * // Update or create a Client
     * const client = await prisma.client.upsert({
     *   create: {
     *     // ... data to create a Client
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Client we want to update
     *   }
     * })
     */
    upsert<T extends ClientUpsertArgs>(args: SelectSubset<T, ClientUpsertArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientCountArgs} args - Arguments to filter Clients to count.
     * @example
     * // Count the number of Clients
     * const count = await prisma.client.count({
     *   where: {
     *     // ... the filter for the Clients we want to count
     *   }
     * })
    **/
    count<T extends ClientCountArgs>(
      args?: Subset<T, ClientCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClientCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Client.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClientAggregateArgs>(args: Subset<T, ClientAggregateArgs>): Prisma.PrismaPromise<GetClientAggregateType<T>>

    /**
     * Group by Client.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClientGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClientGroupByArgs['orderBy'] }
        : { orderBy?: ClientGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClientGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClientGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Client model
   */
  readonly fields: ClientFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Client.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClientClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Client model
   */
  interface ClientFieldRefs {
    readonly id: FieldRef<"Client", 'Int'>
    readonly clientId: FieldRef<"Client", 'String'>
    readonly name: FieldRef<"Client", 'String'>
    readonly redirectUri: FieldRef<"Client", 'String'>
    readonly secret: FieldRef<"Client", 'String'>
    readonly createdBy: FieldRef<"Client", 'Int'>
    readonly createdAt: FieldRef<"Client", 'DateTime'>
    readonly modifiedBy: FieldRef<"Client", 'Int'>
    readonly modifiedAt: FieldRef<"Client", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Client findUnique
   */
  export type ClientFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client findUniqueOrThrow
   */
  export type ClientFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client findFirst
   */
  export type ClientFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clients.
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clients.
     */
    distinct?: ClientScalarFieldEnum | ClientScalarFieldEnum[]
  }

  /**
   * Client findFirstOrThrow
   */
  export type ClientFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clients.
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clients.
     */
    distinct?: ClientScalarFieldEnum | ClientScalarFieldEnum[]
  }

  /**
   * Client findMany
   */
  export type ClientFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Filter, which Clients to fetch.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Clients.
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    distinct?: ClientScalarFieldEnum | ClientScalarFieldEnum[]
  }

  /**
   * Client create
   */
  export type ClientCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * The data needed to create a Client.
     */
    data: XOR<ClientCreateInput, ClientUncheckedCreateInput>
  }

  /**
   * Client createMany
   */
  export type ClientCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Clients.
     */
    data: ClientCreateManyInput | ClientCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Client createManyAndReturn
   */
  export type ClientCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * The data used to create many Clients.
     */
    data: ClientCreateManyInput | ClientCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Client update
   */
  export type ClientUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * The data needed to update a Client.
     */
    data: XOR<ClientUpdateInput, ClientUncheckedUpdateInput>
    /**
     * Choose, which Client to update.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client updateMany
   */
  export type ClientUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Clients.
     */
    data: XOR<ClientUpdateManyMutationInput, ClientUncheckedUpdateManyInput>
    /**
     * Filter which Clients to update
     */
    where?: ClientWhereInput
    /**
     * Limit how many Clients to update.
     */
    limit?: number
  }

  /**
   * Client updateManyAndReturn
   */
  export type ClientUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * The data used to update Clients.
     */
    data: XOR<ClientUpdateManyMutationInput, ClientUncheckedUpdateManyInput>
    /**
     * Filter which Clients to update
     */
    where?: ClientWhereInput
    /**
     * Limit how many Clients to update.
     */
    limit?: number
  }

  /**
   * Client upsert
   */
  export type ClientUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * The filter to search for the Client to update in case it exists.
     */
    where: ClientWhereUniqueInput
    /**
     * In case the Client found by the `where` argument doesn't exist, create a new Client with this data.
     */
    create: XOR<ClientCreateInput, ClientUncheckedCreateInput>
    /**
     * In case the Client was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClientUpdateInput, ClientUncheckedUpdateInput>
  }

  /**
   * Client delete
   */
  export type ClientDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
    /**
     * Filter which Client to delete.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client deleteMany
   */
  export type ClientDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Clients to delete
     */
    where?: ClientWhereInput
    /**
     * Limit how many Clients to delete.
     */
    limit?: number
  }

  /**
   * Client without action
   */
  export type ClientDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Client
     */
    omit?: ClientOmit<ExtArgs> | null
  }


  /**
   * Model Role
   */

  export type AggregateRole = {
    _count: RoleCountAggregateOutputType | null
    _avg: RoleAvgAggregateOutputType | null
    _sum: RoleSumAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  export type RoleAvgAggregateOutputType = {
    id: number | null
    createdBy: number | null
    modifiedBy: number | null
  }

  export type RoleSumAggregateOutputType = {
    id: number | null
    createdBy: number | null
    modifiedBy: number | null
  }

  export type RoleMinAggregateOutputType = {
    id: number | null
    name: string | null
    createdBy: number | null
    createdAt: Date | null
    modifiedBy: number | null
    modifiedAt: Date | null
  }

  export type RoleMaxAggregateOutputType = {
    id: number | null
    name: string | null
    createdBy: number | null
    createdAt: Date | null
    modifiedBy: number | null
    modifiedAt: Date | null
  }

  export type RoleCountAggregateOutputType = {
    id: number
    name: number
    createdBy: number
    createdAt: number
    modifiedBy: number
    modifiedAt: number
    _all: number
  }


  export type RoleAvgAggregateInputType = {
    id?: true
    createdBy?: true
    modifiedBy?: true
  }

  export type RoleSumAggregateInputType = {
    id?: true
    createdBy?: true
    modifiedBy?: true
  }

  export type RoleMinAggregateInputType = {
    id?: true
    name?: true
    createdBy?: true
    createdAt?: true
    modifiedBy?: true
    modifiedAt?: true
  }

  export type RoleMaxAggregateInputType = {
    id?: true
    name?: true
    createdBy?: true
    createdAt?: true
    modifiedBy?: true
    modifiedAt?: true
  }

  export type RoleCountAggregateInputType = {
    id?: true
    name?: true
    createdBy?: true
    createdAt?: true
    modifiedBy?: true
    modifiedAt?: true
    _all?: true
  }

  export type RoleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Role to aggregate.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Roles
    **/
    _count?: true | RoleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RoleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RoleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoleMaxAggregateInputType
  }

  export type GetRoleAggregateType<T extends RoleAggregateArgs> = {
        [P in keyof T & keyof AggregateRole]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRole[P]>
      : GetScalarType<T[P], AggregateRole[P]>
  }




  export type RoleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithAggregationInput | RoleOrderByWithAggregationInput[]
    by: RoleScalarFieldEnum[] | RoleScalarFieldEnum
    having?: RoleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoleCountAggregateInputType | true
    _avg?: RoleAvgAggregateInputType
    _sum?: RoleSumAggregateInputType
    _min?: RoleMinAggregateInputType
    _max?: RoleMaxAggregateInputType
  }

  export type RoleGroupByOutputType = {
    id: number
    name: string
    createdBy: number | null
    createdAt: Date | null
    modifiedBy: number | null
    modifiedAt: Date | null
    _count: RoleCountAggregateOutputType | null
    _avg: RoleAvgAggregateOutputType | null
    _sum: RoleSumAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  type GetRoleGroupByPayload<T extends RoleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RoleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoleGroupByOutputType[P]>
            : GetScalarType<T[P], RoleGroupByOutputType[P]>
        }
      >
    >


  export type RoleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdBy?: boolean
    createdAt?: boolean
    modifiedBy?: boolean
    modifiedAt?: boolean
    roleAssignments?: boolean | Role$roleAssignmentsArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["role"]>

  export type RoleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdBy?: boolean
    createdAt?: boolean
    modifiedBy?: boolean
    modifiedAt?: boolean
  }, ExtArgs["result"]["role"]>

  export type RoleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdBy?: boolean
    createdAt?: boolean
    modifiedBy?: boolean
    modifiedAt?: boolean
  }, ExtArgs["result"]["role"]>

  export type RoleSelectScalar = {
    id?: boolean
    name?: boolean
    createdBy?: boolean
    createdAt?: boolean
    modifiedBy?: boolean
    modifiedAt?: boolean
  }

  export type RoleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "createdBy" | "createdAt" | "modifiedBy" | "modifiedAt", ExtArgs["result"]["role"]>
  export type RoleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    roleAssignments?: boolean | Role$roleAssignmentsArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RoleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type RoleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $RolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Role"
    objects: {
      roleAssignments: Prisma.$RoleAssignmentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      createdBy: number | null
      createdAt: Date | null
      modifiedBy: number | null
      modifiedAt: Date | null
    }, ExtArgs["result"]["role"]>
    composites: {}
  }

  type RoleGetPayload<S extends boolean | null | undefined | RoleDefaultArgs> = $Result.GetResult<Prisma.$RolePayload, S>

  type RoleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RoleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RoleCountAggregateInputType | true
    }

  export interface RoleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Role'], meta: { name: 'Role' } }
    /**
     * Find zero or one Role that matches the filter.
     * @param {RoleFindUniqueArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RoleFindUniqueArgs>(args: SelectSubset<T, RoleFindUniqueArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Role that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RoleFindUniqueOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RoleFindUniqueOrThrowArgs>(args: SelectSubset<T, RoleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RoleFindFirstArgs>(args?: SelectSubset<T, RoleFindFirstArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RoleFindFirstOrThrowArgs>(args?: SelectSubset<T, RoleFindFirstOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.role.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.role.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const roleWithIdOnly = await prisma.role.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RoleFindManyArgs>(args?: SelectSubset<T, RoleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Role.
     * @param {RoleCreateArgs} args - Arguments to create a Role.
     * @example
     * // Create one Role
     * const Role = await prisma.role.create({
     *   data: {
     *     // ... data to create a Role
     *   }
     * })
     * 
     */
    create<T extends RoleCreateArgs>(args: SelectSubset<T, RoleCreateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Roles.
     * @param {RoleCreateManyArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RoleCreateManyArgs>(args?: SelectSubset<T, RoleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Roles and returns the data saved in the database.
     * @param {RoleCreateManyAndReturnArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Roles and only return the `id`
     * const roleWithIdOnly = await prisma.role.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RoleCreateManyAndReturnArgs>(args?: SelectSubset<T, RoleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Role.
     * @param {RoleDeleteArgs} args - Arguments to delete one Role.
     * @example
     * // Delete one Role
     * const Role = await prisma.role.delete({
     *   where: {
     *     // ... filter to delete one Role
     *   }
     * })
     * 
     */
    delete<T extends RoleDeleteArgs>(args: SelectSubset<T, RoleDeleteArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Role.
     * @param {RoleUpdateArgs} args - Arguments to update one Role.
     * @example
     * // Update one Role
     * const role = await prisma.role.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RoleUpdateArgs>(args: SelectSubset<T, RoleUpdateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Roles.
     * @param {RoleDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.role.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RoleDeleteManyArgs>(args?: SelectSubset<T, RoleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RoleUpdateManyArgs>(args: SelectSubset<T, RoleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles and returns the data updated in the database.
     * @param {RoleUpdateManyAndReturnArgs} args - Arguments to update many Roles.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Roles and only return the `id`
     * const roleWithIdOnly = await prisma.role.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RoleUpdateManyAndReturnArgs>(args: SelectSubset<T, RoleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Role.
     * @param {RoleUpsertArgs} args - Arguments to update or create a Role.
     * @example
     * // Update or create a Role
     * const role = await prisma.role.upsert({
     *   create: {
     *     // ... data to create a Role
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Role we want to update
     *   }
     * })
     */
    upsert<T extends RoleUpsertArgs>(args: SelectSubset<T, RoleUpsertArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.role.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends RoleCountArgs>(
      args?: Subset<T, RoleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoleAggregateArgs>(args: Subset<T, RoleAggregateArgs>): Prisma.PrismaPromise<GetRoleAggregateType<T>>

    /**
     * Group by Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RoleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RoleGroupByArgs['orderBy'] }
        : { orderBy?: RoleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RoleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Role model
   */
  readonly fields: RoleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Role.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RoleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    roleAssignments<T extends Role$roleAssignmentsArgs<ExtArgs> = {}>(args?: Subset<T, Role$roleAssignmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoleAssignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Role model
   */
  interface RoleFieldRefs {
    readonly id: FieldRef<"Role", 'Int'>
    readonly name: FieldRef<"Role", 'String'>
    readonly createdBy: FieldRef<"Role", 'Int'>
    readonly createdAt: FieldRef<"Role", 'DateTime'>
    readonly modifiedBy: FieldRef<"Role", 'Int'>
    readonly modifiedAt: FieldRef<"Role", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Role findUnique
   */
  export type RoleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findUniqueOrThrow
   */
  export type RoleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findFirst
   */
  export type RoleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findFirstOrThrow
   */
  export type RoleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findMany
   */
  export type RoleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Roles to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role create
   */
  export type RoleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to create a Role.
     */
    data: XOR<RoleCreateInput, RoleUncheckedCreateInput>
  }

  /**
   * Role createMany
   */
  export type RoleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Roles.
     */
    data: RoleCreateManyInput | RoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Role createManyAndReturn
   */
  export type RoleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * The data used to create many Roles.
     */
    data: RoleCreateManyInput | RoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Role update
   */
  export type RoleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to update a Role.
     */
    data: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
    /**
     * Choose, which Role to update.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role updateMany
   */
  export type RoleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Roles.
     */
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to update.
     */
    limit?: number
  }

  /**
   * Role updateManyAndReturn
   */
  export type RoleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * The data used to update Roles.
     */
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to update.
     */
    limit?: number
  }

  /**
   * Role upsert
   */
  export type RoleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The filter to search for the Role to update in case it exists.
     */
    where: RoleWhereUniqueInput
    /**
     * In case the Role found by the `where` argument doesn't exist, create a new Role with this data.
     */
    create: XOR<RoleCreateInput, RoleUncheckedCreateInput>
    /**
     * In case the Role was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
  }

  /**
   * Role delete
   */
  export type RoleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter which Role to delete.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role deleteMany
   */
  export type RoleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Roles to delete
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to delete.
     */
    limit?: number
  }

  /**
   * Role.roleAssignments
   */
  export type Role$roleAssignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleAssignment
     */
    select?: RoleAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleAssignment
     */
    omit?: RoleAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleAssignmentInclude<ExtArgs> | null
    where?: RoleAssignmentWhereInput
    orderBy?: RoleAssignmentOrderByWithRelationInput | RoleAssignmentOrderByWithRelationInput[]
    cursor?: RoleAssignmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoleAssignmentScalarFieldEnum | RoleAssignmentScalarFieldEnum[]
  }

  /**
   * Role without action
   */
  export type RoleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
  }


  /**
   * Model RoleAssignment
   */

  export type AggregateRoleAssignment = {
    _count: RoleAssignmentCountAggregateOutputType | null
    _avg: RoleAssignmentAvgAggregateOutputType | null
    _sum: RoleAssignmentSumAggregateOutputType | null
    _min: RoleAssignmentMinAggregateOutputType | null
    _max: RoleAssignmentMaxAggregateOutputType | null
  }

  export type RoleAssignmentAvgAggregateOutputType = {
    id: number | null
    roleId: number | null
    subjectId: number | null
    createdBy: number | null
    modifiedBy: number | null
    subjectType: number | null
  }

  export type RoleAssignmentSumAggregateOutputType = {
    id: number | null
    roleId: number | null
    subjectId: number | null
    createdBy: number | null
    modifiedBy: number | null
    subjectType: number | null
  }

  export type RoleAssignmentMinAggregateOutputType = {
    id: number | null
    roleId: number | null
    subjectId: number | null
    createdBy: number | null
    createdAt: Date | null
    modifiedBy: number | null
    modifiedAt: Date | null
    subjectType: number | null
  }

  export type RoleAssignmentMaxAggregateOutputType = {
    id: number | null
    roleId: number | null
    subjectId: number | null
    createdBy: number | null
    createdAt: Date | null
    modifiedBy: number | null
    modifiedAt: Date | null
    subjectType: number | null
  }

  export type RoleAssignmentCountAggregateOutputType = {
    id: number
    roleId: number
    subjectId: number
    createdBy: number
    createdAt: number
    modifiedBy: number
    modifiedAt: number
    subjectType: number
    _all: number
  }


  export type RoleAssignmentAvgAggregateInputType = {
    id?: true
    roleId?: true
    subjectId?: true
    createdBy?: true
    modifiedBy?: true
    subjectType?: true
  }

  export type RoleAssignmentSumAggregateInputType = {
    id?: true
    roleId?: true
    subjectId?: true
    createdBy?: true
    modifiedBy?: true
    subjectType?: true
  }

  export type RoleAssignmentMinAggregateInputType = {
    id?: true
    roleId?: true
    subjectId?: true
    createdBy?: true
    createdAt?: true
    modifiedBy?: true
    modifiedAt?: true
    subjectType?: true
  }

  export type RoleAssignmentMaxAggregateInputType = {
    id?: true
    roleId?: true
    subjectId?: true
    createdBy?: true
    createdAt?: true
    modifiedBy?: true
    modifiedAt?: true
    subjectType?: true
  }

  export type RoleAssignmentCountAggregateInputType = {
    id?: true
    roleId?: true
    subjectId?: true
    createdBy?: true
    createdAt?: true
    modifiedBy?: true
    modifiedAt?: true
    subjectType?: true
    _all?: true
  }

  export type RoleAssignmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RoleAssignment to aggregate.
     */
    where?: RoleAssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoleAssignments to fetch.
     */
    orderBy?: RoleAssignmentOrderByWithRelationInput | RoleAssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RoleAssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoleAssignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoleAssignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RoleAssignments
    **/
    _count?: true | RoleAssignmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RoleAssignmentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RoleAssignmentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoleAssignmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoleAssignmentMaxAggregateInputType
  }

  export type GetRoleAssignmentAggregateType<T extends RoleAssignmentAggregateArgs> = {
        [P in keyof T & keyof AggregateRoleAssignment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRoleAssignment[P]>
      : GetScalarType<T[P], AggregateRoleAssignment[P]>
  }




  export type RoleAssignmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleAssignmentWhereInput
    orderBy?: RoleAssignmentOrderByWithAggregationInput | RoleAssignmentOrderByWithAggregationInput[]
    by: RoleAssignmentScalarFieldEnum[] | RoleAssignmentScalarFieldEnum
    having?: RoleAssignmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoleAssignmentCountAggregateInputType | true
    _avg?: RoleAssignmentAvgAggregateInputType
    _sum?: RoleAssignmentSumAggregateInputType
    _min?: RoleAssignmentMinAggregateInputType
    _max?: RoleAssignmentMaxAggregateInputType
  }

  export type RoleAssignmentGroupByOutputType = {
    id: number
    roleId: number
    subjectId: number
    createdBy: number | null
    createdAt: Date | null
    modifiedBy: number | null
    modifiedAt: Date | null
    subjectType: number
    _count: RoleAssignmentCountAggregateOutputType | null
    _avg: RoleAssignmentAvgAggregateOutputType | null
    _sum: RoleAssignmentSumAggregateOutputType | null
    _min: RoleAssignmentMinAggregateOutputType | null
    _max: RoleAssignmentMaxAggregateOutputType | null
  }

  type GetRoleAssignmentGroupByPayload<T extends RoleAssignmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RoleAssignmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoleAssignmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoleAssignmentGroupByOutputType[P]>
            : GetScalarType<T[P], RoleAssignmentGroupByOutputType[P]>
        }
      >
    >


  export type RoleAssignmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    roleId?: boolean
    subjectId?: boolean
    createdBy?: boolean
    createdAt?: boolean
    modifiedBy?: boolean
    modifiedAt?: boolean
    subjectType?: boolean
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["roleAssignment"]>

  export type RoleAssignmentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    roleId?: boolean
    subjectId?: boolean
    createdBy?: boolean
    createdAt?: boolean
    modifiedBy?: boolean
    modifiedAt?: boolean
    subjectType?: boolean
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["roleAssignment"]>

  export type RoleAssignmentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    roleId?: boolean
    subjectId?: boolean
    createdBy?: boolean
    createdAt?: boolean
    modifiedBy?: boolean
    modifiedAt?: boolean
    subjectType?: boolean
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["roleAssignment"]>

  export type RoleAssignmentSelectScalar = {
    id?: boolean
    roleId?: boolean
    subjectId?: boolean
    createdBy?: boolean
    createdAt?: boolean
    modifiedBy?: boolean
    modifiedAt?: boolean
    subjectType?: boolean
  }

  export type RoleAssignmentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "roleId" | "subjectId" | "createdBy" | "createdAt" | "modifiedBy" | "modifiedAt" | "subjectType", ExtArgs["result"]["roleAssignment"]>
  export type RoleAssignmentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }
  export type RoleAssignmentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }
  export type RoleAssignmentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }

  export type $RoleAssignmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RoleAssignment"
    objects: {
      role: Prisma.$RolePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      roleId: number
      subjectId: number
      createdBy: number | null
      createdAt: Date | null
      modifiedBy: number | null
      modifiedAt: Date | null
      subjectType: number
    }, ExtArgs["result"]["roleAssignment"]>
    composites: {}
  }

  type RoleAssignmentGetPayload<S extends boolean | null | undefined | RoleAssignmentDefaultArgs> = $Result.GetResult<Prisma.$RoleAssignmentPayload, S>

  type RoleAssignmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RoleAssignmentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RoleAssignmentCountAggregateInputType | true
    }

  export interface RoleAssignmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RoleAssignment'], meta: { name: 'RoleAssignment' } }
    /**
     * Find zero or one RoleAssignment that matches the filter.
     * @param {RoleAssignmentFindUniqueArgs} args - Arguments to find a RoleAssignment
     * @example
     * // Get one RoleAssignment
     * const roleAssignment = await prisma.roleAssignment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RoleAssignmentFindUniqueArgs>(args: SelectSubset<T, RoleAssignmentFindUniqueArgs<ExtArgs>>): Prisma__RoleAssignmentClient<$Result.GetResult<Prisma.$RoleAssignmentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RoleAssignment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RoleAssignmentFindUniqueOrThrowArgs} args - Arguments to find a RoleAssignment
     * @example
     * // Get one RoleAssignment
     * const roleAssignment = await prisma.roleAssignment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RoleAssignmentFindUniqueOrThrowArgs>(args: SelectSubset<T, RoleAssignmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RoleAssignmentClient<$Result.GetResult<Prisma.$RoleAssignmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RoleAssignment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleAssignmentFindFirstArgs} args - Arguments to find a RoleAssignment
     * @example
     * // Get one RoleAssignment
     * const roleAssignment = await prisma.roleAssignment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RoleAssignmentFindFirstArgs>(args?: SelectSubset<T, RoleAssignmentFindFirstArgs<ExtArgs>>): Prisma__RoleAssignmentClient<$Result.GetResult<Prisma.$RoleAssignmentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RoleAssignment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleAssignmentFindFirstOrThrowArgs} args - Arguments to find a RoleAssignment
     * @example
     * // Get one RoleAssignment
     * const roleAssignment = await prisma.roleAssignment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RoleAssignmentFindFirstOrThrowArgs>(args?: SelectSubset<T, RoleAssignmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__RoleAssignmentClient<$Result.GetResult<Prisma.$RoleAssignmentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RoleAssignments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleAssignmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RoleAssignments
     * const roleAssignments = await prisma.roleAssignment.findMany()
     * 
     * // Get first 10 RoleAssignments
     * const roleAssignments = await prisma.roleAssignment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const roleAssignmentWithIdOnly = await prisma.roleAssignment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RoleAssignmentFindManyArgs>(args?: SelectSubset<T, RoleAssignmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoleAssignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RoleAssignment.
     * @param {RoleAssignmentCreateArgs} args - Arguments to create a RoleAssignment.
     * @example
     * // Create one RoleAssignment
     * const RoleAssignment = await prisma.roleAssignment.create({
     *   data: {
     *     // ... data to create a RoleAssignment
     *   }
     * })
     * 
     */
    create<T extends RoleAssignmentCreateArgs>(args: SelectSubset<T, RoleAssignmentCreateArgs<ExtArgs>>): Prisma__RoleAssignmentClient<$Result.GetResult<Prisma.$RoleAssignmentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RoleAssignments.
     * @param {RoleAssignmentCreateManyArgs} args - Arguments to create many RoleAssignments.
     * @example
     * // Create many RoleAssignments
     * const roleAssignment = await prisma.roleAssignment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RoleAssignmentCreateManyArgs>(args?: SelectSubset<T, RoleAssignmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RoleAssignments and returns the data saved in the database.
     * @param {RoleAssignmentCreateManyAndReturnArgs} args - Arguments to create many RoleAssignments.
     * @example
     * // Create many RoleAssignments
     * const roleAssignment = await prisma.roleAssignment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RoleAssignments and only return the `id`
     * const roleAssignmentWithIdOnly = await prisma.roleAssignment.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RoleAssignmentCreateManyAndReturnArgs>(args?: SelectSubset<T, RoleAssignmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoleAssignmentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RoleAssignment.
     * @param {RoleAssignmentDeleteArgs} args - Arguments to delete one RoleAssignment.
     * @example
     * // Delete one RoleAssignment
     * const RoleAssignment = await prisma.roleAssignment.delete({
     *   where: {
     *     // ... filter to delete one RoleAssignment
     *   }
     * })
     * 
     */
    delete<T extends RoleAssignmentDeleteArgs>(args: SelectSubset<T, RoleAssignmentDeleteArgs<ExtArgs>>): Prisma__RoleAssignmentClient<$Result.GetResult<Prisma.$RoleAssignmentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RoleAssignment.
     * @param {RoleAssignmentUpdateArgs} args - Arguments to update one RoleAssignment.
     * @example
     * // Update one RoleAssignment
     * const roleAssignment = await prisma.roleAssignment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RoleAssignmentUpdateArgs>(args: SelectSubset<T, RoleAssignmentUpdateArgs<ExtArgs>>): Prisma__RoleAssignmentClient<$Result.GetResult<Prisma.$RoleAssignmentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RoleAssignments.
     * @param {RoleAssignmentDeleteManyArgs} args - Arguments to filter RoleAssignments to delete.
     * @example
     * // Delete a few RoleAssignments
     * const { count } = await prisma.roleAssignment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RoleAssignmentDeleteManyArgs>(args?: SelectSubset<T, RoleAssignmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RoleAssignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleAssignmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RoleAssignments
     * const roleAssignment = await prisma.roleAssignment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RoleAssignmentUpdateManyArgs>(args: SelectSubset<T, RoleAssignmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RoleAssignments and returns the data updated in the database.
     * @param {RoleAssignmentUpdateManyAndReturnArgs} args - Arguments to update many RoleAssignments.
     * @example
     * // Update many RoleAssignments
     * const roleAssignment = await prisma.roleAssignment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RoleAssignments and only return the `id`
     * const roleAssignmentWithIdOnly = await prisma.roleAssignment.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RoleAssignmentUpdateManyAndReturnArgs>(args: SelectSubset<T, RoleAssignmentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoleAssignmentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RoleAssignment.
     * @param {RoleAssignmentUpsertArgs} args - Arguments to update or create a RoleAssignment.
     * @example
     * // Update or create a RoleAssignment
     * const roleAssignment = await prisma.roleAssignment.upsert({
     *   create: {
     *     // ... data to create a RoleAssignment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RoleAssignment we want to update
     *   }
     * })
     */
    upsert<T extends RoleAssignmentUpsertArgs>(args: SelectSubset<T, RoleAssignmentUpsertArgs<ExtArgs>>): Prisma__RoleAssignmentClient<$Result.GetResult<Prisma.$RoleAssignmentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RoleAssignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleAssignmentCountArgs} args - Arguments to filter RoleAssignments to count.
     * @example
     * // Count the number of RoleAssignments
     * const count = await prisma.roleAssignment.count({
     *   where: {
     *     // ... the filter for the RoleAssignments we want to count
     *   }
     * })
    **/
    count<T extends RoleAssignmentCountArgs>(
      args?: Subset<T, RoleAssignmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoleAssignmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RoleAssignment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleAssignmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoleAssignmentAggregateArgs>(args: Subset<T, RoleAssignmentAggregateArgs>): Prisma.PrismaPromise<GetRoleAssignmentAggregateType<T>>

    /**
     * Group by RoleAssignment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleAssignmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RoleAssignmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RoleAssignmentGroupByArgs['orderBy'] }
        : { orderBy?: RoleAssignmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RoleAssignmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoleAssignmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RoleAssignment model
   */
  readonly fields: RoleAssignmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RoleAssignment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RoleAssignmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    role<T extends RoleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RoleDefaultArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RoleAssignment model
   */
  interface RoleAssignmentFieldRefs {
    readonly id: FieldRef<"RoleAssignment", 'Int'>
    readonly roleId: FieldRef<"RoleAssignment", 'Int'>
    readonly subjectId: FieldRef<"RoleAssignment", 'Int'>
    readonly createdBy: FieldRef<"RoleAssignment", 'Int'>
    readonly createdAt: FieldRef<"RoleAssignment", 'DateTime'>
    readonly modifiedBy: FieldRef<"RoleAssignment", 'Int'>
    readonly modifiedAt: FieldRef<"RoleAssignment", 'DateTime'>
    readonly subjectType: FieldRef<"RoleAssignment", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * RoleAssignment findUnique
   */
  export type RoleAssignmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleAssignment
     */
    select?: RoleAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleAssignment
     */
    omit?: RoleAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which RoleAssignment to fetch.
     */
    where: RoleAssignmentWhereUniqueInput
  }

  /**
   * RoleAssignment findUniqueOrThrow
   */
  export type RoleAssignmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleAssignment
     */
    select?: RoleAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleAssignment
     */
    omit?: RoleAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which RoleAssignment to fetch.
     */
    where: RoleAssignmentWhereUniqueInput
  }

  /**
   * RoleAssignment findFirst
   */
  export type RoleAssignmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleAssignment
     */
    select?: RoleAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleAssignment
     */
    omit?: RoleAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which RoleAssignment to fetch.
     */
    where?: RoleAssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoleAssignments to fetch.
     */
    orderBy?: RoleAssignmentOrderByWithRelationInput | RoleAssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RoleAssignments.
     */
    cursor?: RoleAssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoleAssignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoleAssignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RoleAssignments.
     */
    distinct?: RoleAssignmentScalarFieldEnum | RoleAssignmentScalarFieldEnum[]
  }

  /**
   * RoleAssignment findFirstOrThrow
   */
  export type RoleAssignmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleAssignment
     */
    select?: RoleAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleAssignment
     */
    omit?: RoleAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which RoleAssignment to fetch.
     */
    where?: RoleAssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoleAssignments to fetch.
     */
    orderBy?: RoleAssignmentOrderByWithRelationInput | RoleAssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RoleAssignments.
     */
    cursor?: RoleAssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoleAssignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoleAssignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RoleAssignments.
     */
    distinct?: RoleAssignmentScalarFieldEnum | RoleAssignmentScalarFieldEnum[]
  }

  /**
   * RoleAssignment findMany
   */
  export type RoleAssignmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleAssignment
     */
    select?: RoleAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleAssignment
     */
    omit?: RoleAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which RoleAssignments to fetch.
     */
    where?: RoleAssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoleAssignments to fetch.
     */
    orderBy?: RoleAssignmentOrderByWithRelationInput | RoleAssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RoleAssignments.
     */
    cursor?: RoleAssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoleAssignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoleAssignments.
     */
    skip?: number
    distinct?: RoleAssignmentScalarFieldEnum | RoleAssignmentScalarFieldEnum[]
  }

  /**
   * RoleAssignment create
   */
  export type RoleAssignmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleAssignment
     */
    select?: RoleAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleAssignment
     */
    omit?: RoleAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleAssignmentInclude<ExtArgs> | null
    /**
     * The data needed to create a RoleAssignment.
     */
    data: XOR<RoleAssignmentCreateInput, RoleAssignmentUncheckedCreateInput>
  }

  /**
   * RoleAssignment createMany
   */
  export type RoleAssignmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RoleAssignments.
     */
    data: RoleAssignmentCreateManyInput | RoleAssignmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RoleAssignment createManyAndReturn
   */
  export type RoleAssignmentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleAssignment
     */
    select?: RoleAssignmentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RoleAssignment
     */
    omit?: RoleAssignmentOmit<ExtArgs> | null
    /**
     * The data used to create many RoleAssignments.
     */
    data: RoleAssignmentCreateManyInput | RoleAssignmentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleAssignmentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RoleAssignment update
   */
  export type RoleAssignmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleAssignment
     */
    select?: RoleAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleAssignment
     */
    omit?: RoleAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleAssignmentInclude<ExtArgs> | null
    /**
     * The data needed to update a RoleAssignment.
     */
    data: XOR<RoleAssignmentUpdateInput, RoleAssignmentUncheckedUpdateInput>
    /**
     * Choose, which RoleAssignment to update.
     */
    where: RoleAssignmentWhereUniqueInput
  }

  /**
   * RoleAssignment updateMany
   */
  export type RoleAssignmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RoleAssignments.
     */
    data: XOR<RoleAssignmentUpdateManyMutationInput, RoleAssignmentUncheckedUpdateManyInput>
    /**
     * Filter which RoleAssignments to update
     */
    where?: RoleAssignmentWhereInput
    /**
     * Limit how many RoleAssignments to update.
     */
    limit?: number
  }

  /**
   * RoleAssignment updateManyAndReturn
   */
  export type RoleAssignmentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleAssignment
     */
    select?: RoleAssignmentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RoleAssignment
     */
    omit?: RoleAssignmentOmit<ExtArgs> | null
    /**
     * The data used to update RoleAssignments.
     */
    data: XOR<RoleAssignmentUpdateManyMutationInput, RoleAssignmentUncheckedUpdateManyInput>
    /**
     * Filter which RoleAssignments to update
     */
    where?: RoleAssignmentWhereInput
    /**
     * Limit how many RoleAssignments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleAssignmentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RoleAssignment upsert
   */
  export type RoleAssignmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleAssignment
     */
    select?: RoleAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleAssignment
     */
    omit?: RoleAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleAssignmentInclude<ExtArgs> | null
    /**
     * The filter to search for the RoleAssignment to update in case it exists.
     */
    where: RoleAssignmentWhereUniqueInput
    /**
     * In case the RoleAssignment found by the `where` argument doesn't exist, create a new RoleAssignment with this data.
     */
    create: XOR<RoleAssignmentCreateInput, RoleAssignmentUncheckedCreateInput>
    /**
     * In case the RoleAssignment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RoleAssignmentUpdateInput, RoleAssignmentUncheckedUpdateInput>
  }

  /**
   * RoleAssignment delete
   */
  export type RoleAssignmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleAssignment
     */
    select?: RoleAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleAssignment
     */
    omit?: RoleAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleAssignmentInclude<ExtArgs> | null
    /**
     * Filter which RoleAssignment to delete.
     */
    where: RoleAssignmentWhereUniqueInput
  }

  /**
   * RoleAssignment deleteMany
   */
  export type RoleAssignmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RoleAssignments to delete
     */
    where?: RoleAssignmentWhereInput
    /**
     * Limit how many RoleAssignments to delete.
     */
    limit?: number
  }

  /**
   * RoleAssignment without action
   */
  export type RoleAssignmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleAssignment
     */
    select?: RoleAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleAssignment
     */
    omit?: RoleAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleAssignmentInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Achievement_type_luScalarFieldEnum: {
    achievement_type_id: 'achievement_type_id',
    achievement_type_desc: 'achievement_type_desc'
  };

  export type Achievement_type_luScalarFieldEnum = (typeof Achievement_type_luScalarFieldEnum)[keyof typeof Achievement_type_luScalarFieldEnum]


  export const CountryScalarFieldEnum: {
    country_code: 'country_code',
    country_name: 'country_name',
    modify_date: 'modify_date',
    participating: 'participating',
    default_taxform_id: 'default_taxform_id',
    longitude: 'longitude',
    latitude: 'latitude',
    region: 'region',
    iso_name: 'iso_name',
    iso_alpha2_code: 'iso_alpha2_code',
    iso_alpha3_code: 'iso_alpha3_code'
  };

  export type CountryScalarFieldEnum = (typeof CountryScalarFieldEnum)[keyof typeof CountryScalarFieldEnum]


  export const Dice_connectionScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    connection: 'connection',
    accepted: 'accepted',
    created_at: 'created_at',
    short_url: 'short_url',
    con_created_at: 'con_created_at'
  };

  export type Dice_connectionScalarFieldEnum = (typeof Dice_connectionScalarFieldEnum)[keyof typeof Dice_connectionScalarFieldEnum]


  export const EmailScalarFieldEnum: {
    user_id: 'user_id',
    email_id: 'email_id',
    email_type_id: 'email_type_id',
    address: 'address',
    create_date: 'create_date',
    modify_date: 'modify_date',
    primary_ind: 'primary_ind',
    status_id: 'status_id'
  };

  export type EmailScalarFieldEnum = (typeof EmailScalarFieldEnum)[keyof typeof EmailScalarFieldEnum]


  export const Email_status_luScalarFieldEnum: {
    status_id: 'status_id',
    status_desc: 'status_desc',
    create_date: 'create_date',
    modify_date: 'modify_date'
  };

  export type Email_status_luScalarFieldEnum = (typeof Email_status_luScalarFieldEnum)[keyof typeof Email_status_luScalarFieldEnum]


  export const Email_type_luScalarFieldEnum: {
    email_type_id: 'email_type_id',
    email_type_desc: 'email_type_desc',
    create_date: 'create_date',
    modify_date: 'modify_date'
  };

  export type Email_type_luScalarFieldEnum = (typeof Email_type_luScalarFieldEnum)[keyof typeof Email_type_luScalarFieldEnum]


  export const Id_sequencesScalarFieldEnum: {
    name: 'name',
    next_block_start: 'next_block_start',
    block_size: 'block_size',
    exhausted: 'exhausted'
  };

  export type Id_sequencesScalarFieldEnum = (typeof Id_sequencesScalarFieldEnum)[keyof typeof Id_sequencesScalarFieldEnum]


  export const Invalid_handlesScalarFieldEnum: {
    invalid_handle_id: 'invalid_handle_id',
    invalid_handle: 'invalid_handle'
  };

  export type Invalid_handlesScalarFieldEnum = (typeof Invalid_handlesScalarFieldEnum)[keyof typeof Invalid_handlesScalarFieldEnum]


  export const Security_groupsScalarFieldEnum: {
    group_id: 'group_id',
    description: 'description',
    challenge_group_ind: 'challenge_group_ind',
    create_user_id: 'create_user_id'
  };

  export type Security_groupsScalarFieldEnum = (typeof Security_groupsScalarFieldEnum)[keyof typeof Security_groupsScalarFieldEnum]


  export const Security_status_luScalarFieldEnum: {
    security_status_id: 'security_status_id',
    status_desc: 'status_desc'
  };

  export type Security_status_luScalarFieldEnum = (typeof Security_status_luScalarFieldEnum)[keyof typeof Security_status_luScalarFieldEnum]


  export const Security_userScalarFieldEnum: {
    login_id: 'login_id',
    user_id: 'user_id',
    password: 'password',
    create_user_id: 'create_user_id',
    modify_date: 'modify_date'
  };

  export type Security_userScalarFieldEnum = (typeof Security_userScalarFieldEnum)[keyof typeof Security_userScalarFieldEnum]


  export const Social_login_providerScalarFieldEnum: {
    social_login_provider_id: 'social_login_provider_id',
    name: 'name'
  };

  export type Social_login_providerScalarFieldEnum = (typeof Social_login_providerScalarFieldEnum)[keyof typeof Social_login_providerScalarFieldEnum]


  export const Sso_login_providerScalarFieldEnum: {
    sso_login_provider_id: 'sso_login_provider_id',
    name: 'name',
    type: 'type',
    identify_email_enabled: 'identify_email_enabled',
    identify_handle_enabled: 'identify_handle_enabled'
  };

  export type Sso_login_providerScalarFieldEnum = (typeof Sso_login_providerScalarFieldEnum)[keyof typeof Sso_login_providerScalarFieldEnum]


  export const UserScalarFieldEnum: {
    user_id: 'user_id',
    first_name: 'first_name',
    last_name: 'last_name',
    create_date: 'create_date',
    modify_date: 'modify_date',
    handle: 'handle',
    last_login: 'last_login',
    status: 'status',
    activation_code: 'activation_code',
    middle_name: 'middle_name',
    handle_lower: 'handle_lower',
    timezone_id: 'timezone_id',
    last_site_hit_date: 'last_site_hit_date',
    name_in_another_language: 'name_in_another_language',
    password: 'password',
    open_id: 'open_id',
    reg_source: 'reg_source',
    utm_source: 'utm_source',
    utm_medium: 'utm_medium',
    utm_campaign: 'utm_campaign'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const User_2faScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    mfa_enabled: 'mfa_enabled',
    dice_enabled: 'dice_enabled',
    created_by: 'created_by',
    created_at: 'created_at',
    modified_by: 'modified_by',
    modified_at: 'modified_at'
  };

  export type User_2faScalarFieldEnum = (typeof User_2faScalarFieldEnum)[keyof typeof User_2faScalarFieldEnum]


  export const User_achievementScalarFieldEnum: {
    user_id: 'user_id',
    achievement_date: 'achievement_date',
    achievement_type_id: 'achievement_type_id',
    description: 'description',
    create_date: 'create_date'
  };

  export type User_achievementScalarFieldEnum = (typeof User_achievementScalarFieldEnum)[keyof typeof User_achievementScalarFieldEnum]


  export const User_group_xrefScalarFieldEnum: {
    user_group_id: 'user_group_id',
    login_id: 'login_id',
    group_id: 'group_id',
    create_user_id: 'create_user_id',
    security_status_id: 'security_status_id',
    create_date: 'create_date'
  };

  export type User_group_xrefScalarFieldEnum = (typeof User_group_xrefScalarFieldEnum)[keyof typeof User_group_xrefScalarFieldEnum]


  export const User_otp_emailScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    mode: 'mode',
    otp: 'otp',
    expire_at: 'expire_at',
    resend: 'resend',
    fail_count: 'fail_count'
  };

  export type User_otp_emailScalarFieldEnum = (typeof User_otp_emailScalarFieldEnum)[keyof typeof User_otp_emailScalarFieldEnum]


  export const User_social_loginScalarFieldEnum: {
    social_user_id: 'social_user_id',
    user_id: 'user_id',
    social_login_provider_id: 'social_login_provider_id',
    social_user_name: 'social_user_name',
    social_email: 'social_email',
    social_email_verified: 'social_email_verified',
    create_date: 'create_date',
    modify_date: 'modify_date'
  };

  export type User_social_loginScalarFieldEnum = (typeof User_social_loginScalarFieldEnum)[keyof typeof User_social_loginScalarFieldEnum]


  export const User_sso_loginScalarFieldEnum: {
    user_id: 'user_id',
    sso_user_id: 'sso_user_id',
    sso_user_name: 'sso_user_name',
    provider_id: 'provider_id',
    email: 'email'
  };

  export type User_sso_loginScalarFieldEnum = (typeof User_sso_loginScalarFieldEnum)[keyof typeof User_sso_loginScalarFieldEnum]


  export const User_statusScalarFieldEnum: {
    user_id: 'user_id',
    user_status_type_id: 'user_status_type_id',
    user_status_id: 'user_status_id'
  };

  export type User_statusScalarFieldEnum = (typeof User_statusScalarFieldEnum)[keyof typeof User_statusScalarFieldEnum]


  export const User_status_luScalarFieldEnum: {
    user_status_id: 'user_status_id',
    description: 'description'
  };

  export type User_status_luScalarFieldEnum = (typeof User_status_luScalarFieldEnum)[keyof typeof User_status_luScalarFieldEnum]


  export const User_status_type_luScalarFieldEnum: {
    user_status_type_id: 'user_status_type_id',
    description: 'description'
  };

  export type User_status_type_luScalarFieldEnum = (typeof User_status_type_luScalarFieldEnum)[keyof typeof User_status_type_luScalarFieldEnum]


  export const User_email_xrefScalarFieldEnum: {
    user_id: 'user_id',
    email_id: 'email_id',
    is_primary: 'is_primary',
    status_id: 'status_id',
    create_date: 'create_date',
    modify_date: 'modify_date'
  };

  export type User_email_xrefScalarFieldEnum = (typeof User_email_xrefScalarFieldEnum)[keyof typeof User_email_xrefScalarFieldEnum]


  export const ClientScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    name: 'name',
    redirectUri: 'redirectUri',
    secret: 'secret',
    createdBy: 'createdBy',
    createdAt: 'createdAt',
    modifiedBy: 'modifiedBy',
    modifiedAt: 'modifiedAt'
  };

  export type ClientScalarFieldEnum = (typeof ClientScalarFieldEnum)[keyof typeof ClientScalarFieldEnum]


  export const RoleScalarFieldEnum: {
    id: 'id',
    name: 'name',
    createdBy: 'createdBy',
    createdAt: 'createdAt',
    modifiedBy: 'modifiedBy',
    modifiedAt: 'modifiedAt'
  };

  export type RoleScalarFieldEnum = (typeof RoleScalarFieldEnum)[keyof typeof RoleScalarFieldEnum]


  export const RoleAssignmentScalarFieldEnum: {
    id: 'id',
    roleId: 'roleId',
    subjectId: 'subjectId',
    createdBy: 'createdBy',
    createdAt: 'createdAt',
    modifiedBy: 'modifiedBy',
    modifiedAt: 'modifiedAt',
    subjectType: 'subjectType'
  };

  export type RoleAssignmentScalarFieldEnum = (typeof RoleAssignmentScalarFieldEnum)[keyof typeof RoleAssignmentScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type achievement_type_luWhereInput = {
    AND?: achievement_type_luWhereInput | achievement_type_luWhereInput[]
    OR?: achievement_type_luWhereInput[]
    NOT?: achievement_type_luWhereInput | achievement_type_luWhereInput[]
    achievement_type_id?: DecimalFilter<"achievement_type_lu"> | Decimal | DecimalJsLike | number | string
    achievement_type_desc?: StringFilter<"achievement_type_lu"> | string
    user_achievement?: User_achievementListRelationFilter
  }

  export type achievement_type_luOrderByWithRelationInput = {
    achievement_type_id?: SortOrder
    achievement_type_desc?: SortOrder
    user_achievement?: user_achievementOrderByRelationAggregateInput
  }

  export type achievement_type_luWhereUniqueInput = Prisma.AtLeast<{
    achievement_type_id?: Decimal | DecimalJsLike | number | string
    AND?: achievement_type_luWhereInput | achievement_type_luWhereInput[]
    OR?: achievement_type_luWhereInput[]
    NOT?: achievement_type_luWhereInput | achievement_type_luWhereInput[]
    achievement_type_desc?: StringFilter<"achievement_type_lu"> | string
    user_achievement?: User_achievementListRelationFilter
  }, "achievement_type_id">

  export type achievement_type_luOrderByWithAggregationInput = {
    achievement_type_id?: SortOrder
    achievement_type_desc?: SortOrder
    _count?: achievement_type_luCountOrderByAggregateInput
    _avg?: achievement_type_luAvgOrderByAggregateInput
    _max?: achievement_type_luMaxOrderByAggregateInput
    _min?: achievement_type_luMinOrderByAggregateInput
    _sum?: achievement_type_luSumOrderByAggregateInput
  }

  export type achievement_type_luScalarWhereWithAggregatesInput = {
    AND?: achievement_type_luScalarWhereWithAggregatesInput | achievement_type_luScalarWhereWithAggregatesInput[]
    OR?: achievement_type_luScalarWhereWithAggregatesInput[]
    NOT?: achievement_type_luScalarWhereWithAggregatesInput | achievement_type_luScalarWhereWithAggregatesInput[]
    achievement_type_id?: DecimalWithAggregatesFilter<"achievement_type_lu"> | Decimal | DecimalJsLike | number | string
    achievement_type_desc?: StringWithAggregatesFilter<"achievement_type_lu"> | string
  }

  export type countryWhereInput = {
    AND?: countryWhereInput | countryWhereInput[]
    OR?: countryWhereInput[]
    NOT?: countryWhereInput | countryWhereInput[]
    country_code?: StringFilter<"country"> | string
    country_name?: StringFilter<"country"> | string
    modify_date?: DateTimeNullableFilter<"country"> | Date | string | null
    participating?: DecimalNullableFilter<"country"> | Decimal | DecimalJsLike | number | string | null
    default_taxform_id?: DecimalNullableFilter<"country"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"country"> | Decimal | DecimalJsLike | number | string | null
    latitude?: DecimalNullableFilter<"country"> | Decimal | DecimalJsLike | number | string | null
    region?: StringNullableFilter<"country"> | string | null
    iso_name?: StringNullableFilter<"country"> | string | null
    iso_alpha2_code?: StringNullableFilter<"country"> | string | null
    iso_alpha3_code?: StringNullableFilter<"country"> | string | null
  }

  export type countryOrderByWithRelationInput = {
    country_code?: SortOrder
    country_name?: SortOrder
    modify_date?: SortOrderInput | SortOrder
    participating?: SortOrderInput | SortOrder
    default_taxform_id?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    region?: SortOrderInput | SortOrder
    iso_name?: SortOrderInput | SortOrder
    iso_alpha2_code?: SortOrderInput | SortOrder
    iso_alpha3_code?: SortOrderInput | SortOrder
  }

  export type countryWhereUniqueInput = Prisma.AtLeast<{
    country_code?: string
    AND?: countryWhereInput | countryWhereInput[]
    OR?: countryWhereInput[]
    NOT?: countryWhereInput | countryWhereInput[]
    country_name?: StringFilter<"country"> | string
    modify_date?: DateTimeNullableFilter<"country"> | Date | string | null
    participating?: DecimalNullableFilter<"country"> | Decimal | DecimalJsLike | number | string | null
    default_taxform_id?: DecimalNullableFilter<"country"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"country"> | Decimal | DecimalJsLike | number | string | null
    latitude?: DecimalNullableFilter<"country"> | Decimal | DecimalJsLike | number | string | null
    region?: StringNullableFilter<"country"> | string | null
    iso_name?: StringNullableFilter<"country"> | string | null
    iso_alpha2_code?: StringNullableFilter<"country"> | string | null
    iso_alpha3_code?: StringNullableFilter<"country"> | string | null
  }, "country_code">

  export type countryOrderByWithAggregationInput = {
    country_code?: SortOrder
    country_name?: SortOrder
    modify_date?: SortOrderInput | SortOrder
    participating?: SortOrderInput | SortOrder
    default_taxform_id?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    region?: SortOrderInput | SortOrder
    iso_name?: SortOrderInput | SortOrder
    iso_alpha2_code?: SortOrderInput | SortOrder
    iso_alpha3_code?: SortOrderInput | SortOrder
    _count?: countryCountOrderByAggregateInput
    _avg?: countryAvgOrderByAggregateInput
    _max?: countryMaxOrderByAggregateInput
    _min?: countryMinOrderByAggregateInput
    _sum?: countrySumOrderByAggregateInput
  }

  export type countryScalarWhereWithAggregatesInput = {
    AND?: countryScalarWhereWithAggregatesInput | countryScalarWhereWithAggregatesInput[]
    OR?: countryScalarWhereWithAggregatesInput[]
    NOT?: countryScalarWhereWithAggregatesInput | countryScalarWhereWithAggregatesInput[]
    country_code?: StringWithAggregatesFilter<"country"> | string
    country_name?: StringWithAggregatesFilter<"country"> | string
    modify_date?: DateTimeNullableWithAggregatesFilter<"country"> | Date | string | null
    participating?: DecimalNullableWithAggregatesFilter<"country"> | Decimal | DecimalJsLike | number | string | null
    default_taxform_id?: DecimalNullableWithAggregatesFilter<"country"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableWithAggregatesFilter<"country"> | Decimal | DecimalJsLike | number | string | null
    latitude?: DecimalNullableWithAggregatesFilter<"country"> | Decimal | DecimalJsLike | number | string | null
    region?: StringNullableWithAggregatesFilter<"country"> | string | null
    iso_name?: StringNullableWithAggregatesFilter<"country"> | string | null
    iso_alpha2_code?: StringNullableWithAggregatesFilter<"country"> | string | null
    iso_alpha3_code?: StringNullableWithAggregatesFilter<"country"> | string | null
  }

  export type dice_connectionWhereInput = {
    AND?: dice_connectionWhereInput | dice_connectionWhereInput[]
    OR?: dice_connectionWhereInput[]
    NOT?: dice_connectionWhereInput | dice_connectionWhereInput[]
    id?: IntFilter<"dice_connection"> | number
    user_id?: DecimalFilter<"dice_connection"> | Decimal | DecimalJsLike | number | string
    connection?: StringNullableFilter<"dice_connection"> | string | null
    accepted?: BoolFilter<"dice_connection"> | boolean
    created_at?: DateTimeFilter<"dice_connection"> | Date | string
    short_url?: StringNullableFilter<"dice_connection"> | string | null
    con_created_at?: DateTimeNullableFilter<"dice_connection"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type dice_connectionOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    connection?: SortOrderInput | SortOrder
    accepted?: SortOrder
    created_at?: SortOrder
    short_url?: SortOrderInput | SortOrder
    con_created_at?: SortOrderInput | SortOrder
    user?: userOrderByWithRelationInput
  }

  export type dice_connectionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    user_id?: Decimal | DecimalJsLike | number | string
    AND?: dice_connectionWhereInput | dice_connectionWhereInput[]
    OR?: dice_connectionWhereInput[]
    NOT?: dice_connectionWhereInput | dice_connectionWhereInput[]
    connection?: StringNullableFilter<"dice_connection"> | string | null
    accepted?: BoolFilter<"dice_connection"> | boolean
    created_at?: DateTimeFilter<"dice_connection"> | Date | string
    short_url?: StringNullableFilter<"dice_connection"> | string | null
    con_created_at?: DateTimeNullableFilter<"dice_connection"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id" | "user_id">

  export type dice_connectionOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    connection?: SortOrderInput | SortOrder
    accepted?: SortOrder
    created_at?: SortOrder
    short_url?: SortOrderInput | SortOrder
    con_created_at?: SortOrderInput | SortOrder
    _count?: dice_connectionCountOrderByAggregateInput
    _avg?: dice_connectionAvgOrderByAggregateInput
    _max?: dice_connectionMaxOrderByAggregateInput
    _min?: dice_connectionMinOrderByAggregateInput
    _sum?: dice_connectionSumOrderByAggregateInput
  }

  export type dice_connectionScalarWhereWithAggregatesInput = {
    AND?: dice_connectionScalarWhereWithAggregatesInput | dice_connectionScalarWhereWithAggregatesInput[]
    OR?: dice_connectionScalarWhereWithAggregatesInput[]
    NOT?: dice_connectionScalarWhereWithAggregatesInput | dice_connectionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"dice_connection"> | number
    user_id?: DecimalWithAggregatesFilter<"dice_connection"> | Decimal | DecimalJsLike | number | string
    connection?: StringNullableWithAggregatesFilter<"dice_connection"> | string | null
    accepted?: BoolWithAggregatesFilter<"dice_connection"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"dice_connection"> | Date | string
    short_url?: StringNullableWithAggregatesFilter<"dice_connection"> | string | null
    con_created_at?: DateTimeNullableWithAggregatesFilter<"dice_connection"> | Date | string | null
  }

  export type emailWhereInput = {
    AND?: emailWhereInput | emailWhereInput[]
    OR?: emailWhereInput[]
    NOT?: emailWhereInput | emailWhereInput[]
    user_id?: DecimalNullableFilter<"email"> | Decimal | DecimalJsLike | number | string | null
    email_id?: DecimalFilter<"email"> | Decimal | DecimalJsLike | number | string
    email_type_id?: DecimalNullableFilter<"email"> | Decimal | DecimalJsLike | number | string | null
    address?: StringNullableFilter<"email"> | string | null
    create_date?: DateTimeNullableFilter<"email"> | Date | string | null
    modify_date?: DateTimeNullableFilter<"email"> | Date | string | null
    primary_ind?: DecimalNullableFilter<"email"> | Decimal | DecimalJsLike | number | string | null
    status_id?: DecimalNullableFilter<"email"> | Decimal | DecimalJsLike | number | string | null
    email_status_lu?: XOR<Email_status_luNullableScalarRelationFilter, email_status_luWhereInput> | null
    email_type_lu?: XOR<Email_type_luNullableScalarRelationFilter, email_type_luWhereInput> | null
    user_email_xref?: User_email_xrefListRelationFilter
    user?: XOR<UserNullableScalarRelationFilter, userWhereInput> | null
  }

  export type emailOrderByWithRelationInput = {
    user_id?: SortOrderInput | SortOrder
    email_id?: SortOrder
    email_type_id?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    create_date?: SortOrderInput | SortOrder
    modify_date?: SortOrderInput | SortOrder
    primary_ind?: SortOrderInput | SortOrder
    status_id?: SortOrderInput | SortOrder
    email_status_lu?: email_status_luOrderByWithRelationInput
    email_type_lu?: email_type_luOrderByWithRelationInput
    user_email_xref?: user_email_xrefOrderByRelationAggregateInput
    user?: userOrderByWithRelationInput
  }

  export type emailWhereUniqueInput = Prisma.AtLeast<{
    email_id?: Decimal | DecimalJsLike | number | string
    AND?: emailWhereInput | emailWhereInput[]
    OR?: emailWhereInput[]
    NOT?: emailWhereInput | emailWhereInput[]
    user_id?: DecimalNullableFilter<"email"> | Decimal | DecimalJsLike | number | string | null
    email_type_id?: DecimalNullableFilter<"email"> | Decimal | DecimalJsLike | number | string | null
    address?: StringNullableFilter<"email"> | string | null
    create_date?: DateTimeNullableFilter<"email"> | Date | string | null
    modify_date?: DateTimeNullableFilter<"email"> | Date | string | null
    primary_ind?: DecimalNullableFilter<"email"> | Decimal | DecimalJsLike | number | string | null
    status_id?: DecimalNullableFilter<"email"> | Decimal | DecimalJsLike | number | string | null
    email_status_lu?: XOR<Email_status_luNullableScalarRelationFilter, email_status_luWhereInput> | null
    email_type_lu?: XOR<Email_type_luNullableScalarRelationFilter, email_type_luWhereInput> | null
    user_email_xref?: User_email_xrefListRelationFilter
    user?: XOR<UserNullableScalarRelationFilter, userWhereInput> | null
  }, "email_id">

  export type emailOrderByWithAggregationInput = {
    user_id?: SortOrderInput | SortOrder
    email_id?: SortOrder
    email_type_id?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    create_date?: SortOrderInput | SortOrder
    modify_date?: SortOrderInput | SortOrder
    primary_ind?: SortOrderInput | SortOrder
    status_id?: SortOrderInput | SortOrder
    _count?: emailCountOrderByAggregateInput
    _avg?: emailAvgOrderByAggregateInput
    _max?: emailMaxOrderByAggregateInput
    _min?: emailMinOrderByAggregateInput
    _sum?: emailSumOrderByAggregateInput
  }

  export type emailScalarWhereWithAggregatesInput = {
    AND?: emailScalarWhereWithAggregatesInput | emailScalarWhereWithAggregatesInput[]
    OR?: emailScalarWhereWithAggregatesInput[]
    NOT?: emailScalarWhereWithAggregatesInput | emailScalarWhereWithAggregatesInput[]
    user_id?: DecimalNullableWithAggregatesFilter<"email"> | Decimal | DecimalJsLike | number | string | null
    email_id?: DecimalWithAggregatesFilter<"email"> | Decimal | DecimalJsLike | number | string
    email_type_id?: DecimalNullableWithAggregatesFilter<"email"> | Decimal | DecimalJsLike | number | string | null
    address?: StringNullableWithAggregatesFilter<"email"> | string | null
    create_date?: DateTimeNullableWithAggregatesFilter<"email"> | Date | string | null
    modify_date?: DateTimeNullableWithAggregatesFilter<"email"> | Date | string | null
    primary_ind?: DecimalNullableWithAggregatesFilter<"email"> | Decimal | DecimalJsLike | number | string | null
    status_id?: DecimalNullableWithAggregatesFilter<"email"> | Decimal | DecimalJsLike | number | string | null
  }

  export type email_status_luWhereInput = {
    AND?: email_status_luWhereInput | email_status_luWhereInput[]
    OR?: email_status_luWhereInput[]
    NOT?: email_status_luWhereInput | email_status_luWhereInput[]
    status_id?: DecimalFilter<"email_status_lu"> | Decimal | DecimalJsLike | number | string
    status_desc?: StringNullableFilter<"email_status_lu"> | string | null
    create_date?: DateTimeNullableFilter<"email_status_lu"> | Date | string | null
    modify_date?: DateTimeNullableFilter<"email_status_lu"> | Date | string | null
    email?: EmailListRelationFilter
    user_email_xref?: User_email_xrefListRelationFilter
  }

  export type email_status_luOrderByWithRelationInput = {
    status_id?: SortOrder
    status_desc?: SortOrderInput | SortOrder
    create_date?: SortOrderInput | SortOrder
    modify_date?: SortOrderInput | SortOrder
    email?: emailOrderByRelationAggregateInput
    user_email_xref?: user_email_xrefOrderByRelationAggregateInput
  }

  export type email_status_luWhereUniqueInput = Prisma.AtLeast<{
    status_id?: Decimal | DecimalJsLike | number | string
    AND?: email_status_luWhereInput | email_status_luWhereInput[]
    OR?: email_status_luWhereInput[]
    NOT?: email_status_luWhereInput | email_status_luWhereInput[]
    status_desc?: StringNullableFilter<"email_status_lu"> | string | null
    create_date?: DateTimeNullableFilter<"email_status_lu"> | Date | string | null
    modify_date?: DateTimeNullableFilter<"email_status_lu"> | Date | string | null
    email?: EmailListRelationFilter
    user_email_xref?: User_email_xrefListRelationFilter
  }, "status_id">

  export type email_status_luOrderByWithAggregationInput = {
    status_id?: SortOrder
    status_desc?: SortOrderInput | SortOrder
    create_date?: SortOrderInput | SortOrder
    modify_date?: SortOrderInput | SortOrder
    _count?: email_status_luCountOrderByAggregateInput
    _avg?: email_status_luAvgOrderByAggregateInput
    _max?: email_status_luMaxOrderByAggregateInput
    _min?: email_status_luMinOrderByAggregateInput
    _sum?: email_status_luSumOrderByAggregateInput
  }

  export type email_status_luScalarWhereWithAggregatesInput = {
    AND?: email_status_luScalarWhereWithAggregatesInput | email_status_luScalarWhereWithAggregatesInput[]
    OR?: email_status_luScalarWhereWithAggregatesInput[]
    NOT?: email_status_luScalarWhereWithAggregatesInput | email_status_luScalarWhereWithAggregatesInput[]
    status_id?: DecimalWithAggregatesFilter<"email_status_lu"> | Decimal | DecimalJsLike | number | string
    status_desc?: StringNullableWithAggregatesFilter<"email_status_lu"> | string | null
    create_date?: DateTimeNullableWithAggregatesFilter<"email_status_lu"> | Date | string | null
    modify_date?: DateTimeNullableWithAggregatesFilter<"email_status_lu"> | Date | string | null
  }

  export type email_type_luWhereInput = {
    AND?: email_type_luWhereInput | email_type_luWhereInput[]
    OR?: email_type_luWhereInput[]
    NOT?: email_type_luWhereInput | email_type_luWhereInput[]
    email_type_id?: DecimalFilter<"email_type_lu"> | Decimal | DecimalJsLike | number | string
    email_type_desc?: StringNullableFilter<"email_type_lu"> | string | null
    create_date?: DateTimeNullableFilter<"email_type_lu"> | Date | string | null
    modify_date?: DateTimeNullableFilter<"email_type_lu"> | Date | string | null
    email?: EmailListRelationFilter
  }

  export type email_type_luOrderByWithRelationInput = {
    email_type_id?: SortOrder
    email_type_desc?: SortOrderInput | SortOrder
    create_date?: SortOrderInput | SortOrder
    modify_date?: SortOrderInput | SortOrder
    email?: emailOrderByRelationAggregateInput
  }

  export type email_type_luWhereUniqueInput = Prisma.AtLeast<{
    email_type_id?: Decimal | DecimalJsLike | number | string
    AND?: email_type_luWhereInput | email_type_luWhereInput[]
    OR?: email_type_luWhereInput[]
    NOT?: email_type_luWhereInput | email_type_luWhereInput[]
    email_type_desc?: StringNullableFilter<"email_type_lu"> | string | null
    create_date?: DateTimeNullableFilter<"email_type_lu"> | Date | string | null
    modify_date?: DateTimeNullableFilter<"email_type_lu"> | Date | string | null
    email?: EmailListRelationFilter
  }, "email_type_id">

  export type email_type_luOrderByWithAggregationInput = {
    email_type_id?: SortOrder
    email_type_desc?: SortOrderInput | SortOrder
    create_date?: SortOrderInput | SortOrder
    modify_date?: SortOrderInput | SortOrder
    _count?: email_type_luCountOrderByAggregateInput
    _avg?: email_type_luAvgOrderByAggregateInput
    _max?: email_type_luMaxOrderByAggregateInput
    _min?: email_type_luMinOrderByAggregateInput
    _sum?: email_type_luSumOrderByAggregateInput
  }

  export type email_type_luScalarWhereWithAggregatesInput = {
    AND?: email_type_luScalarWhereWithAggregatesInput | email_type_luScalarWhereWithAggregatesInput[]
    OR?: email_type_luScalarWhereWithAggregatesInput[]
    NOT?: email_type_luScalarWhereWithAggregatesInput | email_type_luScalarWhereWithAggregatesInput[]
    email_type_id?: DecimalWithAggregatesFilter<"email_type_lu"> | Decimal | DecimalJsLike | number | string
    email_type_desc?: StringNullableWithAggregatesFilter<"email_type_lu"> | string | null
    create_date?: DateTimeNullableWithAggregatesFilter<"email_type_lu"> | Date | string | null
    modify_date?: DateTimeNullableWithAggregatesFilter<"email_type_lu"> | Date | string | null
  }

  export type id_sequencesWhereInput = {
    AND?: id_sequencesWhereInput | id_sequencesWhereInput[]
    OR?: id_sequencesWhereInput[]
    NOT?: id_sequencesWhereInput | id_sequencesWhereInput[]
    name?: StringFilter<"id_sequences"> | string
    next_block_start?: DecimalFilter<"id_sequences"> | Decimal | DecimalJsLike | number | string
    block_size?: DecimalFilter<"id_sequences"> | Decimal | DecimalJsLike | number | string
    exhausted?: DecimalFilter<"id_sequences"> | Decimal | DecimalJsLike | number | string
  }

  export type id_sequencesOrderByWithRelationInput = {
    name?: SortOrder
    next_block_start?: SortOrder
    block_size?: SortOrder
    exhausted?: SortOrder
  }

  export type id_sequencesWhereUniqueInput = Prisma.AtLeast<{
    name?: string
    AND?: id_sequencesWhereInput | id_sequencesWhereInput[]
    OR?: id_sequencesWhereInput[]
    NOT?: id_sequencesWhereInput | id_sequencesWhereInput[]
    next_block_start?: DecimalFilter<"id_sequences"> | Decimal | DecimalJsLike | number | string
    block_size?: DecimalFilter<"id_sequences"> | Decimal | DecimalJsLike | number | string
    exhausted?: DecimalFilter<"id_sequences"> | Decimal | DecimalJsLike | number | string
  }, "name">

  export type id_sequencesOrderByWithAggregationInput = {
    name?: SortOrder
    next_block_start?: SortOrder
    block_size?: SortOrder
    exhausted?: SortOrder
    _count?: id_sequencesCountOrderByAggregateInput
    _avg?: id_sequencesAvgOrderByAggregateInput
    _max?: id_sequencesMaxOrderByAggregateInput
    _min?: id_sequencesMinOrderByAggregateInput
    _sum?: id_sequencesSumOrderByAggregateInput
  }

  export type id_sequencesScalarWhereWithAggregatesInput = {
    AND?: id_sequencesScalarWhereWithAggregatesInput | id_sequencesScalarWhereWithAggregatesInput[]
    OR?: id_sequencesScalarWhereWithAggregatesInput[]
    NOT?: id_sequencesScalarWhereWithAggregatesInput | id_sequencesScalarWhereWithAggregatesInput[]
    name?: StringWithAggregatesFilter<"id_sequences"> | string
    next_block_start?: DecimalWithAggregatesFilter<"id_sequences"> | Decimal | DecimalJsLike | number | string
    block_size?: DecimalWithAggregatesFilter<"id_sequences"> | Decimal | DecimalJsLike | number | string
    exhausted?: DecimalWithAggregatesFilter<"id_sequences"> | Decimal | DecimalJsLike | number | string
  }

  export type invalid_handlesWhereInput = {
    AND?: invalid_handlesWhereInput | invalid_handlesWhereInput[]
    OR?: invalid_handlesWhereInput[]
    NOT?: invalid_handlesWhereInput | invalid_handlesWhereInput[]
    invalid_handle_id?: IntFilter<"invalid_handles"> | number
    invalid_handle?: StringFilter<"invalid_handles"> | string
  }

  export type invalid_handlesOrderByWithRelationInput = {
    invalid_handle_id?: SortOrder
    invalid_handle?: SortOrder
  }

  export type invalid_handlesWhereUniqueInput = Prisma.AtLeast<{
    invalid_handle_id?: number
    AND?: invalid_handlesWhereInput | invalid_handlesWhereInput[]
    OR?: invalid_handlesWhereInput[]
    NOT?: invalid_handlesWhereInput | invalid_handlesWhereInput[]
    invalid_handle?: StringFilter<"invalid_handles"> | string
  }, "invalid_handle_id">

  export type invalid_handlesOrderByWithAggregationInput = {
    invalid_handle_id?: SortOrder
    invalid_handle?: SortOrder
    _count?: invalid_handlesCountOrderByAggregateInput
    _avg?: invalid_handlesAvgOrderByAggregateInput
    _max?: invalid_handlesMaxOrderByAggregateInput
    _min?: invalid_handlesMinOrderByAggregateInput
    _sum?: invalid_handlesSumOrderByAggregateInput
  }

  export type invalid_handlesScalarWhereWithAggregatesInput = {
    AND?: invalid_handlesScalarWhereWithAggregatesInput | invalid_handlesScalarWhereWithAggregatesInput[]
    OR?: invalid_handlesScalarWhereWithAggregatesInput[]
    NOT?: invalid_handlesScalarWhereWithAggregatesInput | invalid_handlesScalarWhereWithAggregatesInput[]
    invalid_handle_id?: IntWithAggregatesFilter<"invalid_handles"> | number
    invalid_handle?: StringWithAggregatesFilter<"invalid_handles"> | string
  }

  export type security_groupsWhereInput = {
    AND?: security_groupsWhereInput | security_groupsWhereInput[]
    OR?: security_groupsWhereInput[]
    NOT?: security_groupsWhereInput | security_groupsWhereInput[]
    group_id?: DecimalFilter<"security_groups"> | Decimal | DecimalJsLike | number | string
    description?: StringFilter<"security_groups"> | string
    challenge_group_ind?: IntFilter<"security_groups"> | number
    create_user_id?: DecimalNullableFilter<"security_groups"> | Decimal | DecimalJsLike | number | string | null
    user_group_xref?: User_group_xrefListRelationFilter
  }

  export type security_groupsOrderByWithRelationInput = {
    group_id?: SortOrder
    description?: SortOrder
    challenge_group_ind?: SortOrder
    create_user_id?: SortOrderInput | SortOrder
    user_group_xref?: user_group_xrefOrderByRelationAggregateInput
  }

  export type security_groupsWhereUniqueInput = Prisma.AtLeast<{
    group_id?: Decimal | DecimalJsLike | number | string
    AND?: security_groupsWhereInput | security_groupsWhereInput[]
    OR?: security_groupsWhereInput[]
    NOT?: security_groupsWhereInput | security_groupsWhereInput[]
    description?: StringFilter<"security_groups"> | string
    challenge_group_ind?: IntFilter<"security_groups"> | number
    create_user_id?: DecimalNullableFilter<"security_groups"> | Decimal | DecimalJsLike | number | string | null
    user_group_xref?: User_group_xrefListRelationFilter
  }, "group_id">

  export type security_groupsOrderByWithAggregationInput = {
    group_id?: SortOrder
    description?: SortOrder
    challenge_group_ind?: SortOrder
    create_user_id?: SortOrderInput | SortOrder
    _count?: security_groupsCountOrderByAggregateInput
    _avg?: security_groupsAvgOrderByAggregateInput
    _max?: security_groupsMaxOrderByAggregateInput
    _min?: security_groupsMinOrderByAggregateInput
    _sum?: security_groupsSumOrderByAggregateInput
  }

  export type security_groupsScalarWhereWithAggregatesInput = {
    AND?: security_groupsScalarWhereWithAggregatesInput | security_groupsScalarWhereWithAggregatesInput[]
    OR?: security_groupsScalarWhereWithAggregatesInput[]
    NOT?: security_groupsScalarWhereWithAggregatesInput | security_groupsScalarWhereWithAggregatesInput[]
    group_id?: DecimalWithAggregatesFilter<"security_groups"> | Decimal | DecimalJsLike | number | string
    description?: StringWithAggregatesFilter<"security_groups"> | string
    challenge_group_ind?: IntWithAggregatesFilter<"security_groups"> | number
    create_user_id?: DecimalNullableWithAggregatesFilter<"security_groups"> | Decimal | DecimalJsLike | number | string | null
  }

  export type security_status_luWhereInput = {
    AND?: security_status_luWhereInput | security_status_luWhereInput[]
    OR?: security_status_luWhereInput[]
    NOT?: security_status_luWhereInput | security_status_luWhereInput[]
    security_status_id?: DecimalFilter<"security_status_lu"> | Decimal | DecimalJsLike | number | string
    status_desc?: StringNullableFilter<"security_status_lu"> | string | null
    user_group_xref?: User_group_xrefListRelationFilter
  }

  export type security_status_luOrderByWithRelationInput = {
    security_status_id?: SortOrder
    status_desc?: SortOrderInput | SortOrder
    user_group_xref?: user_group_xrefOrderByRelationAggregateInput
  }

  export type security_status_luWhereUniqueInput = Prisma.AtLeast<{
    security_status_id?: Decimal | DecimalJsLike | number | string
    AND?: security_status_luWhereInput | security_status_luWhereInput[]
    OR?: security_status_luWhereInput[]
    NOT?: security_status_luWhereInput | security_status_luWhereInput[]
    status_desc?: StringNullableFilter<"security_status_lu"> | string | null
    user_group_xref?: User_group_xrefListRelationFilter
  }, "security_status_id">

  export type security_status_luOrderByWithAggregationInput = {
    security_status_id?: SortOrder
    status_desc?: SortOrderInput | SortOrder
    _count?: security_status_luCountOrderByAggregateInput
    _avg?: security_status_luAvgOrderByAggregateInput
    _max?: security_status_luMaxOrderByAggregateInput
    _min?: security_status_luMinOrderByAggregateInput
    _sum?: security_status_luSumOrderByAggregateInput
  }

  export type security_status_luScalarWhereWithAggregatesInput = {
    AND?: security_status_luScalarWhereWithAggregatesInput | security_status_luScalarWhereWithAggregatesInput[]
    OR?: security_status_luScalarWhereWithAggregatesInput[]
    NOT?: security_status_luScalarWhereWithAggregatesInput | security_status_luScalarWhereWithAggregatesInput[]
    security_status_id?: DecimalWithAggregatesFilter<"security_status_lu"> | Decimal | DecimalJsLike | number | string
    status_desc?: StringNullableWithAggregatesFilter<"security_status_lu"> | string | null
  }

  export type security_userWhereInput = {
    AND?: security_userWhereInput | security_userWhereInput[]
    OR?: security_userWhereInput[]
    NOT?: security_userWhereInput | security_userWhereInput[]
    login_id?: DecimalFilter<"security_user"> | Decimal | DecimalJsLike | number | string
    user_id?: StringFilter<"security_user"> | string
    password?: StringFilter<"security_user"> | string
    create_user_id?: DecimalNullableFilter<"security_user"> | Decimal | DecimalJsLike | number | string | null
    modify_date?: DateTimeNullableFilter<"security_user"> | Date | string | null
    user_group_xref?: User_group_xrefListRelationFilter
  }

  export type security_userOrderByWithRelationInput = {
    login_id?: SortOrder
    user_id?: SortOrder
    password?: SortOrder
    create_user_id?: SortOrderInput | SortOrder
    modify_date?: SortOrderInput | SortOrder
    user_group_xref?: user_group_xrefOrderByRelationAggregateInput
  }

  export type security_userWhereUniqueInput = Prisma.AtLeast<{
    login_id?: Decimal | DecimalJsLike | number | string
    user_id?: string
    AND?: security_userWhereInput | security_userWhereInput[]
    OR?: security_userWhereInput[]
    NOT?: security_userWhereInput | security_userWhereInput[]
    password?: StringFilter<"security_user"> | string
    create_user_id?: DecimalNullableFilter<"security_user"> | Decimal | DecimalJsLike | number | string | null
    modify_date?: DateTimeNullableFilter<"security_user"> | Date | string | null
    user_group_xref?: User_group_xrefListRelationFilter
  }, "login_id" | "user_id">

  export type security_userOrderByWithAggregationInput = {
    login_id?: SortOrder
    user_id?: SortOrder
    password?: SortOrder
    create_user_id?: SortOrderInput | SortOrder
    modify_date?: SortOrderInput | SortOrder
    _count?: security_userCountOrderByAggregateInput
    _avg?: security_userAvgOrderByAggregateInput
    _max?: security_userMaxOrderByAggregateInput
    _min?: security_userMinOrderByAggregateInput
    _sum?: security_userSumOrderByAggregateInput
  }

  export type security_userScalarWhereWithAggregatesInput = {
    AND?: security_userScalarWhereWithAggregatesInput | security_userScalarWhereWithAggregatesInput[]
    OR?: security_userScalarWhereWithAggregatesInput[]
    NOT?: security_userScalarWhereWithAggregatesInput | security_userScalarWhereWithAggregatesInput[]
    login_id?: DecimalWithAggregatesFilter<"security_user"> | Decimal | DecimalJsLike | number | string
    user_id?: StringWithAggregatesFilter<"security_user"> | string
    password?: StringWithAggregatesFilter<"security_user"> | string
    create_user_id?: DecimalNullableWithAggregatesFilter<"security_user"> | Decimal | DecimalJsLike | number | string | null
    modify_date?: DateTimeNullableWithAggregatesFilter<"security_user"> | Date | string | null
  }

  export type social_login_providerWhereInput = {
    AND?: social_login_providerWhereInput | social_login_providerWhereInput[]
    OR?: social_login_providerWhereInput[]
    NOT?: social_login_providerWhereInput | social_login_providerWhereInput[]
    social_login_provider_id?: DecimalFilter<"social_login_provider"> | Decimal | DecimalJsLike | number | string
    name?: StringNullableFilter<"social_login_provider"> | string | null
    user_social_login?: User_social_loginListRelationFilter
  }

  export type social_login_providerOrderByWithRelationInput = {
    social_login_provider_id?: SortOrder
    name?: SortOrderInput | SortOrder
    user_social_login?: user_social_loginOrderByRelationAggregateInput
  }

  export type social_login_providerWhereUniqueInput = Prisma.AtLeast<{
    social_login_provider_id?: Decimal | DecimalJsLike | number | string
    AND?: social_login_providerWhereInput | social_login_providerWhereInput[]
    OR?: social_login_providerWhereInput[]
    NOT?: social_login_providerWhereInput | social_login_providerWhereInput[]
    name?: StringNullableFilter<"social_login_provider"> | string | null
    user_social_login?: User_social_loginListRelationFilter
  }, "social_login_provider_id">

  export type social_login_providerOrderByWithAggregationInput = {
    social_login_provider_id?: SortOrder
    name?: SortOrderInput | SortOrder
    _count?: social_login_providerCountOrderByAggregateInput
    _avg?: social_login_providerAvgOrderByAggregateInput
    _max?: social_login_providerMaxOrderByAggregateInput
    _min?: social_login_providerMinOrderByAggregateInput
    _sum?: social_login_providerSumOrderByAggregateInput
  }

  export type social_login_providerScalarWhereWithAggregatesInput = {
    AND?: social_login_providerScalarWhereWithAggregatesInput | social_login_providerScalarWhereWithAggregatesInput[]
    OR?: social_login_providerScalarWhereWithAggregatesInput[]
    NOT?: social_login_providerScalarWhereWithAggregatesInput | social_login_providerScalarWhereWithAggregatesInput[]
    social_login_provider_id?: DecimalWithAggregatesFilter<"social_login_provider"> | Decimal | DecimalJsLike | number | string
    name?: StringNullableWithAggregatesFilter<"social_login_provider"> | string | null
  }

  export type sso_login_providerWhereInput = {
    AND?: sso_login_providerWhereInput | sso_login_providerWhereInput[]
    OR?: sso_login_providerWhereInput[]
    NOT?: sso_login_providerWhereInput | sso_login_providerWhereInput[]
    sso_login_provider_id?: DecimalFilter<"sso_login_provider"> | Decimal | DecimalJsLike | number | string
    name?: StringNullableFilter<"sso_login_provider"> | string | null
    type?: StringFilter<"sso_login_provider"> | string
    identify_email_enabled?: BoolFilter<"sso_login_provider"> | boolean
    identify_handle_enabled?: BoolFilter<"sso_login_provider"> | boolean
    user_sso_login?: User_sso_loginListRelationFilter
  }

  export type sso_login_providerOrderByWithRelationInput = {
    sso_login_provider_id?: SortOrder
    name?: SortOrderInput | SortOrder
    type?: SortOrder
    identify_email_enabled?: SortOrder
    identify_handle_enabled?: SortOrder
    user_sso_login?: user_sso_loginOrderByRelationAggregateInput
  }

  export type sso_login_providerWhereUniqueInput = Prisma.AtLeast<{
    sso_login_provider_id?: Decimal | DecimalJsLike | number | string
    AND?: sso_login_providerWhereInput | sso_login_providerWhereInput[]
    OR?: sso_login_providerWhereInput[]
    NOT?: sso_login_providerWhereInput | sso_login_providerWhereInput[]
    name?: StringNullableFilter<"sso_login_provider"> | string | null
    type?: StringFilter<"sso_login_provider"> | string
    identify_email_enabled?: BoolFilter<"sso_login_provider"> | boolean
    identify_handle_enabled?: BoolFilter<"sso_login_provider"> | boolean
    user_sso_login?: User_sso_loginListRelationFilter
  }, "sso_login_provider_id">

  export type sso_login_providerOrderByWithAggregationInput = {
    sso_login_provider_id?: SortOrder
    name?: SortOrderInput | SortOrder
    type?: SortOrder
    identify_email_enabled?: SortOrder
    identify_handle_enabled?: SortOrder
    _count?: sso_login_providerCountOrderByAggregateInput
    _avg?: sso_login_providerAvgOrderByAggregateInput
    _max?: sso_login_providerMaxOrderByAggregateInput
    _min?: sso_login_providerMinOrderByAggregateInput
    _sum?: sso_login_providerSumOrderByAggregateInput
  }

  export type sso_login_providerScalarWhereWithAggregatesInput = {
    AND?: sso_login_providerScalarWhereWithAggregatesInput | sso_login_providerScalarWhereWithAggregatesInput[]
    OR?: sso_login_providerScalarWhereWithAggregatesInput[]
    NOT?: sso_login_providerScalarWhereWithAggregatesInput | sso_login_providerScalarWhereWithAggregatesInput[]
    sso_login_provider_id?: DecimalWithAggregatesFilter<"sso_login_provider"> | Decimal | DecimalJsLike | number | string
    name?: StringNullableWithAggregatesFilter<"sso_login_provider"> | string | null
    type?: StringWithAggregatesFilter<"sso_login_provider"> | string
    identify_email_enabled?: BoolWithAggregatesFilter<"sso_login_provider"> | boolean
    identify_handle_enabled?: BoolWithAggregatesFilter<"sso_login_provider"> | boolean
  }

  export type userWhereInput = {
    AND?: userWhereInput | userWhereInput[]
    OR?: userWhereInput[]
    NOT?: userWhereInput | userWhereInput[]
    user_id?: DecimalFilter<"user"> | Decimal | DecimalJsLike | number | string
    first_name?: StringNullableFilter<"user"> | string | null
    last_name?: StringNullableFilter<"user"> | string | null
    create_date?: DateTimeNullableFilter<"user"> | Date | string | null
    modify_date?: DateTimeNullableFilter<"user"> | Date | string | null
    handle?: StringFilter<"user"> | string
    last_login?: DateTimeNullableFilter<"user"> | Date | string | null
    status?: StringFilter<"user"> | string
    activation_code?: StringNullableFilter<"user"> | string | null
    middle_name?: StringNullableFilter<"user"> | string | null
    handle_lower?: StringNullableFilter<"user"> | string | null
    timezone_id?: DecimalNullableFilter<"user"> | Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: DateTimeNullableFilter<"user"> | Date | string | null
    name_in_another_language?: StringNullableFilter<"user"> | string | null
    password?: StringNullableFilter<"user"> | string | null
    open_id?: StringNullableFilter<"user"> | string | null
    reg_source?: StringNullableFilter<"user"> | string | null
    utm_source?: StringNullableFilter<"user"> | string | null
    utm_medium?: StringNullableFilter<"user"> | string | null
    utm_campaign?: StringNullableFilter<"user"> | string | null
    dice_connection?: XOR<Dice_connectionNullableScalarRelationFilter, dice_connectionWhereInput> | null
    user_2fa?: XOR<User_2faNullableScalarRelationFilter, user_2faWhereInput> | null
    user_achievement?: User_achievementListRelationFilter
    user_otp_email?: User_otp_emailListRelationFilter
    user_social_login?: User_social_loginListRelationFilter
    user_sso_login?: User_sso_loginListRelationFilter
    user_status?: User_statusListRelationFilter
    user_email_xref?: User_email_xrefListRelationFilter
    emails?: EmailListRelationFilter
  }

  export type userOrderByWithRelationInput = {
    user_id?: SortOrder
    first_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    create_date?: SortOrderInput | SortOrder
    modify_date?: SortOrderInput | SortOrder
    handle?: SortOrder
    last_login?: SortOrderInput | SortOrder
    status?: SortOrder
    activation_code?: SortOrderInput | SortOrder
    middle_name?: SortOrderInput | SortOrder
    handle_lower?: SortOrderInput | SortOrder
    timezone_id?: SortOrderInput | SortOrder
    last_site_hit_date?: SortOrderInput | SortOrder
    name_in_another_language?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    open_id?: SortOrderInput | SortOrder
    reg_source?: SortOrderInput | SortOrder
    utm_source?: SortOrderInput | SortOrder
    utm_medium?: SortOrderInput | SortOrder
    utm_campaign?: SortOrderInput | SortOrder
    dice_connection?: dice_connectionOrderByWithRelationInput
    user_2fa?: user_2faOrderByWithRelationInput
    user_achievement?: user_achievementOrderByRelationAggregateInput
    user_otp_email?: user_otp_emailOrderByRelationAggregateInput
    user_social_login?: user_social_loginOrderByRelationAggregateInput
    user_sso_login?: user_sso_loginOrderByRelationAggregateInput
    user_status?: user_statusOrderByRelationAggregateInput
    user_email_xref?: user_email_xrefOrderByRelationAggregateInput
    emails?: emailOrderByRelationAggregateInput
  }

  export type userWhereUniqueInput = Prisma.AtLeast<{
    user_id?: Decimal | DecimalJsLike | number | string
    AND?: userWhereInput | userWhereInput[]
    OR?: userWhereInput[]
    NOT?: userWhereInput | userWhereInput[]
    first_name?: StringNullableFilter<"user"> | string | null
    last_name?: StringNullableFilter<"user"> | string | null
    create_date?: DateTimeNullableFilter<"user"> | Date | string | null
    modify_date?: DateTimeNullableFilter<"user"> | Date | string | null
    handle?: StringFilter<"user"> | string
    last_login?: DateTimeNullableFilter<"user"> | Date | string | null
    status?: StringFilter<"user"> | string
    activation_code?: StringNullableFilter<"user"> | string | null
    middle_name?: StringNullableFilter<"user"> | string | null
    handle_lower?: StringNullableFilter<"user"> | string | null
    timezone_id?: DecimalNullableFilter<"user"> | Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: DateTimeNullableFilter<"user"> | Date | string | null
    name_in_another_language?: StringNullableFilter<"user"> | string | null
    password?: StringNullableFilter<"user"> | string | null
    open_id?: StringNullableFilter<"user"> | string | null
    reg_source?: StringNullableFilter<"user"> | string | null
    utm_source?: StringNullableFilter<"user"> | string | null
    utm_medium?: StringNullableFilter<"user"> | string | null
    utm_campaign?: StringNullableFilter<"user"> | string | null
    dice_connection?: XOR<Dice_connectionNullableScalarRelationFilter, dice_connectionWhereInput> | null
    user_2fa?: XOR<User_2faNullableScalarRelationFilter, user_2faWhereInput> | null
    user_achievement?: User_achievementListRelationFilter
    user_otp_email?: User_otp_emailListRelationFilter
    user_social_login?: User_social_loginListRelationFilter
    user_sso_login?: User_sso_loginListRelationFilter
    user_status?: User_statusListRelationFilter
    user_email_xref?: User_email_xrefListRelationFilter
    emails?: EmailListRelationFilter
  }, "user_id">

  export type userOrderByWithAggregationInput = {
    user_id?: SortOrder
    first_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    create_date?: SortOrderInput | SortOrder
    modify_date?: SortOrderInput | SortOrder
    handle?: SortOrder
    last_login?: SortOrderInput | SortOrder
    status?: SortOrder
    activation_code?: SortOrderInput | SortOrder
    middle_name?: SortOrderInput | SortOrder
    handle_lower?: SortOrderInput | SortOrder
    timezone_id?: SortOrderInput | SortOrder
    last_site_hit_date?: SortOrderInput | SortOrder
    name_in_another_language?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    open_id?: SortOrderInput | SortOrder
    reg_source?: SortOrderInput | SortOrder
    utm_source?: SortOrderInput | SortOrder
    utm_medium?: SortOrderInput | SortOrder
    utm_campaign?: SortOrderInput | SortOrder
    _count?: userCountOrderByAggregateInput
    _avg?: userAvgOrderByAggregateInput
    _max?: userMaxOrderByAggregateInput
    _min?: userMinOrderByAggregateInput
    _sum?: userSumOrderByAggregateInput
  }

  export type userScalarWhereWithAggregatesInput = {
    AND?: userScalarWhereWithAggregatesInput | userScalarWhereWithAggregatesInput[]
    OR?: userScalarWhereWithAggregatesInput[]
    NOT?: userScalarWhereWithAggregatesInput | userScalarWhereWithAggregatesInput[]
    user_id?: DecimalWithAggregatesFilter<"user"> | Decimal | DecimalJsLike | number | string
    first_name?: StringNullableWithAggregatesFilter<"user"> | string | null
    last_name?: StringNullableWithAggregatesFilter<"user"> | string | null
    create_date?: DateTimeNullableWithAggregatesFilter<"user"> | Date | string | null
    modify_date?: DateTimeNullableWithAggregatesFilter<"user"> | Date | string | null
    handle?: StringWithAggregatesFilter<"user"> | string
    last_login?: DateTimeNullableWithAggregatesFilter<"user"> | Date | string | null
    status?: StringWithAggregatesFilter<"user"> | string
    activation_code?: StringNullableWithAggregatesFilter<"user"> | string | null
    middle_name?: StringNullableWithAggregatesFilter<"user"> | string | null
    handle_lower?: StringNullableWithAggregatesFilter<"user"> | string | null
    timezone_id?: DecimalNullableWithAggregatesFilter<"user"> | Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: DateTimeNullableWithAggregatesFilter<"user"> | Date | string | null
    name_in_another_language?: StringNullableWithAggregatesFilter<"user"> | string | null
    password?: StringNullableWithAggregatesFilter<"user"> | string | null
    open_id?: StringNullableWithAggregatesFilter<"user"> | string | null
    reg_source?: StringNullableWithAggregatesFilter<"user"> | string | null
    utm_source?: StringNullableWithAggregatesFilter<"user"> | string | null
    utm_medium?: StringNullableWithAggregatesFilter<"user"> | string | null
    utm_campaign?: StringNullableWithAggregatesFilter<"user"> | string | null
  }

  export type user_2faWhereInput = {
    AND?: user_2faWhereInput | user_2faWhereInput[]
    OR?: user_2faWhereInput[]
    NOT?: user_2faWhereInput | user_2faWhereInput[]
    id?: IntFilter<"user_2fa"> | number
    user_id?: DecimalFilter<"user_2fa"> | Decimal | DecimalJsLike | number | string
    mfa_enabled?: BoolFilter<"user_2fa"> | boolean
    dice_enabled?: BoolFilter<"user_2fa"> | boolean
    created_by?: DecimalFilter<"user_2fa"> | Decimal | DecimalJsLike | number | string
    created_at?: DateTimeFilter<"user_2fa"> | Date | string
    modified_by?: DecimalFilter<"user_2fa"> | Decimal | DecimalJsLike | number | string
    modified_at?: DateTimeFilter<"user_2fa"> | Date | string
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type user_2faOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    mfa_enabled?: SortOrder
    dice_enabled?: SortOrder
    created_by?: SortOrder
    created_at?: SortOrder
    modified_by?: SortOrder
    modified_at?: SortOrder
    user?: userOrderByWithRelationInput
  }

  export type user_2faWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    user_id?: Decimal | DecimalJsLike | number | string
    AND?: user_2faWhereInput | user_2faWhereInput[]
    OR?: user_2faWhereInput[]
    NOT?: user_2faWhereInput | user_2faWhereInput[]
    mfa_enabled?: BoolFilter<"user_2fa"> | boolean
    dice_enabled?: BoolFilter<"user_2fa"> | boolean
    created_by?: DecimalFilter<"user_2fa"> | Decimal | DecimalJsLike | number | string
    created_at?: DateTimeFilter<"user_2fa"> | Date | string
    modified_by?: DecimalFilter<"user_2fa"> | Decimal | DecimalJsLike | number | string
    modified_at?: DateTimeFilter<"user_2fa"> | Date | string
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id" | "user_id">

  export type user_2faOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    mfa_enabled?: SortOrder
    dice_enabled?: SortOrder
    created_by?: SortOrder
    created_at?: SortOrder
    modified_by?: SortOrder
    modified_at?: SortOrder
    _count?: user_2faCountOrderByAggregateInput
    _avg?: user_2faAvgOrderByAggregateInput
    _max?: user_2faMaxOrderByAggregateInput
    _min?: user_2faMinOrderByAggregateInput
    _sum?: user_2faSumOrderByAggregateInput
  }

  export type user_2faScalarWhereWithAggregatesInput = {
    AND?: user_2faScalarWhereWithAggregatesInput | user_2faScalarWhereWithAggregatesInput[]
    OR?: user_2faScalarWhereWithAggregatesInput[]
    NOT?: user_2faScalarWhereWithAggregatesInput | user_2faScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"user_2fa"> | number
    user_id?: DecimalWithAggregatesFilter<"user_2fa"> | Decimal | DecimalJsLike | number | string
    mfa_enabled?: BoolWithAggregatesFilter<"user_2fa"> | boolean
    dice_enabled?: BoolWithAggregatesFilter<"user_2fa"> | boolean
    created_by?: DecimalWithAggregatesFilter<"user_2fa"> | Decimal | DecimalJsLike | number | string
    created_at?: DateTimeWithAggregatesFilter<"user_2fa"> | Date | string
    modified_by?: DecimalWithAggregatesFilter<"user_2fa"> | Decimal | DecimalJsLike | number | string
    modified_at?: DateTimeWithAggregatesFilter<"user_2fa"> | Date | string
  }

  export type user_achievementWhereInput = {
    AND?: user_achievementWhereInput | user_achievementWhereInput[]
    OR?: user_achievementWhereInput[]
    NOT?: user_achievementWhereInput | user_achievementWhereInput[]
    user_id?: DecimalFilter<"user_achievement"> | Decimal | DecimalJsLike | number | string
    achievement_date?: DateTimeFilter<"user_achievement"> | Date | string
    achievement_type_id?: DecimalFilter<"user_achievement"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableFilter<"user_achievement"> | string | null
    create_date?: DateTimeNullableFilter<"user_achievement"> | Date | string | null
    achievement_type_lu?: XOR<Achievement_type_luScalarRelationFilter, achievement_type_luWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type user_achievementOrderByWithRelationInput = {
    user_id?: SortOrder
    achievement_date?: SortOrder
    achievement_type_id?: SortOrder
    description?: SortOrderInput | SortOrder
    create_date?: SortOrderInput | SortOrder
    achievement_type_lu?: achievement_type_luOrderByWithRelationInput
    user?: userOrderByWithRelationInput
  }

  export type user_achievementWhereUniqueInput = Prisma.AtLeast<{
    user_id_achievement_type_id?: user_achievementUser_idAchievement_type_idCompoundUniqueInput
    AND?: user_achievementWhereInput | user_achievementWhereInput[]
    OR?: user_achievementWhereInput[]
    NOT?: user_achievementWhereInput | user_achievementWhereInput[]
    user_id?: DecimalFilter<"user_achievement"> | Decimal | DecimalJsLike | number | string
    achievement_date?: DateTimeFilter<"user_achievement"> | Date | string
    achievement_type_id?: DecimalFilter<"user_achievement"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableFilter<"user_achievement"> | string | null
    create_date?: DateTimeNullableFilter<"user_achievement"> | Date | string | null
    achievement_type_lu?: XOR<Achievement_type_luScalarRelationFilter, achievement_type_luWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "user_id_achievement_type_id">

  export type user_achievementOrderByWithAggregationInput = {
    user_id?: SortOrder
    achievement_date?: SortOrder
    achievement_type_id?: SortOrder
    description?: SortOrderInput | SortOrder
    create_date?: SortOrderInput | SortOrder
    _count?: user_achievementCountOrderByAggregateInput
    _avg?: user_achievementAvgOrderByAggregateInput
    _max?: user_achievementMaxOrderByAggregateInput
    _min?: user_achievementMinOrderByAggregateInput
    _sum?: user_achievementSumOrderByAggregateInput
  }

  export type user_achievementScalarWhereWithAggregatesInput = {
    AND?: user_achievementScalarWhereWithAggregatesInput | user_achievementScalarWhereWithAggregatesInput[]
    OR?: user_achievementScalarWhereWithAggregatesInput[]
    NOT?: user_achievementScalarWhereWithAggregatesInput | user_achievementScalarWhereWithAggregatesInput[]
    user_id?: DecimalWithAggregatesFilter<"user_achievement"> | Decimal | DecimalJsLike | number | string
    achievement_date?: DateTimeWithAggregatesFilter<"user_achievement"> | Date | string
    achievement_type_id?: DecimalWithAggregatesFilter<"user_achievement"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableWithAggregatesFilter<"user_achievement"> | string | null
    create_date?: DateTimeNullableWithAggregatesFilter<"user_achievement"> | Date | string | null
  }

  export type user_group_xrefWhereInput = {
    AND?: user_group_xrefWhereInput | user_group_xrefWhereInput[]
    OR?: user_group_xrefWhereInput[]
    NOT?: user_group_xrefWhereInput | user_group_xrefWhereInput[]
    user_group_id?: DecimalFilter<"user_group_xref"> | Decimal | DecimalJsLike | number | string
    login_id?: DecimalNullableFilter<"user_group_xref"> | Decimal | DecimalJsLike | number | string | null
    group_id?: DecimalNullableFilter<"user_group_xref"> | Decimal | DecimalJsLike | number | string | null
    create_user_id?: DecimalNullableFilter<"user_group_xref"> | Decimal | DecimalJsLike | number | string | null
    security_status_id?: DecimalNullableFilter<"user_group_xref"> | Decimal | DecimalJsLike | number | string | null
    create_date?: DateTimeNullableFilter<"user_group_xref"> | Date | string | null
    security_user?: XOR<Security_userNullableScalarRelationFilter, security_userWhereInput> | null
    security_groups?: XOR<Security_groupsNullableScalarRelationFilter, security_groupsWhereInput> | null
    security_status_lu?: XOR<Security_status_luNullableScalarRelationFilter, security_status_luWhereInput> | null
  }

  export type user_group_xrefOrderByWithRelationInput = {
    user_group_id?: SortOrder
    login_id?: SortOrderInput | SortOrder
    group_id?: SortOrderInput | SortOrder
    create_user_id?: SortOrderInput | SortOrder
    security_status_id?: SortOrderInput | SortOrder
    create_date?: SortOrderInput | SortOrder
    security_user?: security_userOrderByWithRelationInput
    security_groups?: security_groupsOrderByWithRelationInput
    security_status_lu?: security_status_luOrderByWithRelationInput
  }

  export type user_group_xrefWhereUniqueInput = Prisma.AtLeast<{
    user_group_id?: Decimal | DecimalJsLike | number | string
    login_id_group_id?: user_group_xrefLogin_idGroup_idCompoundUniqueInput
    AND?: user_group_xrefWhereInput | user_group_xrefWhereInput[]
    OR?: user_group_xrefWhereInput[]
    NOT?: user_group_xrefWhereInput | user_group_xrefWhereInput[]
    login_id?: DecimalNullableFilter<"user_group_xref"> | Decimal | DecimalJsLike | number | string | null
    group_id?: DecimalNullableFilter<"user_group_xref"> | Decimal | DecimalJsLike | number | string | null
    create_user_id?: DecimalNullableFilter<"user_group_xref"> | Decimal | DecimalJsLike | number | string | null
    security_status_id?: DecimalNullableFilter<"user_group_xref"> | Decimal | DecimalJsLike | number | string | null
    create_date?: DateTimeNullableFilter<"user_group_xref"> | Date | string | null
    security_user?: XOR<Security_userNullableScalarRelationFilter, security_userWhereInput> | null
    security_groups?: XOR<Security_groupsNullableScalarRelationFilter, security_groupsWhereInput> | null
    security_status_lu?: XOR<Security_status_luNullableScalarRelationFilter, security_status_luWhereInput> | null
  }, "user_group_id" | "login_id_group_id">

  export type user_group_xrefOrderByWithAggregationInput = {
    user_group_id?: SortOrder
    login_id?: SortOrderInput | SortOrder
    group_id?: SortOrderInput | SortOrder
    create_user_id?: SortOrderInput | SortOrder
    security_status_id?: SortOrderInput | SortOrder
    create_date?: SortOrderInput | SortOrder
    _count?: user_group_xrefCountOrderByAggregateInput
    _avg?: user_group_xrefAvgOrderByAggregateInput
    _max?: user_group_xrefMaxOrderByAggregateInput
    _min?: user_group_xrefMinOrderByAggregateInput
    _sum?: user_group_xrefSumOrderByAggregateInput
  }

  export type user_group_xrefScalarWhereWithAggregatesInput = {
    AND?: user_group_xrefScalarWhereWithAggregatesInput | user_group_xrefScalarWhereWithAggregatesInput[]
    OR?: user_group_xrefScalarWhereWithAggregatesInput[]
    NOT?: user_group_xrefScalarWhereWithAggregatesInput | user_group_xrefScalarWhereWithAggregatesInput[]
    user_group_id?: DecimalWithAggregatesFilter<"user_group_xref"> | Decimal | DecimalJsLike | number | string
    login_id?: DecimalNullableWithAggregatesFilter<"user_group_xref"> | Decimal | DecimalJsLike | number | string | null
    group_id?: DecimalNullableWithAggregatesFilter<"user_group_xref"> | Decimal | DecimalJsLike | number | string | null
    create_user_id?: DecimalNullableWithAggregatesFilter<"user_group_xref"> | Decimal | DecimalJsLike | number | string | null
    security_status_id?: DecimalNullableWithAggregatesFilter<"user_group_xref"> | Decimal | DecimalJsLike | number | string | null
    create_date?: DateTimeNullableWithAggregatesFilter<"user_group_xref"> | Date | string | null
  }

  export type user_otp_emailWhereInput = {
    AND?: user_otp_emailWhereInput | user_otp_emailWhereInput[]
    OR?: user_otp_emailWhereInput[]
    NOT?: user_otp_emailWhereInput | user_otp_emailWhereInput[]
    id?: IntFilter<"user_otp_email"> | number
    user_id?: DecimalFilter<"user_otp_email"> | Decimal | DecimalJsLike | number | string
    mode?: IntFilter<"user_otp_email"> | number
    otp?: StringFilter<"user_otp_email"> | string
    expire_at?: DateTimeFilter<"user_otp_email"> | Date | string
    resend?: BoolFilter<"user_otp_email"> | boolean
    fail_count?: IntFilter<"user_otp_email"> | number
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type user_otp_emailOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    mode?: SortOrder
    otp?: SortOrder
    expire_at?: SortOrder
    resend?: SortOrder
    fail_count?: SortOrder
    user?: userOrderByWithRelationInput
  }

  export type user_otp_emailWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    user_id_mode?: user_otp_emailUser_idModeCompoundUniqueInput
    AND?: user_otp_emailWhereInput | user_otp_emailWhereInput[]
    OR?: user_otp_emailWhereInput[]
    NOT?: user_otp_emailWhereInput | user_otp_emailWhereInput[]
    user_id?: DecimalFilter<"user_otp_email"> | Decimal | DecimalJsLike | number | string
    mode?: IntFilter<"user_otp_email"> | number
    otp?: StringFilter<"user_otp_email"> | string
    expire_at?: DateTimeFilter<"user_otp_email"> | Date | string
    resend?: BoolFilter<"user_otp_email"> | boolean
    fail_count?: IntFilter<"user_otp_email"> | number
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id" | "user_id_mode">

  export type user_otp_emailOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    mode?: SortOrder
    otp?: SortOrder
    expire_at?: SortOrder
    resend?: SortOrder
    fail_count?: SortOrder
    _count?: user_otp_emailCountOrderByAggregateInput
    _avg?: user_otp_emailAvgOrderByAggregateInput
    _max?: user_otp_emailMaxOrderByAggregateInput
    _min?: user_otp_emailMinOrderByAggregateInput
    _sum?: user_otp_emailSumOrderByAggregateInput
  }

  export type user_otp_emailScalarWhereWithAggregatesInput = {
    AND?: user_otp_emailScalarWhereWithAggregatesInput | user_otp_emailScalarWhereWithAggregatesInput[]
    OR?: user_otp_emailScalarWhereWithAggregatesInput[]
    NOT?: user_otp_emailScalarWhereWithAggregatesInput | user_otp_emailScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"user_otp_email"> | number
    user_id?: DecimalWithAggregatesFilter<"user_otp_email"> | Decimal | DecimalJsLike | number | string
    mode?: IntWithAggregatesFilter<"user_otp_email"> | number
    otp?: StringWithAggregatesFilter<"user_otp_email"> | string
    expire_at?: DateTimeWithAggregatesFilter<"user_otp_email"> | Date | string
    resend?: BoolWithAggregatesFilter<"user_otp_email"> | boolean
    fail_count?: IntWithAggregatesFilter<"user_otp_email"> | number
  }

  export type user_social_loginWhereInput = {
    AND?: user_social_loginWhereInput | user_social_loginWhereInput[]
    OR?: user_social_loginWhereInput[]
    NOT?: user_social_loginWhereInput | user_social_loginWhereInput[]
    social_user_id?: StringNullableFilter<"user_social_login"> | string | null
    user_id?: DecimalFilter<"user_social_login"> | Decimal | DecimalJsLike | number | string
    social_login_provider_id?: DecimalFilter<"user_social_login"> | Decimal | DecimalJsLike | number | string
    social_user_name?: StringFilter<"user_social_login"> | string
    social_email?: StringNullableFilter<"user_social_login"> | string | null
    social_email_verified?: BoolNullableFilter<"user_social_login"> | boolean | null
    create_date?: DateTimeNullableFilter<"user_social_login"> | Date | string | null
    modify_date?: DateTimeNullableFilter<"user_social_login"> | Date | string | null
    social_login_provider?: XOR<Social_login_providerScalarRelationFilter, social_login_providerWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type user_social_loginOrderByWithRelationInput = {
    social_user_id?: SortOrderInput | SortOrder
    user_id?: SortOrder
    social_login_provider_id?: SortOrder
    social_user_name?: SortOrder
    social_email?: SortOrderInput | SortOrder
    social_email_verified?: SortOrderInput | SortOrder
    create_date?: SortOrderInput | SortOrder
    modify_date?: SortOrderInput | SortOrder
    social_login_provider?: social_login_providerOrderByWithRelationInput
    user?: userOrderByWithRelationInput
  }

  export type user_social_loginWhereUniqueInput = Prisma.AtLeast<{
    user_id_social_login_provider_id?: user_social_loginUser_idSocial_login_provider_idCompoundUniqueInput
    AND?: user_social_loginWhereInput | user_social_loginWhereInput[]
    OR?: user_social_loginWhereInput[]
    NOT?: user_social_loginWhereInput | user_social_loginWhereInput[]
    social_user_id?: StringNullableFilter<"user_social_login"> | string | null
    user_id?: DecimalFilter<"user_social_login"> | Decimal | DecimalJsLike | number | string
    social_login_provider_id?: DecimalFilter<"user_social_login"> | Decimal | DecimalJsLike | number | string
    social_user_name?: StringFilter<"user_social_login"> | string
    social_email?: StringNullableFilter<"user_social_login"> | string | null
    social_email_verified?: BoolNullableFilter<"user_social_login"> | boolean | null
    create_date?: DateTimeNullableFilter<"user_social_login"> | Date | string | null
    modify_date?: DateTimeNullableFilter<"user_social_login"> | Date | string | null
    social_login_provider?: XOR<Social_login_providerScalarRelationFilter, social_login_providerWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "user_id_social_login_provider_id">

  export type user_social_loginOrderByWithAggregationInput = {
    social_user_id?: SortOrderInput | SortOrder
    user_id?: SortOrder
    social_login_provider_id?: SortOrder
    social_user_name?: SortOrder
    social_email?: SortOrderInput | SortOrder
    social_email_verified?: SortOrderInput | SortOrder
    create_date?: SortOrderInput | SortOrder
    modify_date?: SortOrderInput | SortOrder
    _count?: user_social_loginCountOrderByAggregateInput
    _avg?: user_social_loginAvgOrderByAggregateInput
    _max?: user_social_loginMaxOrderByAggregateInput
    _min?: user_social_loginMinOrderByAggregateInput
    _sum?: user_social_loginSumOrderByAggregateInput
  }

  export type user_social_loginScalarWhereWithAggregatesInput = {
    AND?: user_social_loginScalarWhereWithAggregatesInput | user_social_loginScalarWhereWithAggregatesInput[]
    OR?: user_social_loginScalarWhereWithAggregatesInput[]
    NOT?: user_social_loginScalarWhereWithAggregatesInput | user_social_loginScalarWhereWithAggregatesInput[]
    social_user_id?: StringNullableWithAggregatesFilter<"user_social_login"> | string | null
    user_id?: DecimalWithAggregatesFilter<"user_social_login"> | Decimal | DecimalJsLike | number | string
    social_login_provider_id?: DecimalWithAggregatesFilter<"user_social_login"> | Decimal | DecimalJsLike | number | string
    social_user_name?: StringWithAggregatesFilter<"user_social_login"> | string
    social_email?: StringNullableWithAggregatesFilter<"user_social_login"> | string | null
    social_email_verified?: BoolNullableWithAggregatesFilter<"user_social_login"> | boolean | null
    create_date?: DateTimeNullableWithAggregatesFilter<"user_social_login"> | Date | string | null
    modify_date?: DateTimeNullableWithAggregatesFilter<"user_social_login"> | Date | string | null
  }

  export type user_sso_loginWhereInput = {
    AND?: user_sso_loginWhereInput | user_sso_loginWhereInput[]
    OR?: user_sso_loginWhereInput[]
    NOT?: user_sso_loginWhereInput | user_sso_loginWhereInput[]
    user_id?: DecimalFilter<"user_sso_login"> | Decimal | DecimalJsLike | number | string
    sso_user_id?: StringFilter<"user_sso_login"> | string
    sso_user_name?: StringNullableFilter<"user_sso_login"> | string | null
    provider_id?: DecimalFilter<"user_sso_login"> | Decimal | DecimalJsLike | number | string
    email?: StringNullableFilter<"user_sso_login"> | string | null
    sso_login_provider?: XOR<Sso_login_providerScalarRelationFilter, sso_login_providerWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type user_sso_loginOrderByWithRelationInput = {
    user_id?: SortOrder
    sso_user_id?: SortOrder
    sso_user_name?: SortOrderInput | SortOrder
    provider_id?: SortOrder
    email?: SortOrderInput | SortOrder
    sso_login_provider?: sso_login_providerOrderByWithRelationInput
    user?: userOrderByWithRelationInput
  }

  export type user_sso_loginWhereUniqueInput = Prisma.AtLeast<{
    user_id_provider_id?: user_sso_loginUser_idProvider_idCompoundUniqueInput
    AND?: user_sso_loginWhereInput | user_sso_loginWhereInput[]
    OR?: user_sso_loginWhereInput[]
    NOT?: user_sso_loginWhereInput | user_sso_loginWhereInput[]
    user_id?: DecimalFilter<"user_sso_login"> | Decimal | DecimalJsLike | number | string
    sso_user_id?: StringFilter<"user_sso_login"> | string
    sso_user_name?: StringNullableFilter<"user_sso_login"> | string | null
    provider_id?: DecimalFilter<"user_sso_login"> | Decimal | DecimalJsLike | number | string
    email?: StringNullableFilter<"user_sso_login"> | string | null
    sso_login_provider?: XOR<Sso_login_providerScalarRelationFilter, sso_login_providerWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "user_id_provider_id">

  export type user_sso_loginOrderByWithAggregationInput = {
    user_id?: SortOrder
    sso_user_id?: SortOrder
    sso_user_name?: SortOrderInput | SortOrder
    provider_id?: SortOrder
    email?: SortOrderInput | SortOrder
    _count?: user_sso_loginCountOrderByAggregateInput
    _avg?: user_sso_loginAvgOrderByAggregateInput
    _max?: user_sso_loginMaxOrderByAggregateInput
    _min?: user_sso_loginMinOrderByAggregateInput
    _sum?: user_sso_loginSumOrderByAggregateInput
  }

  export type user_sso_loginScalarWhereWithAggregatesInput = {
    AND?: user_sso_loginScalarWhereWithAggregatesInput | user_sso_loginScalarWhereWithAggregatesInput[]
    OR?: user_sso_loginScalarWhereWithAggregatesInput[]
    NOT?: user_sso_loginScalarWhereWithAggregatesInput | user_sso_loginScalarWhereWithAggregatesInput[]
    user_id?: DecimalWithAggregatesFilter<"user_sso_login"> | Decimal | DecimalJsLike | number | string
    sso_user_id?: StringWithAggregatesFilter<"user_sso_login"> | string
    sso_user_name?: StringNullableWithAggregatesFilter<"user_sso_login"> | string | null
    provider_id?: DecimalWithAggregatesFilter<"user_sso_login"> | Decimal | DecimalJsLike | number | string
    email?: StringNullableWithAggregatesFilter<"user_sso_login"> | string | null
  }

  export type user_statusWhereInput = {
    AND?: user_statusWhereInput | user_statusWhereInput[]
    OR?: user_statusWhereInput[]
    NOT?: user_statusWhereInput | user_statusWhereInput[]
    user_id?: DecimalFilter<"user_status"> | Decimal | DecimalJsLike | number | string
    user_status_type_id?: DecimalFilter<"user_status"> | Decimal | DecimalJsLike | number | string
    user_status_id?: DecimalNullableFilter<"user_status"> | Decimal | DecimalJsLike | number | string | null
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    user_status_lu?: XOR<User_status_luNullableScalarRelationFilter, user_status_luWhereInput> | null
    user_status_type_lu?: XOR<User_status_type_luScalarRelationFilter, user_status_type_luWhereInput>
  }

  export type user_statusOrderByWithRelationInput = {
    user_id?: SortOrder
    user_status_type_id?: SortOrder
    user_status_id?: SortOrderInput | SortOrder
    user?: userOrderByWithRelationInput
    user_status_lu?: user_status_luOrderByWithRelationInput
    user_status_type_lu?: user_status_type_luOrderByWithRelationInput
  }

  export type user_statusWhereUniqueInput = Prisma.AtLeast<{
    user_id_user_status_type_id?: user_statusUser_idUser_status_type_idCompoundUniqueInput
    AND?: user_statusWhereInput | user_statusWhereInput[]
    OR?: user_statusWhereInput[]
    NOT?: user_statusWhereInput | user_statusWhereInput[]
    user_id?: DecimalFilter<"user_status"> | Decimal | DecimalJsLike | number | string
    user_status_type_id?: DecimalFilter<"user_status"> | Decimal | DecimalJsLike | number | string
    user_status_id?: DecimalNullableFilter<"user_status"> | Decimal | DecimalJsLike | number | string | null
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    user_status_lu?: XOR<User_status_luNullableScalarRelationFilter, user_status_luWhereInput> | null
    user_status_type_lu?: XOR<User_status_type_luScalarRelationFilter, user_status_type_luWhereInput>
  }, "user_id_user_status_type_id">

  export type user_statusOrderByWithAggregationInput = {
    user_id?: SortOrder
    user_status_type_id?: SortOrder
    user_status_id?: SortOrderInput | SortOrder
    _count?: user_statusCountOrderByAggregateInput
    _avg?: user_statusAvgOrderByAggregateInput
    _max?: user_statusMaxOrderByAggregateInput
    _min?: user_statusMinOrderByAggregateInput
    _sum?: user_statusSumOrderByAggregateInput
  }

  export type user_statusScalarWhereWithAggregatesInput = {
    AND?: user_statusScalarWhereWithAggregatesInput | user_statusScalarWhereWithAggregatesInput[]
    OR?: user_statusScalarWhereWithAggregatesInput[]
    NOT?: user_statusScalarWhereWithAggregatesInput | user_statusScalarWhereWithAggregatesInput[]
    user_id?: DecimalWithAggregatesFilter<"user_status"> | Decimal | DecimalJsLike | number | string
    user_status_type_id?: DecimalWithAggregatesFilter<"user_status"> | Decimal | DecimalJsLike | number | string
    user_status_id?: DecimalNullableWithAggregatesFilter<"user_status"> | Decimal | DecimalJsLike | number | string | null
  }

  export type user_status_luWhereInput = {
    AND?: user_status_luWhereInput | user_status_luWhereInput[]
    OR?: user_status_luWhereInput[]
    NOT?: user_status_luWhereInput | user_status_luWhereInput[]
    user_status_id?: DecimalFilter<"user_status_lu"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableFilter<"user_status_lu"> | string | null
    user_status?: User_statusListRelationFilter
  }

  export type user_status_luOrderByWithRelationInput = {
    user_status_id?: SortOrder
    description?: SortOrderInput | SortOrder
    user_status?: user_statusOrderByRelationAggregateInput
  }

  export type user_status_luWhereUniqueInput = Prisma.AtLeast<{
    user_status_id?: Decimal | DecimalJsLike | number | string
    AND?: user_status_luWhereInput | user_status_luWhereInput[]
    OR?: user_status_luWhereInput[]
    NOT?: user_status_luWhereInput | user_status_luWhereInput[]
    description?: StringNullableFilter<"user_status_lu"> | string | null
    user_status?: User_statusListRelationFilter
  }, "user_status_id">

  export type user_status_luOrderByWithAggregationInput = {
    user_status_id?: SortOrder
    description?: SortOrderInput | SortOrder
    _count?: user_status_luCountOrderByAggregateInput
    _avg?: user_status_luAvgOrderByAggregateInput
    _max?: user_status_luMaxOrderByAggregateInput
    _min?: user_status_luMinOrderByAggregateInput
    _sum?: user_status_luSumOrderByAggregateInput
  }

  export type user_status_luScalarWhereWithAggregatesInput = {
    AND?: user_status_luScalarWhereWithAggregatesInput | user_status_luScalarWhereWithAggregatesInput[]
    OR?: user_status_luScalarWhereWithAggregatesInput[]
    NOT?: user_status_luScalarWhereWithAggregatesInput | user_status_luScalarWhereWithAggregatesInput[]
    user_status_id?: DecimalWithAggregatesFilter<"user_status_lu"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableWithAggregatesFilter<"user_status_lu"> | string | null
  }

  export type user_status_type_luWhereInput = {
    AND?: user_status_type_luWhereInput | user_status_type_luWhereInput[]
    OR?: user_status_type_luWhereInput[]
    NOT?: user_status_type_luWhereInput | user_status_type_luWhereInput[]
    user_status_type_id?: DecimalFilter<"user_status_type_lu"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableFilter<"user_status_type_lu"> | string | null
    user_status?: User_statusListRelationFilter
  }

  export type user_status_type_luOrderByWithRelationInput = {
    user_status_type_id?: SortOrder
    description?: SortOrderInput | SortOrder
    user_status?: user_statusOrderByRelationAggregateInput
  }

  export type user_status_type_luWhereUniqueInput = Prisma.AtLeast<{
    user_status_type_id?: Decimal | DecimalJsLike | number | string
    AND?: user_status_type_luWhereInput | user_status_type_luWhereInput[]
    OR?: user_status_type_luWhereInput[]
    NOT?: user_status_type_luWhereInput | user_status_type_luWhereInput[]
    description?: StringNullableFilter<"user_status_type_lu"> | string | null
    user_status?: User_statusListRelationFilter
  }, "user_status_type_id">

  export type user_status_type_luOrderByWithAggregationInput = {
    user_status_type_id?: SortOrder
    description?: SortOrderInput | SortOrder
    _count?: user_status_type_luCountOrderByAggregateInput
    _avg?: user_status_type_luAvgOrderByAggregateInput
    _max?: user_status_type_luMaxOrderByAggregateInput
    _min?: user_status_type_luMinOrderByAggregateInput
    _sum?: user_status_type_luSumOrderByAggregateInput
  }

  export type user_status_type_luScalarWhereWithAggregatesInput = {
    AND?: user_status_type_luScalarWhereWithAggregatesInput | user_status_type_luScalarWhereWithAggregatesInput[]
    OR?: user_status_type_luScalarWhereWithAggregatesInput[]
    NOT?: user_status_type_luScalarWhereWithAggregatesInput | user_status_type_luScalarWhereWithAggregatesInput[]
    user_status_type_id?: DecimalWithAggregatesFilter<"user_status_type_lu"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableWithAggregatesFilter<"user_status_type_lu"> | string | null
  }

  export type user_email_xrefWhereInput = {
    AND?: user_email_xrefWhereInput | user_email_xrefWhereInput[]
    OR?: user_email_xrefWhereInput[]
    NOT?: user_email_xrefWhereInput | user_email_xrefWhereInput[]
    user_id?: DecimalFilter<"user_email_xref"> | Decimal | DecimalJsLike | number | string
    email_id?: DecimalFilter<"user_email_xref"> | Decimal | DecimalJsLike | number | string
    is_primary?: BoolFilter<"user_email_xref"> | boolean
    status_id?: DecimalFilter<"user_email_xref"> | Decimal | DecimalJsLike | number | string
    create_date?: DateTimeNullableFilter<"user_email_xref"> | Date | string | null
    modify_date?: DateTimeNullableFilter<"user_email_xref"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    email?: XOR<EmailScalarRelationFilter, emailWhereInput>
    email_status_lu?: XOR<Email_status_luNullableScalarRelationFilter, email_status_luWhereInput> | null
  }

  export type user_email_xrefOrderByWithRelationInput = {
    user_id?: SortOrder
    email_id?: SortOrder
    is_primary?: SortOrder
    status_id?: SortOrder
    create_date?: SortOrderInput | SortOrder
    modify_date?: SortOrderInput | SortOrder
    user?: userOrderByWithRelationInput
    email?: emailOrderByWithRelationInput
    email_status_lu?: email_status_luOrderByWithRelationInput
  }

  export type user_email_xrefWhereUniqueInput = Prisma.AtLeast<{
    user_id_email_id?: user_email_xrefUser_idEmail_idCompoundUniqueInput
    AND?: user_email_xrefWhereInput | user_email_xrefWhereInput[]
    OR?: user_email_xrefWhereInput[]
    NOT?: user_email_xrefWhereInput | user_email_xrefWhereInput[]
    user_id?: DecimalFilter<"user_email_xref"> | Decimal | DecimalJsLike | number | string
    email_id?: DecimalFilter<"user_email_xref"> | Decimal | DecimalJsLike | number | string
    is_primary?: BoolFilter<"user_email_xref"> | boolean
    status_id?: DecimalFilter<"user_email_xref"> | Decimal | DecimalJsLike | number | string
    create_date?: DateTimeNullableFilter<"user_email_xref"> | Date | string | null
    modify_date?: DateTimeNullableFilter<"user_email_xref"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    email?: XOR<EmailScalarRelationFilter, emailWhereInput>
    email_status_lu?: XOR<Email_status_luNullableScalarRelationFilter, email_status_luWhereInput> | null
  }, "user_id_email_id">

  export type user_email_xrefOrderByWithAggregationInput = {
    user_id?: SortOrder
    email_id?: SortOrder
    is_primary?: SortOrder
    status_id?: SortOrder
    create_date?: SortOrderInput | SortOrder
    modify_date?: SortOrderInput | SortOrder
    _count?: user_email_xrefCountOrderByAggregateInput
    _avg?: user_email_xrefAvgOrderByAggregateInput
    _max?: user_email_xrefMaxOrderByAggregateInput
    _min?: user_email_xrefMinOrderByAggregateInput
    _sum?: user_email_xrefSumOrderByAggregateInput
  }

  export type user_email_xrefScalarWhereWithAggregatesInput = {
    AND?: user_email_xrefScalarWhereWithAggregatesInput | user_email_xrefScalarWhereWithAggregatesInput[]
    OR?: user_email_xrefScalarWhereWithAggregatesInput[]
    NOT?: user_email_xrefScalarWhereWithAggregatesInput | user_email_xrefScalarWhereWithAggregatesInput[]
    user_id?: DecimalWithAggregatesFilter<"user_email_xref"> | Decimal | DecimalJsLike | number | string
    email_id?: DecimalWithAggregatesFilter<"user_email_xref"> | Decimal | DecimalJsLike | number | string
    is_primary?: BoolWithAggregatesFilter<"user_email_xref"> | boolean
    status_id?: DecimalWithAggregatesFilter<"user_email_xref"> | Decimal | DecimalJsLike | number | string
    create_date?: DateTimeNullableWithAggregatesFilter<"user_email_xref"> | Date | string | null
    modify_date?: DateTimeNullableWithAggregatesFilter<"user_email_xref"> | Date | string | null
  }

  export type ClientWhereInput = {
    AND?: ClientWhereInput | ClientWhereInput[]
    OR?: ClientWhereInput[]
    NOT?: ClientWhereInput | ClientWhereInput[]
    id?: IntFilter<"Client"> | number
    clientId?: StringFilter<"Client"> | string
    name?: StringFilter<"Client"> | string
    redirectUri?: StringNullableFilter<"Client"> | string | null
    secret?: StringNullableFilter<"Client"> | string | null
    createdBy?: IntNullableFilter<"Client"> | number | null
    createdAt?: DateTimeNullableFilter<"Client"> | Date | string | null
    modifiedBy?: IntNullableFilter<"Client"> | number | null
    modifiedAt?: DateTimeNullableFilter<"Client"> | Date | string | null
  }

  export type ClientOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    name?: SortOrder
    redirectUri?: SortOrderInput | SortOrder
    secret?: SortOrderInput | SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    modifiedBy?: SortOrderInput | SortOrder
    modifiedAt?: SortOrderInput | SortOrder
  }

  export type ClientWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    clientId?: string
    AND?: ClientWhereInput | ClientWhereInput[]
    OR?: ClientWhereInput[]
    NOT?: ClientWhereInput | ClientWhereInput[]
    name?: StringFilter<"Client"> | string
    redirectUri?: StringNullableFilter<"Client"> | string | null
    secret?: StringNullableFilter<"Client"> | string | null
    createdBy?: IntNullableFilter<"Client"> | number | null
    createdAt?: DateTimeNullableFilter<"Client"> | Date | string | null
    modifiedBy?: IntNullableFilter<"Client"> | number | null
    modifiedAt?: DateTimeNullableFilter<"Client"> | Date | string | null
  }, "id" | "clientId">

  export type ClientOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    name?: SortOrder
    redirectUri?: SortOrderInput | SortOrder
    secret?: SortOrderInput | SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    modifiedBy?: SortOrderInput | SortOrder
    modifiedAt?: SortOrderInput | SortOrder
    _count?: ClientCountOrderByAggregateInput
    _avg?: ClientAvgOrderByAggregateInput
    _max?: ClientMaxOrderByAggregateInput
    _min?: ClientMinOrderByAggregateInput
    _sum?: ClientSumOrderByAggregateInput
  }

  export type ClientScalarWhereWithAggregatesInput = {
    AND?: ClientScalarWhereWithAggregatesInput | ClientScalarWhereWithAggregatesInput[]
    OR?: ClientScalarWhereWithAggregatesInput[]
    NOT?: ClientScalarWhereWithAggregatesInput | ClientScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Client"> | number
    clientId?: StringWithAggregatesFilter<"Client"> | string
    name?: StringWithAggregatesFilter<"Client"> | string
    redirectUri?: StringNullableWithAggregatesFilter<"Client"> | string | null
    secret?: StringNullableWithAggregatesFilter<"Client"> | string | null
    createdBy?: IntNullableWithAggregatesFilter<"Client"> | number | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Client"> | Date | string | null
    modifiedBy?: IntNullableWithAggregatesFilter<"Client"> | number | null
    modifiedAt?: DateTimeNullableWithAggregatesFilter<"Client"> | Date | string | null
  }

  export type RoleWhereInput = {
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    id?: IntFilter<"Role"> | number
    name?: StringFilter<"Role"> | string
    createdBy?: IntNullableFilter<"Role"> | number | null
    createdAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    modifiedBy?: IntNullableFilter<"Role"> | number | null
    modifiedAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    roleAssignments?: RoleAssignmentListRelationFilter
  }

  export type RoleOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    modifiedBy?: SortOrderInput | SortOrder
    modifiedAt?: SortOrderInput | SortOrder
    roleAssignments?: RoleAssignmentOrderByRelationAggregateInput
  }

  export type RoleWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    createdBy?: IntNullableFilter<"Role"> | number | null
    createdAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    modifiedBy?: IntNullableFilter<"Role"> | number | null
    modifiedAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    roleAssignments?: RoleAssignmentListRelationFilter
  }, "id" | "name">

  export type RoleOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    modifiedBy?: SortOrderInput | SortOrder
    modifiedAt?: SortOrderInput | SortOrder
    _count?: RoleCountOrderByAggregateInput
    _avg?: RoleAvgOrderByAggregateInput
    _max?: RoleMaxOrderByAggregateInput
    _min?: RoleMinOrderByAggregateInput
    _sum?: RoleSumOrderByAggregateInput
  }

  export type RoleScalarWhereWithAggregatesInput = {
    AND?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    OR?: RoleScalarWhereWithAggregatesInput[]
    NOT?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Role"> | number
    name?: StringWithAggregatesFilter<"Role"> | string
    createdBy?: IntNullableWithAggregatesFilter<"Role"> | number | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Role"> | Date | string | null
    modifiedBy?: IntNullableWithAggregatesFilter<"Role"> | number | null
    modifiedAt?: DateTimeNullableWithAggregatesFilter<"Role"> | Date | string | null
  }

  export type RoleAssignmentWhereInput = {
    AND?: RoleAssignmentWhereInput | RoleAssignmentWhereInput[]
    OR?: RoleAssignmentWhereInput[]
    NOT?: RoleAssignmentWhereInput | RoleAssignmentWhereInput[]
    id?: IntFilter<"RoleAssignment"> | number
    roleId?: IntFilter<"RoleAssignment"> | number
    subjectId?: IntFilter<"RoleAssignment"> | number
    createdBy?: IntNullableFilter<"RoleAssignment"> | number | null
    createdAt?: DateTimeNullableFilter<"RoleAssignment"> | Date | string | null
    modifiedBy?: IntNullableFilter<"RoleAssignment"> | number | null
    modifiedAt?: DateTimeNullableFilter<"RoleAssignment"> | Date | string | null
    subjectType?: IntFilter<"RoleAssignment"> | number
    role?: XOR<RoleScalarRelationFilter, RoleWhereInput>
  }

  export type RoleAssignmentOrderByWithRelationInput = {
    id?: SortOrder
    roleId?: SortOrder
    subjectId?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    modifiedBy?: SortOrderInput | SortOrder
    modifiedAt?: SortOrderInput | SortOrder
    subjectType?: SortOrder
    role?: RoleOrderByWithRelationInput
  }

  export type RoleAssignmentWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    roleId_subjectId_subjectType?: RoleAssignmentRoleIdSubjectIdSubjectTypeCompoundUniqueInput
    AND?: RoleAssignmentWhereInput | RoleAssignmentWhereInput[]
    OR?: RoleAssignmentWhereInput[]
    NOT?: RoleAssignmentWhereInput | RoleAssignmentWhereInput[]
    roleId?: IntFilter<"RoleAssignment"> | number
    subjectId?: IntFilter<"RoleAssignment"> | number
    createdBy?: IntNullableFilter<"RoleAssignment"> | number | null
    createdAt?: DateTimeNullableFilter<"RoleAssignment"> | Date | string | null
    modifiedBy?: IntNullableFilter<"RoleAssignment"> | number | null
    modifiedAt?: DateTimeNullableFilter<"RoleAssignment"> | Date | string | null
    subjectType?: IntFilter<"RoleAssignment"> | number
    role?: XOR<RoleScalarRelationFilter, RoleWhereInput>
  }, "id" | "roleId_subjectId_subjectType">

  export type RoleAssignmentOrderByWithAggregationInput = {
    id?: SortOrder
    roleId?: SortOrder
    subjectId?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    modifiedBy?: SortOrderInput | SortOrder
    modifiedAt?: SortOrderInput | SortOrder
    subjectType?: SortOrder
    _count?: RoleAssignmentCountOrderByAggregateInput
    _avg?: RoleAssignmentAvgOrderByAggregateInput
    _max?: RoleAssignmentMaxOrderByAggregateInput
    _min?: RoleAssignmentMinOrderByAggregateInput
    _sum?: RoleAssignmentSumOrderByAggregateInput
  }

  export type RoleAssignmentScalarWhereWithAggregatesInput = {
    AND?: RoleAssignmentScalarWhereWithAggregatesInput | RoleAssignmentScalarWhereWithAggregatesInput[]
    OR?: RoleAssignmentScalarWhereWithAggregatesInput[]
    NOT?: RoleAssignmentScalarWhereWithAggregatesInput | RoleAssignmentScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RoleAssignment"> | number
    roleId?: IntWithAggregatesFilter<"RoleAssignment"> | number
    subjectId?: IntWithAggregatesFilter<"RoleAssignment"> | number
    createdBy?: IntNullableWithAggregatesFilter<"RoleAssignment"> | number | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"RoleAssignment"> | Date | string | null
    modifiedBy?: IntNullableWithAggregatesFilter<"RoleAssignment"> | number | null
    modifiedAt?: DateTimeNullableWithAggregatesFilter<"RoleAssignment"> | Date | string | null
    subjectType?: IntWithAggregatesFilter<"RoleAssignment"> | number
  }

  export type achievement_type_luCreateInput = {
    achievement_type_id: Decimal | DecimalJsLike | number | string
    achievement_type_desc: string
    user_achievement?: user_achievementCreateNestedManyWithoutAchievement_type_luInput
  }

  export type achievement_type_luUncheckedCreateInput = {
    achievement_type_id: Decimal | DecimalJsLike | number | string
    achievement_type_desc: string
    user_achievement?: user_achievementUncheckedCreateNestedManyWithoutAchievement_type_luInput
  }

  export type achievement_type_luUpdateInput = {
    achievement_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    achievement_type_desc?: StringFieldUpdateOperationsInput | string
    user_achievement?: user_achievementUpdateManyWithoutAchievement_type_luNestedInput
  }

  export type achievement_type_luUncheckedUpdateInput = {
    achievement_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    achievement_type_desc?: StringFieldUpdateOperationsInput | string
    user_achievement?: user_achievementUncheckedUpdateManyWithoutAchievement_type_luNestedInput
  }

  export type achievement_type_luCreateManyInput = {
    achievement_type_id: Decimal | DecimalJsLike | number | string
    achievement_type_desc: string
  }

  export type achievement_type_luUpdateManyMutationInput = {
    achievement_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    achievement_type_desc?: StringFieldUpdateOperationsInput | string
  }

  export type achievement_type_luUncheckedUpdateManyInput = {
    achievement_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    achievement_type_desc?: StringFieldUpdateOperationsInput | string
  }

  export type countryCreateInput = {
    country_code: string
    country_name: string
    modify_date?: Date | string | null
    participating?: Decimal | DecimalJsLike | number | string | null
    default_taxform_id?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    region?: string | null
    iso_name?: string | null
    iso_alpha2_code?: string | null
    iso_alpha3_code?: string | null
  }

  export type countryUncheckedCreateInput = {
    country_code: string
    country_name: string
    modify_date?: Date | string | null
    participating?: Decimal | DecimalJsLike | number | string | null
    default_taxform_id?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    region?: string | null
    iso_name?: string | null
    iso_alpha2_code?: string | null
    iso_alpha3_code?: string | null
  }

  export type countryUpdateInput = {
    country_code?: StringFieldUpdateOperationsInput | string
    country_name?: StringFieldUpdateOperationsInput | string
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    participating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    default_taxform_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    iso_name?: NullableStringFieldUpdateOperationsInput | string | null
    iso_alpha2_code?: NullableStringFieldUpdateOperationsInput | string | null
    iso_alpha3_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type countryUncheckedUpdateInput = {
    country_code?: StringFieldUpdateOperationsInput | string
    country_name?: StringFieldUpdateOperationsInput | string
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    participating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    default_taxform_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    iso_name?: NullableStringFieldUpdateOperationsInput | string | null
    iso_alpha2_code?: NullableStringFieldUpdateOperationsInput | string | null
    iso_alpha3_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type countryCreateManyInput = {
    country_code: string
    country_name: string
    modify_date?: Date | string | null
    participating?: Decimal | DecimalJsLike | number | string | null
    default_taxform_id?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    region?: string | null
    iso_name?: string | null
    iso_alpha2_code?: string | null
    iso_alpha3_code?: string | null
  }

  export type countryUpdateManyMutationInput = {
    country_code?: StringFieldUpdateOperationsInput | string
    country_name?: StringFieldUpdateOperationsInput | string
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    participating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    default_taxform_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    iso_name?: NullableStringFieldUpdateOperationsInput | string | null
    iso_alpha2_code?: NullableStringFieldUpdateOperationsInput | string | null
    iso_alpha3_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type countryUncheckedUpdateManyInput = {
    country_code?: StringFieldUpdateOperationsInput | string
    country_name?: StringFieldUpdateOperationsInput | string
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    participating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    default_taxform_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    iso_name?: NullableStringFieldUpdateOperationsInput | string | null
    iso_alpha2_code?: NullableStringFieldUpdateOperationsInput | string | null
    iso_alpha3_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type dice_connectionCreateInput = {
    connection?: string | null
    accepted?: boolean
    created_at?: Date | string
    short_url?: string | null
    con_created_at?: Date | string | null
    user: userCreateNestedOneWithoutDice_connectionInput
  }

  export type dice_connectionUncheckedCreateInput = {
    id?: number
    user_id: Decimal | DecimalJsLike | number | string
    connection?: string | null
    accepted?: boolean
    created_at?: Date | string
    short_url?: string | null
    con_created_at?: Date | string | null
  }

  export type dice_connectionUpdateInput = {
    connection?: NullableStringFieldUpdateOperationsInput | string | null
    accepted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    short_url?: NullableStringFieldUpdateOperationsInput | string | null
    con_created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: userUpdateOneRequiredWithoutDice_connectionNestedInput
  }

  export type dice_connectionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    connection?: NullableStringFieldUpdateOperationsInput | string | null
    accepted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    short_url?: NullableStringFieldUpdateOperationsInput | string | null
    con_created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type dice_connectionCreateManyInput = {
    id?: number
    user_id: Decimal | DecimalJsLike | number | string
    connection?: string | null
    accepted?: boolean
    created_at?: Date | string
    short_url?: string | null
    con_created_at?: Date | string | null
  }

  export type dice_connectionUpdateManyMutationInput = {
    connection?: NullableStringFieldUpdateOperationsInput | string | null
    accepted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    short_url?: NullableStringFieldUpdateOperationsInput | string | null
    con_created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type dice_connectionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    connection?: NullableStringFieldUpdateOperationsInput | string | null
    accepted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    short_url?: NullableStringFieldUpdateOperationsInput | string | null
    con_created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type emailCreateInput = {
    email_id?: Decimal | DecimalJsLike | number | string
    address?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    primary_ind?: Decimal | DecimalJsLike | number | string | null
    email_status_lu?: email_status_luCreateNestedOneWithoutEmailInput
    email_type_lu?: email_type_luCreateNestedOneWithoutEmailInput
    user_email_xref?: user_email_xrefCreateNestedManyWithoutEmailInput
    user?: userCreateNestedOneWithoutEmailsInput
  }

  export type emailUncheckedCreateInput = {
    user_id?: Decimal | DecimalJsLike | number | string | null
    email_id?: Decimal | DecimalJsLike | number | string
    email_type_id?: Decimal | DecimalJsLike | number | string | null
    address?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    primary_ind?: Decimal | DecimalJsLike | number | string | null
    status_id?: Decimal | DecimalJsLike | number | string | null
    user_email_xref?: user_email_xrefUncheckedCreateNestedManyWithoutEmailInput
  }

  export type emailUpdateInput = {
    email_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    primary_ind?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    email_status_lu?: email_status_luUpdateOneWithoutEmailNestedInput
    email_type_lu?: email_type_luUpdateOneWithoutEmailNestedInput
    user_email_xref?: user_email_xrefUpdateManyWithoutEmailNestedInput
    user?: userUpdateOneWithoutEmailsNestedInput
  }

  export type emailUncheckedUpdateInput = {
    user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    email_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    email_type_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    primary_ind?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    user_email_xref?: user_email_xrefUncheckedUpdateManyWithoutEmailNestedInput
  }

  export type emailCreateManyInput = {
    user_id?: Decimal | DecimalJsLike | number | string | null
    email_id?: Decimal | DecimalJsLike | number | string
    email_type_id?: Decimal | DecimalJsLike | number | string | null
    address?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    primary_ind?: Decimal | DecimalJsLike | number | string | null
    status_id?: Decimal | DecimalJsLike | number | string | null
  }

  export type emailUpdateManyMutationInput = {
    email_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    primary_ind?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type emailUncheckedUpdateManyInput = {
    user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    email_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    email_type_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    primary_ind?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type email_status_luCreateInput = {
    status_id: Decimal | DecimalJsLike | number | string
    status_desc?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    email?: emailCreateNestedManyWithoutEmail_status_luInput
    user_email_xref?: user_email_xrefCreateNestedManyWithoutEmail_status_luInput
  }

  export type email_status_luUncheckedCreateInput = {
    status_id: Decimal | DecimalJsLike | number | string
    status_desc?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    email?: emailUncheckedCreateNestedManyWithoutEmail_status_luInput
    user_email_xref?: user_email_xrefUncheckedCreateNestedManyWithoutEmail_status_luInput
  }

  export type email_status_luUpdateInput = {
    status_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status_desc?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: emailUpdateManyWithoutEmail_status_luNestedInput
    user_email_xref?: user_email_xrefUpdateManyWithoutEmail_status_luNestedInput
  }

  export type email_status_luUncheckedUpdateInput = {
    status_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status_desc?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: emailUncheckedUpdateManyWithoutEmail_status_luNestedInput
    user_email_xref?: user_email_xrefUncheckedUpdateManyWithoutEmail_status_luNestedInput
  }

  export type email_status_luCreateManyInput = {
    status_id: Decimal | DecimalJsLike | number | string
    status_desc?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
  }

  export type email_status_luUpdateManyMutationInput = {
    status_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status_desc?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type email_status_luUncheckedUpdateManyInput = {
    status_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status_desc?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type email_type_luCreateInput = {
    email_type_id: Decimal | DecimalJsLike | number | string
    email_type_desc?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    email?: emailCreateNestedManyWithoutEmail_type_luInput
  }

  export type email_type_luUncheckedCreateInput = {
    email_type_id: Decimal | DecimalJsLike | number | string
    email_type_desc?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    email?: emailUncheckedCreateNestedManyWithoutEmail_type_luInput
  }

  export type email_type_luUpdateInput = {
    email_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    email_type_desc?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: emailUpdateManyWithoutEmail_type_luNestedInput
  }

  export type email_type_luUncheckedUpdateInput = {
    email_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    email_type_desc?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: emailUncheckedUpdateManyWithoutEmail_type_luNestedInput
  }

  export type email_type_luCreateManyInput = {
    email_type_id: Decimal | DecimalJsLike | number | string
    email_type_desc?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
  }

  export type email_type_luUpdateManyMutationInput = {
    email_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    email_type_desc?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type email_type_luUncheckedUpdateManyInput = {
    email_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    email_type_desc?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type id_sequencesCreateInput = {
    name: string
    next_block_start: Decimal | DecimalJsLike | number | string
    block_size: Decimal | DecimalJsLike | number | string
    exhausted?: Decimal | DecimalJsLike | number | string
  }

  export type id_sequencesUncheckedCreateInput = {
    name: string
    next_block_start: Decimal | DecimalJsLike | number | string
    block_size: Decimal | DecimalJsLike | number | string
    exhausted?: Decimal | DecimalJsLike | number | string
  }

  export type id_sequencesUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    next_block_start?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    block_size?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    exhausted?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type id_sequencesUncheckedUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    next_block_start?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    block_size?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    exhausted?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type id_sequencesCreateManyInput = {
    name: string
    next_block_start: Decimal | DecimalJsLike | number | string
    block_size: Decimal | DecimalJsLike | number | string
    exhausted?: Decimal | DecimalJsLike | number | string
  }

  export type id_sequencesUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    next_block_start?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    block_size?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    exhausted?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type id_sequencesUncheckedUpdateManyInput = {
    name?: StringFieldUpdateOperationsInput | string
    next_block_start?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    block_size?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    exhausted?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type invalid_handlesCreateInput = {
    invalid_handle_id: number
    invalid_handle: string
  }

  export type invalid_handlesUncheckedCreateInput = {
    invalid_handle_id: number
    invalid_handle: string
  }

  export type invalid_handlesUpdateInput = {
    invalid_handle_id?: IntFieldUpdateOperationsInput | number
    invalid_handle?: StringFieldUpdateOperationsInput | string
  }

  export type invalid_handlesUncheckedUpdateInput = {
    invalid_handle_id?: IntFieldUpdateOperationsInput | number
    invalid_handle?: StringFieldUpdateOperationsInput | string
  }

  export type invalid_handlesCreateManyInput = {
    invalid_handle_id: number
    invalid_handle: string
  }

  export type invalid_handlesUpdateManyMutationInput = {
    invalid_handle_id?: IntFieldUpdateOperationsInput | number
    invalid_handle?: StringFieldUpdateOperationsInput | string
  }

  export type invalid_handlesUncheckedUpdateManyInput = {
    invalid_handle_id?: IntFieldUpdateOperationsInput | number
    invalid_handle?: StringFieldUpdateOperationsInput | string
  }

  export type security_groupsCreateInput = {
    group_id: Decimal | DecimalJsLike | number | string
    description: string
    challenge_group_ind?: number
    create_user_id?: Decimal | DecimalJsLike | number | string | null
    user_group_xref?: user_group_xrefCreateNestedManyWithoutSecurity_groupsInput
  }

  export type security_groupsUncheckedCreateInput = {
    group_id: Decimal | DecimalJsLike | number | string
    description: string
    challenge_group_ind?: number
    create_user_id?: Decimal | DecimalJsLike | number | string | null
    user_group_xref?: user_group_xrefUncheckedCreateNestedManyWithoutSecurity_groupsInput
  }

  export type security_groupsUpdateInput = {
    group_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: StringFieldUpdateOperationsInput | string
    challenge_group_ind?: IntFieldUpdateOperationsInput | number
    create_user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    user_group_xref?: user_group_xrefUpdateManyWithoutSecurity_groupsNestedInput
  }

  export type security_groupsUncheckedUpdateInput = {
    group_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: StringFieldUpdateOperationsInput | string
    challenge_group_ind?: IntFieldUpdateOperationsInput | number
    create_user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    user_group_xref?: user_group_xrefUncheckedUpdateManyWithoutSecurity_groupsNestedInput
  }

  export type security_groupsCreateManyInput = {
    group_id: Decimal | DecimalJsLike | number | string
    description: string
    challenge_group_ind?: number
    create_user_id?: Decimal | DecimalJsLike | number | string | null
  }

  export type security_groupsUpdateManyMutationInput = {
    group_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: StringFieldUpdateOperationsInput | string
    challenge_group_ind?: IntFieldUpdateOperationsInput | number
    create_user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type security_groupsUncheckedUpdateManyInput = {
    group_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: StringFieldUpdateOperationsInput | string
    challenge_group_ind?: IntFieldUpdateOperationsInput | number
    create_user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type security_status_luCreateInput = {
    security_status_id: Decimal | DecimalJsLike | number | string
    status_desc?: string | null
    user_group_xref?: user_group_xrefCreateNestedManyWithoutSecurity_status_luInput
  }

  export type security_status_luUncheckedCreateInput = {
    security_status_id: Decimal | DecimalJsLike | number | string
    status_desc?: string | null
    user_group_xref?: user_group_xrefUncheckedCreateNestedManyWithoutSecurity_status_luInput
  }

  export type security_status_luUpdateInput = {
    security_status_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status_desc?: NullableStringFieldUpdateOperationsInput | string | null
    user_group_xref?: user_group_xrefUpdateManyWithoutSecurity_status_luNestedInput
  }

  export type security_status_luUncheckedUpdateInput = {
    security_status_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status_desc?: NullableStringFieldUpdateOperationsInput | string | null
    user_group_xref?: user_group_xrefUncheckedUpdateManyWithoutSecurity_status_luNestedInput
  }

  export type security_status_luCreateManyInput = {
    security_status_id: Decimal | DecimalJsLike | number | string
    status_desc?: string | null
  }

  export type security_status_luUpdateManyMutationInput = {
    security_status_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status_desc?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type security_status_luUncheckedUpdateManyInput = {
    security_status_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status_desc?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type security_userCreateInput = {
    login_id: Decimal | DecimalJsLike | number | string
    user_id: string
    password: string
    create_user_id?: Decimal | DecimalJsLike | number | string | null
    modify_date?: Date | string | null
    user_group_xref?: user_group_xrefCreateNestedManyWithoutSecurity_userInput
  }

  export type security_userUncheckedCreateInput = {
    login_id: Decimal | DecimalJsLike | number | string
    user_id: string
    password: string
    create_user_id?: Decimal | DecimalJsLike | number | string | null
    modify_date?: Date | string | null
    user_group_xref?: user_group_xrefUncheckedCreateNestedManyWithoutSecurity_userInput
  }

  export type security_userUpdateInput = {
    login_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    user_id?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    create_user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_group_xref?: user_group_xrefUpdateManyWithoutSecurity_userNestedInput
  }

  export type security_userUncheckedUpdateInput = {
    login_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    user_id?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    create_user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_group_xref?: user_group_xrefUncheckedUpdateManyWithoutSecurity_userNestedInput
  }

  export type security_userCreateManyInput = {
    login_id: Decimal | DecimalJsLike | number | string
    user_id: string
    password: string
    create_user_id?: Decimal | DecimalJsLike | number | string | null
    modify_date?: Date | string | null
  }

  export type security_userUpdateManyMutationInput = {
    login_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    user_id?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    create_user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type security_userUncheckedUpdateManyInput = {
    login_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    user_id?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    create_user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type social_login_providerCreateInput = {
    social_login_provider_id: Decimal | DecimalJsLike | number | string
    name?: string | null
    user_social_login?: user_social_loginCreateNestedManyWithoutSocial_login_providerInput
  }

  export type social_login_providerUncheckedCreateInput = {
    social_login_provider_id: Decimal | DecimalJsLike | number | string
    name?: string | null
    user_social_login?: user_social_loginUncheckedCreateNestedManyWithoutSocial_login_providerInput
  }

  export type social_login_providerUpdateInput = {
    social_login_provider_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    user_social_login?: user_social_loginUpdateManyWithoutSocial_login_providerNestedInput
  }

  export type social_login_providerUncheckedUpdateInput = {
    social_login_provider_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    user_social_login?: user_social_loginUncheckedUpdateManyWithoutSocial_login_providerNestedInput
  }

  export type social_login_providerCreateManyInput = {
    social_login_provider_id: Decimal | DecimalJsLike | number | string
    name?: string | null
  }

  export type social_login_providerUpdateManyMutationInput = {
    social_login_provider_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type social_login_providerUncheckedUpdateManyInput = {
    social_login_provider_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sso_login_providerCreateInput = {
    sso_login_provider_id: Decimal | DecimalJsLike | number | string
    name?: string | null
    type: string
    identify_email_enabled?: boolean
    identify_handle_enabled?: boolean
    user_sso_login?: user_sso_loginCreateNestedManyWithoutSso_login_providerInput
  }

  export type sso_login_providerUncheckedCreateInput = {
    sso_login_provider_id: Decimal | DecimalJsLike | number | string
    name?: string | null
    type: string
    identify_email_enabled?: boolean
    identify_handle_enabled?: boolean
    user_sso_login?: user_sso_loginUncheckedCreateNestedManyWithoutSso_login_providerInput
  }

  export type sso_login_providerUpdateInput = {
    sso_login_provider_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    identify_email_enabled?: BoolFieldUpdateOperationsInput | boolean
    identify_handle_enabled?: BoolFieldUpdateOperationsInput | boolean
    user_sso_login?: user_sso_loginUpdateManyWithoutSso_login_providerNestedInput
  }

  export type sso_login_providerUncheckedUpdateInput = {
    sso_login_provider_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    identify_email_enabled?: BoolFieldUpdateOperationsInput | boolean
    identify_handle_enabled?: BoolFieldUpdateOperationsInput | boolean
    user_sso_login?: user_sso_loginUncheckedUpdateManyWithoutSso_login_providerNestedInput
  }

  export type sso_login_providerCreateManyInput = {
    sso_login_provider_id: Decimal | DecimalJsLike | number | string
    name?: string | null
    type: string
    identify_email_enabled?: boolean
    identify_handle_enabled?: boolean
  }

  export type sso_login_providerUpdateManyMutationInput = {
    sso_login_provider_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    identify_email_enabled?: BoolFieldUpdateOperationsInput | boolean
    identify_handle_enabled?: BoolFieldUpdateOperationsInput | boolean
  }

  export type sso_login_providerUncheckedUpdateManyInput = {
    sso_login_provider_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    identify_email_enabled?: BoolFieldUpdateOperationsInput | boolean
    identify_handle_enabled?: BoolFieldUpdateOperationsInput | boolean
  }

  export type userCreateInput = {
    user_id?: Decimal | DecimalJsLike | number | string
    first_name?: string | null
    last_name?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    handle: string
    last_login?: Date | string | null
    status: string
    activation_code?: string | null
    middle_name?: string | null
    handle_lower?: string | null
    timezone_id?: Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: Date | string | null
    name_in_another_language?: string | null
    password?: string | null
    open_id?: string | null
    reg_source?: string | null
    utm_source?: string | null
    utm_medium?: string | null
    utm_campaign?: string | null
    dice_connection?: dice_connectionCreateNestedOneWithoutUserInput
    user_2fa?: user_2faCreateNestedOneWithoutUserInput
    user_achievement?: user_achievementCreateNestedManyWithoutUserInput
    user_otp_email?: user_otp_emailCreateNestedManyWithoutUserInput
    user_social_login?: user_social_loginCreateNestedManyWithoutUserInput
    user_sso_login?: user_sso_loginCreateNestedManyWithoutUserInput
    user_status?: user_statusCreateNestedManyWithoutUserInput
    user_email_xref?: user_email_xrefCreateNestedManyWithoutUserInput
    emails?: emailCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateInput = {
    user_id?: Decimal | DecimalJsLike | number | string
    first_name?: string | null
    last_name?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    handle: string
    last_login?: Date | string | null
    status: string
    activation_code?: string | null
    middle_name?: string | null
    handle_lower?: string | null
    timezone_id?: Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: Date | string | null
    name_in_another_language?: string | null
    password?: string | null
    open_id?: string | null
    reg_source?: string | null
    utm_source?: string | null
    utm_medium?: string | null
    utm_campaign?: string | null
    dice_connection?: dice_connectionUncheckedCreateNestedOneWithoutUserInput
    user_2fa?: user_2faUncheckedCreateNestedOneWithoutUserInput
    user_achievement?: user_achievementUncheckedCreateNestedManyWithoutUserInput
    user_otp_email?: user_otp_emailUncheckedCreateNestedManyWithoutUserInput
    user_social_login?: user_social_loginUncheckedCreateNestedManyWithoutUserInput
    user_sso_login?: user_sso_loginUncheckedCreateNestedManyWithoutUserInput
    user_status?: user_statusUncheckedCreateNestedManyWithoutUserInput
    user_email_xref?: user_email_xrefUncheckedCreateNestedManyWithoutUserInput
    emails?: emailUncheckedCreateNestedManyWithoutUserInput
  }

  export type userUpdateInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    handle?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    activation_code?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    handle_lower?: NullableStringFieldUpdateOperationsInput | string | null
    timezone_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_in_another_language?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    open_id?: NullableStringFieldUpdateOperationsInput | string | null
    reg_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_medium?: NullableStringFieldUpdateOperationsInput | string | null
    utm_campaign?: NullableStringFieldUpdateOperationsInput | string | null
    dice_connection?: dice_connectionUpdateOneWithoutUserNestedInput
    user_2fa?: user_2faUpdateOneWithoutUserNestedInput
    user_achievement?: user_achievementUpdateManyWithoutUserNestedInput
    user_otp_email?: user_otp_emailUpdateManyWithoutUserNestedInput
    user_social_login?: user_social_loginUpdateManyWithoutUserNestedInput
    user_sso_login?: user_sso_loginUpdateManyWithoutUserNestedInput
    user_status?: user_statusUpdateManyWithoutUserNestedInput
    user_email_xref?: user_email_xrefUpdateManyWithoutUserNestedInput
    emails?: emailUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    handle?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    activation_code?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    handle_lower?: NullableStringFieldUpdateOperationsInput | string | null
    timezone_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_in_another_language?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    open_id?: NullableStringFieldUpdateOperationsInput | string | null
    reg_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_medium?: NullableStringFieldUpdateOperationsInput | string | null
    utm_campaign?: NullableStringFieldUpdateOperationsInput | string | null
    dice_connection?: dice_connectionUncheckedUpdateOneWithoutUserNestedInput
    user_2fa?: user_2faUncheckedUpdateOneWithoutUserNestedInput
    user_achievement?: user_achievementUncheckedUpdateManyWithoutUserNestedInput
    user_otp_email?: user_otp_emailUncheckedUpdateManyWithoutUserNestedInput
    user_social_login?: user_social_loginUncheckedUpdateManyWithoutUserNestedInput
    user_sso_login?: user_sso_loginUncheckedUpdateManyWithoutUserNestedInput
    user_status?: user_statusUncheckedUpdateManyWithoutUserNestedInput
    user_email_xref?: user_email_xrefUncheckedUpdateManyWithoutUserNestedInput
    emails?: emailUncheckedUpdateManyWithoutUserNestedInput
  }

  export type userCreateManyInput = {
    user_id?: Decimal | DecimalJsLike | number | string
    first_name?: string | null
    last_name?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    handle: string
    last_login?: Date | string | null
    status: string
    activation_code?: string | null
    middle_name?: string | null
    handle_lower?: string | null
    timezone_id?: Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: Date | string | null
    name_in_another_language?: string | null
    password?: string | null
    open_id?: string | null
    reg_source?: string | null
    utm_source?: string | null
    utm_medium?: string | null
    utm_campaign?: string | null
  }

  export type userUpdateManyMutationInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    handle?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    activation_code?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    handle_lower?: NullableStringFieldUpdateOperationsInput | string | null
    timezone_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_in_another_language?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    open_id?: NullableStringFieldUpdateOperationsInput | string | null
    reg_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_medium?: NullableStringFieldUpdateOperationsInput | string | null
    utm_campaign?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type userUncheckedUpdateManyInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    handle?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    activation_code?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    handle_lower?: NullableStringFieldUpdateOperationsInput | string | null
    timezone_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_in_another_language?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    open_id?: NullableStringFieldUpdateOperationsInput | string | null
    reg_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_medium?: NullableStringFieldUpdateOperationsInput | string | null
    utm_campaign?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_2faCreateInput = {
    mfa_enabled?: boolean
    dice_enabled?: boolean
    created_by: Decimal | DecimalJsLike | number | string
    created_at?: Date | string
    modified_by: Decimal | DecimalJsLike | number | string
    modified_at?: Date | string
    user: userCreateNestedOneWithoutUser_2faInput
  }

  export type user_2faUncheckedCreateInput = {
    id?: number
    user_id: Decimal | DecimalJsLike | number | string
    mfa_enabled?: boolean
    dice_enabled?: boolean
    created_by: Decimal | DecimalJsLike | number | string
    created_at?: Date | string
    modified_by: Decimal | DecimalJsLike | number | string
    modified_at?: Date | string
  }

  export type user_2faUpdateInput = {
    mfa_enabled?: BoolFieldUpdateOperationsInput | boolean
    dice_enabled?: BoolFieldUpdateOperationsInput | boolean
    created_by?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_by?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutUser_2faNestedInput
  }

  export type user_2faUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    mfa_enabled?: BoolFieldUpdateOperationsInput | boolean
    dice_enabled?: BoolFieldUpdateOperationsInput | boolean
    created_by?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_by?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_2faCreateManyInput = {
    id?: number
    user_id: Decimal | DecimalJsLike | number | string
    mfa_enabled?: boolean
    dice_enabled?: boolean
    created_by: Decimal | DecimalJsLike | number | string
    created_at?: Date | string
    modified_by: Decimal | DecimalJsLike | number | string
    modified_at?: Date | string
  }

  export type user_2faUpdateManyMutationInput = {
    mfa_enabled?: BoolFieldUpdateOperationsInput | boolean
    dice_enabled?: BoolFieldUpdateOperationsInput | boolean
    created_by?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_by?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_2faUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    mfa_enabled?: BoolFieldUpdateOperationsInput | boolean
    dice_enabled?: BoolFieldUpdateOperationsInput | boolean
    created_by?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_by?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_achievementCreateInput = {
    achievement_date: Date | string
    description?: string | null
    create_date?: Date | string | null
    achievement_type_lu: achievement_type_luCreateNestedOneWithoutUser_achievementInput
    user: userCreateNestedOneWithoutUser_achievementInput
  }

  export type user_achievementUncheckedCreateInput = {
    user_id: Decimal | DecimalJsLike | number | string
    achievement_date: Date | string
    achievement_type_id: Decimal | DecimalJsLike | number | string
    description?: string | null
    create_date?: Date | string | null
  }

  export type user_achievementUpdateInput = {
    achievement_date?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievement_type_lu?: achievement_type_luUpdateOneRequiredWithoutUser_achievementNestedInput
    user?: userUpdateOneRequiredWithoutUser_achievementNestedInput
  }

  export type user_achievementUncheckedUpdateInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    achievement_date?: DateTimeFieldUpdateOperationsInput | Date | string
    achievement_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_achievementCreateManyInput = {
    user_id: Decimal | DecimalJsLike | number | string
    achievement_date: Date | string
    achievement_type_id: Decimal | DecimalJsLike | number | string
    description?: string | null
    create_date?: Date | string | null
  }

  export type user_achievementUpdateManyMutationInput = {
    achievement_date?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_achievementUncheckedUpdateManyInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    achievement_date?: DateTimeFieldUpdateOperationsInput | Date | string
    achievement_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_group_xrefCreateInput = {
    user_group_id: Decimal | DecimalJsLike | number | string
    create_user_id?: Decimal | DecimalJsLike | number | string | null
    create_date?: Date | string | null
    security_user?: security_userCreateNestedOneWithoutUser_group_xrefInput
    security_groups?: security_groupsCreateNestedOneWithoutUser_group_xrefInput
    security_status_lu?: security_status_luCreateNestedOneWithoutUser_group_xrefInput
  }

  export type user_group_xrefUncheckedCreateInput = {
    user_group_id: Decimal | DecimalJsLike | number | string
    login_id?: Decimal | DecimalJsLike | number | string | null
    group_id?: Decimal | DecimalJsLike | number | string | null
    create_user_id?: Decimal | DecimalJsLike | number | string | null
    security_status_id?: Decimal | DecimalJsLike | number | string | null
    create_date?: Date | string | null
  }

  export type user_group_xrefUpdateInput = {
    user_group_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    create_user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    security_user?: security_userUpdateOneWithoutUser_group_xrefNestedInput
    security_groups?: security_groupsUpdateOneWithoutUser_group_xrefNestedInput
    security_status_lu?: security_status_luUpdateOneWithoutUser_group_xrefNestedInput
  }

  export type user_group_xrefUncheckedUpdateInput = {
    user_group_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    login_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    group_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    create_user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    security_status_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_group_xrefCreateManyInput = {
    user_group_id: Decimal | DecimalJsLike | number | string
    login_id?: Decimal | DecimalJsLike | number | string | null
    group_id?: Decimal | DecimalJsLike | number | string | null
    create_user_id?: Decimal | DecimalJsLike | number | string | null
    security_status_id?: Decimal | DecimalJsLike | number | string | null
    create_date?: Date | string | null
  }

  export type user_group_xrefUpdateManyMutationInput = {
    user_group_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    create_user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_group_xrefUncheckedUpdateManyInput = {
    user_group_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    login_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    group_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    create_user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    security_status_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_otp_emailCreateInput = {
    mode: number
    otp: string
    expire_at: Date | string
    resend?: boolean
    fail_count?: number
    user: userCreateNestedOneWithoutUser_otp_emailInput
  }

  export type user_otp_emailUncheckedCreateInput = {
    id?: number
    user_id: Decimal | DecimalJsLike | number | string
    mode: number
    otp: string
    expire_at: Date | string
    resend?: boolean
    fail_count?: number
  }

  export type user_otp_emailUpdateInput = {
    mode?: IntFieldUpdateOperationsInput | number
    otp?: StringFieldUpdateOperationsInput | string
    expire_at?: DateTimeFieldUpdateOperationsInput | Date | string
    resend?: BoolFieldUpdateOperationsInput | boolean
    fail_count?: IntFieldUpdateOperationsInput | number
    user?: userUpdateOneRequiredWithoutUser_otp_emailNestedInput
  }

  export type user_otp_emailUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    mode?: IntFieldUpdateOperationsInput | number
    otp?: StringFieldUpdateOperationsInput | string
    expire_at?: DateTimeFieldUpdateOperationsInput | Date | string
    resend?: BoolFieldUpdateOperationsInput | boolean
    fail_count?: IntFieldUpdateOperationsInput | number
  }

  export type user_otp_emailCreateManyInput = {
    id?: number
    user_id: Decimal | DecimalJsLike | number | string
    mode: number
    otp: string
    expire_at: Date | string
    resend?: boolean
    fail_count?: number
  }

  export type user_otp_emailUpdateManyMutationInput = {
    mode?: IntFieldUpdateOperationsInput | number
    otp?: StringFieldUpdateOperationsInput | string
    expire_at?: DateTimeFieldUpdateOperationsInput | Date | string
    resend?: BoolFieldUpdateOperationsInput | boolean
    fail_count?: IntFieldUpdateOperationsInput | number
  }

  export type user_otp_emailUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    mode?: IntFieldUpdateOperationsInput | number
    otp?: StringFieldUpdateOperationsInput | string
    expire_at?: DateTimeFieldUpdateOperationsInput | Date | string
    resend?: BoolFieldUpdateOperationsInput | boolean
    fail_count?: IntFieldUpdateOperationsInput | number
  }

  export type user_social_loginCreateInput = {
    social_user_id?: string | null
    social_user_name: string
    social_email?: string | null
    social_email_verified?: boolean | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    social_login_provider: social_login_providerCreateNestedOneWithoutUser_social_loginInput
    user: userCreateNestedOneWithoutUser_social_loginInput
  }

  export type user_social_loginUncheckedCreateInput = {
    social_user_id?: string | null
    user_id: Decimal | DecimalJsLike | number | string
    social_login_provider_id: Decimal | DecimalJsLike | number | string
    social_user_name: string
    social_email?: string | null
    social_email_verified?: boolean | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
  }

  export type user_social_loginUpdateInput = {
    social_user_id?: NullableStringFieldUpdateOperationsInput | string | null
    social_user_name?: StringFieldUpdateOperationsInput | string
    social_email?: NullableStringFieldUpdateOperationsInput | string | null
    social_email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    social_login_provider?: social_login_providerUpdateOneRequiredWithoutUser_social_loginNestedInput
    user?: userUpdateOneRequiredWithoutUser_social_loginNestedInput
  }

  export type user_social_loginUncheckedUpdateInput = {
    social_user_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    social_login_provider_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    social_user_name?: StringFieldUpdateOperationsInput | string
    social_email?: NullableStringFieldUpdateOperationsInput | string | null
    social_email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_social_loginCreateManyInput = {
    social_user_id?: string | null
    user_id: Decimal | DecimalJsLike | number | string
    social_login_provider_id: Decimal | DecimalJsLike | number | string
    social_user_name: string
    social_email?: string | null
    social_email_verified?: boolean | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
  }

  export type user_social_loginUpdateManyMutationInput = {
    social_user_id?: NullableStringFieldUpdateOperationsInput | string | null
    social_user_name?: StringFieldUpdateOperationsInput | string
    social_email?: NullableStringFieldUpdateOperationsInput | string | null
    social_email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_social_loginUncheckedUpdateManyInput = {
    social_user_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    social_login_provider_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    social_user_name?: StringFieldUpdateOperationsInput | string
    social_email?: NullableStringFieldUpdateOperationsInput | string | null
    social_email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_sso_loginCreateInput = {
    sso_user_id: string
    sso_user_name?: string | null
    email?: string | null
    sso_login_provider: sso_login_providerCreateNestedOneWithoutUser_sso_loginInput
    user: userCreateNestedOneWithoutUser_sso_loginInput
  }

  export type user_sso_loginUncheckedCreateInput = {
    user_id: Decimal | DecimalJsLike | number | string
    sso_user_id: string
    sso_user_name?: string | null
    provider_id: Decimal | DecimalJsLike | number | string
    email?: string | null
  }

  export type user_sso_loginUpdateInput = {
    sso_user_id?: StringFieldUpdateOperationsInput | string
    sso_user_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    sso_login_provider?: sso_login_providerUpdateOneRequiredWithoutUser_sso_loginNestedInput
    user?: userUpdateOneRequiredWithoutUser_sso_loginNestedInput
  }

  export type user_sso_loginUncheckedUpdateInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    sso_user_id?: StringFieldUpdateOperationsInput | string
    sso_user_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_sso_loginCreateManyInput = {
    user_id: Decimal | DecimalJsLike | number | string
    sso_user_id: string
    sso_user_name?: string | null
    provider_id: Decimal | DecimalJsLike | number | string
    email?: string | null
  }

  export type user_sso_loginUpdateManyMutationInput = {
    sso_user_id?: StringFieldUpdateOperationsInput | string
    sso_user_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_sso_loginUncheckedUpdateManyInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    sso_user_id?: StringFieldUpdateOperationsInput | string
    sso_user_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_statusCreateInput = {
    user: userCreateNestedOneWithoutUser_statusInput
    user_status_lu?: user_status_luCreateNestedOneWithoutUser_statusInput
    user_status_type_lu: user_status_type_luCreateNestedOneWithoutUser_statusInput
  }

  export type user_statusUncheckedCreateInput = {
    user_id: Decimal | DecimalJsLike | number | string
    user_status_type_id: Decimal | DecimalJsLike | number | string
    user_status_id?: Decimal | DecimalJsLike | number | string | null
  }

  export type user_statusUpdateInput = {
    user?: userUpdateOneRequiredWithoutUser_statusNestedInput
    user_status_lu?: user_status_luUpdateOneWithoutUser_statusNestedInput
    user_status_type_lu?: user_status_type_luUpdateOneRequiredWithoutUser_statusNestedInput
  }

  export type user_statusUncheckedUpdateInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    user_status_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    user_status_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type user_statusCreateManyInput = {
    user_id: Decimal | DecimalJsLike | number | string
    user_status_type_id: Decimal | DecimalJsLike | number | string
    user_status_id?: Decimal | DecimalJsLike | number | string | null
  }

  export type user_statusUpdateManyMutationInput = {

  }

  export type user_statusUncheckedUpdateManyInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    user_status_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    user_status_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type user_status_luCreateInput = {
    user_status_id: Decimal | DecimalJsLike | number | string
    description?: string | null
    user_status?: user_statusCreateNestedManyWithoutUser_status_luInput
  }

  export type user_status_luUncheckedCreateInput = {
    user_status_id: Decimal | DecimalJsLike | number | string
    description?: string | null
    user_status?: user_statusUncheckedCreateNestedManyWithoutUser_status_luInput
  }

  export type user_status_luUpdateInput = {
    user_status_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    user_status?: user_statusUpdateManyWithoutUser_status_luNestedInput
  }

  export type user_status_luUncheckedUpdateInput = {
    user_status_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    user_status?: user_statusUncheckedUpdateManyWithoutUser_status_luNestedInput
  }

  export type user_status_luCreateManyInput = {
    user_status_id: Decimal | DecimalJsLike | number | string
    description?: string | null
  }

  export type user_status_luUpdateManyMutationInput = {
    user_status_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_status_luUncheckedUpdateManyInput = {
    user_status_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_status_type_luCreateInput = {
    user_status_type_id: Decimal | DecimalJsLike | number | string
    description?: string | null
    user_status?: user_statusCreateNestedManyWithoutUser_status_type_luInput
  }

  export type user_status_type_luUncheckedCreateInput = {
    user_status_type_id: Decimal | DecimalJsLike | number | string
    description?: string | null
    user_status?: user_statusUncheckedCreateNestedManyWithoutUser_status_type_luInput
  }

  export type user_status_type_luUpdateInput = {
    user_status_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    user_status?: user_statusUpdateManyWithoutUser_status_type_luNestedInput
  }

  export type user_status_type_luUncheckedUpdateInput = {
    user_status_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    user_status?: user_statusUncheckedUpdateManyWithoutUser_status_type_luNestedInput
  }

  export type user_status_type_luCreateManyInput = {
    user_status_type_id: Decimal | DecimalJsLike | number | string
    description?: string | null
  }

  export type user_status_type_luUpdateManyMutationInput = {
    user_status_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_status_type_luUncheckedUpdateManyInput = {
    user_status_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_email_xrefCreateInput = {
    is_primary: boolean
    create_date?: Date | string | null
    modify_date?: Date | string | null
    user: userCreateNestedOneWithoutUser_email_xrefInput
    email: emailCreateNestedOneWithoutUser_email_xrefInput
    email_status_lu?: email_status_luCreateNestedOneWithoutUser_email_xrefInput
  }

  export type user_email_xrefUncheckedCreateInput = {
    user_id: Decimal | DecimalJsLike | number | string
    email_id: Decimal | DecimalJsLike | number | string
    is_primary: boolean
    status_id: Decimal | DecimalJsLike | number | string
    create_date?: Date | string | null
    modify_date?: Date | string | null
  }

  export type user_email_xrefUpdateInput = {
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: userUpdateOneRequiredWithoutUser_email_xrefNestedInput
    email?: emailUpdateOneRequiredWithoutUser_email_xrefNestedInput
    email_status_lu?: email_status_luUpdateOneWithoutUser_email_xrefNestedInput
  }

  export type user_email_xrefUncheckedUpdateInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    email_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    status_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_email_xrefCreateManyInput = {
    user_id: Decimal | DecimalJsLike | number | string
    email_id: Decimal | DecimalJsLike | number | string
    is_primary: boolean
    status_id: Decimal | DecimalJsLike | number | string
    create_date?: Date | string | null
    modify_date?: Date | string | null
  }

  export type user_email_xrefUpdateManyMutationInput = {
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_email_xrefUncheckedUpdateManyInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    email_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    status_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ClientCreateInput = {
    clientId: string
    name: string
    redirectUri?: string | null
    secret?: string | null
    createdBy?: number | null
    createdAt?: Date | string | null
    modifiedBy?: number | null
    modifiedAt?: Date | string | null
  }

  export type ClientUncheckedCreateInput = {
    id?: number
    clientId: string
    name: string
    redirectUri?: string | null
    secret?: string | null
    createdBy?: number | null
    createdAt?: Date | string | null
    modifiedBy?: number | null
    modifiedAt?: Date | string | null
  }

  export type ClientUpdateInput = {
    clientId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    redirectUri?: NullableStringFieldUpdateOperationsInput | string | null
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    modifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ClientUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    clientId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    redirectUri?: NullableStringFieldUpdateOperationsInput | string | null
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    modifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ClientCreateManyInput = {
    id?: number
    clientId: string
    name: string
    redirectUri?: string | null
    secret?: string | null
    createdBy?: number | null
    createdAt?: Date | string | null
    modifiedBy?: number | null
    modifiedAt?: Date | string | null
  }

  export type ClientUpdateManyMutationInput = {
    clientId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    redirectUri?: NullableStringFieldUpdateOperationsInput | string | null
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    modifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ClientUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    clientId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    redirectUri?: NullableStringFieldUpdateOperationsInput | string | null
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    modifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RoleCreateInput = {
    name: string
    createdBy?: number | null
    createdAt?: Date | string | null
    modifiedBy?: number | null
    modifiedAt?: Date | string | null
    roleAssignments?: RoleAssignmentCreateNestedManyWithoutRoleInput
  }

  export type RoleUncheckedCreateInput = {
    id?: number
    name: string
    createdBy?: number | null
    createdAt?: Date | string | null
    modifiedBy?: number | null
    modifiedAt?: Date | string | null
    roleAssignments?: RoleAssignmentUncheckedCreateNestedManyWithoutRoleInput
  }

  export type RoleUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    modifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleAssignments?: RoleAssignmentUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    modifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleAssignments?: RoleAssignmentUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type RoleCreateManyInput = {
    id?: number
    name: string
    createdBy?: number | null
    createdAt?: Date | string | null
    modifiedBy?: number | null
    modifiedAt?: Date | string | null
  }

  export type RoleUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    modifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RoleUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    modifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RoleAssignmentCreateInput = {
    subjectId: number
    createdBy?: number | null
    createdAt?: Date | string | null
    modifiedBy?: number | null
    modifiedAt?: Date | string | null
    subjectType?: number
    role: RoleCreateNestedOneWithoutRoleAssignmentsInput
  }

  export type RoleAssignmentUncheckedCreateInput = {
    id?: number
    roleId: number
    subjectId: number
    createdBy?: number | null
    createdAt?: Date | string | null
    modifiedBy?: number | null
    modifiedAt?: Date | string | null
    subjectType?: number
  }

  export type RoleAssignmentUpdateInput = {
    subjectId?: IntFieldUpdateOperationsInput | number
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    modifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subjectType?: IntFieldUpdateOperationsInput | number
    role?: RoleUpdateOneRequiredWithoutRoleAssignmentsNestedInput
  }

  export type RoleAssignmentUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    roleId?: IntFieldUpdateOperationsInput | number
    subjectId?: IntFieldUpdateOperationsInput | number
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    modifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subjectType?: IntFieldUpdateOperationsInput | number
  }

  export type RoleAssignmentCreateManyInput = {
    id?: number
    roleId: number
    subjectId: number
    createdBy?: number | null
    createdAt?: Date | string | null
    modifiedBy?: number | null
    modifiedAt?: Date | string | null
    subjectType?: number
  }

  export type RoleAssignmentUpdateManyMutationInput = {
    subjectId?: IntFieldUpdateOperationsInput | number
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    modifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subjectType?: IntFieldUpdateOperationsInput | number
  }

  export type RoleAssignmentUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    roleId?: IntFieldUpdateOperationsInput | number
    subjectId?: IntFieldUpdateOperationsInput | number
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    modifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subjectType?: IntFieldUpdateOperationsInput | number
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type User_achievementListRelationFilter = {
    every?: user_achievementWhereInput
    some?: user_achievementWhereInput
    none?: user_achievementWhereInput
  }

  export type user_achievementOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type achievement_type_luCountOrderByAggregateInput = {
    achievement_type_id?: SortOrder
    achievement_type_desc?: SortOrder
  }

  export type achievement_type_luAvgOrderByAggregateInput = {
    achievement_type_id?: SortOrder
  }

  export type achievement_type_luMaxOrderByAggregateInput = {
    achievement_type_id?: SortOrder
    achievement_type_desc?: SortOrder
  }

  export type achievement_type_luMinOrderByAggregateInput = {
    achievement_type_id?: SortOrder
    achievement_type_desc?: SortOrder
  }

  export type achievement_type_luSumOrderByAggregateInput = {
    achievement_type_id?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type countryCountOrderByAggregateInput = {
    country_code?: SortOrder
    country_name?: SortOrder
    modify_date?: SortOrder
    participating?: SortOrder
    default_taxform_id?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    region?: SortOrder
    iso_name?: SortOrder
    iso_alpha2_code?: SortOrder
    iso_alpha3_code?: SortOrder
  }

  export type countryAvgOrderByAggregateInput = {
    participating?: SortOrder
    default_taxform_id?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
  }

  export type countryMaxOrderByAggregateInput = {
    country_code?: SortOrder
    country_name?: SortOrder
    modify_date?: SortOrder
    participating?: SortOrder
    default_taxform_id?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    region?: SortOrder
    iso_name?: SortOrder
    iso_alpha2_code?: SortOrder
    iso_alpha3_code?: SortOrder
  }

  export type countryMinOrderByAggregateInput = {
    country_code?: SortOrder
    country_name?: SortOrder
    modify_date?: SortOrder
    participating?: SortOrder
    default_taxform_id?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    region?: SortOrder
    iso_name?: SortOrder
    iso_alpha2_code?: SortOrder
    iso_alpha3_code?: SortOrder
  }

  export type countrySumOrderByAggregateInput = {
    participating?: SortOrder
    default_taxform_id?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type UserScalarRelationFilter = {
    is?: userWhereInput
    isNot?: userWhereInput
  }

  export type dice_connectionCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    connection?: SortOrder
    accepted?: SortOrder
    created_at?: SortOrder
    short_url?: SortOrder
    con_created_at?: SortOrder
  }

  export type dice_connectionAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type dice_connectionMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    connection?: SortOrder
    accepted?: SortOrder
    created_at?: SortOrder
    short_url?: SortOrder
    con_created_at?: SortOrder
  }

  export type dice_connectionMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    connection?: SortOrder
    accepted?: SortOrder
    created_at?: SortOrder
    short_url?: SortOrder
    con_created_at?: SortOrder
  }

  export type dice_connectionSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type Email_status_luNullableScalarRelationFilter = {
    is?: email_status_luWhereInput | null
    isNot?: email_status_luWhereInput | null
  }

  export type Email_type_luNullableScalarRelationFilter = {
    is?: email_type_luWhereInput | null
    isNot?: email_type_luWhereInput | null
  }

  export type User_email_xrefListRelationFilter = {
    every?: user_email_xrefWhereInput
    some?: user_email_xrefWhereInput
    none?: user_email_xrefWhereInput
  }

  export type UserNullableScalarRelationFilter = {
    is?: userWhereInput | null
    isNot?: userWhereInput | null
  }

  export type user_email_xrefOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type emailCountOrderByAggregateInput = {
    user_id?: SortOrder
    email_id?: SortOrder
    email_type_id?: SortOrder
    address?: SortOrder
    create_date?: SortOrder
    modify_date?: SortOrder
    primary_ind?: SortOrder
    status_id?: SortOrder
  }

  export type emailAvgOrderByAggregateInput = {
    user_id?: SortOrder
    email_id?: SortOrder
    email_type_id?: SortOrder
    primary_ind?: SortOrder
    status_id?: SortOrder
  }

  export type emailMaxOrderByAggregateInput = {
    user_id?: SortOrder
    email_id?: SortOrder
    email_type_id?: SortOrder
    address?: SortOrder
    create_date?: SortOrder
    modify_date?: SortOrder
    primary_ind?: SortOrder
    status_id?: SortOrder
  }

  export type emailMinOrderByAggregateInput = {
    user_id?: SortOrder
    email_id?: SortOrder
    email_type_id?: SortOrder
    address?: SortOrder
    create_date?: SortOrder
    modify_date?: SortOrder
    primary_ind?: SortOrder
    status_id?: SortOrder
  }

  export type emailSumOrderByAggregateInput = {
    user_id?: SortOrder
    email_id?: SortOrder
    email_type_id?: SortOrder
    primary_ind?: SortOrder
    status_id?: SortOrder
  }

  export type EmailListRelationFilter = {
    every?: emailWhereInput
    some?: emailWhereInput
    none?: emailWhereInput
  }

  export type emailOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type email_status_luCountOrderByAggregateInput = {
    status_id?: SortOrder
    status_desc?: SortOrder
    create_date?: SortOrder
    modify_date?: SortOrder
  }

  export type email_status_luAvgOrderByAggregateInput = {
    status_id?: SortOrder
  }

  export type email_status_luMaxOrderByAggregateInput = {
    status_id?: SortOrder
    status_desc?: SortOrder
    create_date?: SortOrder
    modify_date?: SortOrder
  }

  export type email_status_luMinOrderByAggregateInput = {
    status_id?: SortOrder
    status_desc?: SortOrder
    create_date?: SortOrder
    modify_date?: SortOrder
  }

  export type email_status_luSumOrderByAggregateInput = {
    status_id?: SortOrder
  }

  export type email_type_luCountOrderByAggregateInput = {
    email_type_id?: SortOrder
    email_type_desc?: SortOrder
    create_date?: SortOrder
    modify_date?: SortOrder
  }

  export type email_type_luAvgOrderByAggregateInput = {
    email_type_id?: SortOrder
  }

  export type email_type_luMaxOrderByAggregateInput = {
    email_type_id?: SortOrder
    email_type_desc?: SortOrder
    create_date?: SortOrder
    modify_date?: SortOrder
  }

  export type email_type_luMinOrderByAggregateInput = {
    email_type_id?: SortOrder
    email_type_desc?: SortOrder
    create_date?: SortOrder
    modify_date?: SortOrder
  }

  export type email_type_luSumOrderByAggregateInput = {
    email_type_id?: SortOrder
  }

  export type id_sequencesCountOrderByAggregateInput = {
    name?: SortOrder
    next_block_start?: SortOrder
    block_size?: SortOrder
    exhausted?: SortOrder
  }

  export type id_sequencesAvgOrderByAggregateInput = {
    next_block_start?: SortOrder
    block_size?: SortOrder
    exhausted?: SortOrder
  }

  export type id_sequencesMaxOrderByAggregateInput = {
    name?: SortOrder
    next_block_start?: SortOrder
    block_size?: SortOrder
    exhausted?: SortOrder
  }

  export type id_sequencesMinOrderByAggregateInput = {
    name?: SortOrder
    next_block_start?: SortOrder
    block_size?: SortOrder
    exhausted?: SortOrder
  }

  export type id_sequencesSumOrderByAggregateInput = {
    next_block_start?: SortOrder
    block_size?: SortOrder
    exhausted?: SortOrder
  }

  export type invalid_handlesCountOrderByAggregateInput = {
    invalid_handle_id?: SortOrder
    invalid_handle?: SortOrder
  }

  export type invalid_handlesAvgOrderByAggregateInput = {
    invalid_handle_id?: SortOrder
  }

  export type invalid_handlesMaxOrderByAggregateInput = {
    invalid_handle_id?: SortOrder
    invalid_handle?: SortOrder
  }

  export type invalid_handlesMinOrderByAggregateInput = {
    invalid_handle_id?: SortOrder
    invalid_handle?: SortOrder
  }

  export type invalid_handlesSumOrderByAggregateInput = {
    invalid_handle_id?: SortOrder
  }

  export type User_group_xrefListRelationFilter = {
    every?: user_group_xrefWhereInput
    some?: user_group_xrefWhereInput
    none?: user_group_xrefWhereInput
  }

  export type user_group_xrefOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type security_groupsCountOrderByAggregateInput = {
    group_id?: SortOrder
    description?: SortOrder
    challenge_group_ind?: SortOrder
    create_user_id?: SortOrder
  }

  export type security_groupsAvgOrderByAggregateInput = {
    group_id?: SortOrder
    challenge_group_ind?: SortOrder
    create_user_id?: SortOrder
  }

  export type security_groupsMaxOrderByAggregateInput = {
    group_id?: SortOrder
    description?: SortOrder
    challenge_group_ind?: SortOrder
    create_user_id?: SortOrder
  }

  export type security_groupsMinOrderByAggregateInput = {
    group_id?: SortOrder
    description?: SortOrder
    challenge_group_ind?: SortOrder
    create_user_id?: SortOrder
  }

  export type security_groupsSumOrderByAggregateInput = {
    group_id?: SortOrder
    challenge_group_ind?: SortOrder
    create_user_id?: SortOrder
  }

  export type security_status_luCountOrderByAggregateInput = {
    security_status_id?: SortOrder
    status_desc?: SortOrder
  }

  export type security_status_luAvgOrderByAggregateInput = {
    security_status_id?: SortOrder
  }

  export type security_status_luMaxOrderByAggregateInput = {
    security_status_id?: SortOrder
    status_desc?: SortOrder
  }

  export type security_status_luMinOrderByAggregateInput = {
    security_status_id?: SortOrder
    status_desc?: SortOrder
  }

  export type security_status_luSumOrderByAggregateInput = {
    security_status_id?: SortOrder
  }

  export type security_userCountOrderByAggregateInput = {
    login_id?: SortOrder
    user_id?: SortOrder
    password?: SortOrder
    create_user_id?: SortOrder
    modify_date?: SortOrder
  }

  export type security_userAvgOrderByAggregateInput = {
    login_id?: SortOrder
    create_user_id?: SortOrder
  }

  export type security_userMaxOrderByAggregateInput = {
    login_id?: SortOrder
    user_id?: SortOrder
    password?: SortOrder
    create_user_id?: SortOrder
    modify_date?: SortOrder
  }

  export type security_userMinOrderByAggregateInput = {
    login_id?: SortOrder
    user_id?: SortOrder
    password?: SortOrder
    create_user_id?: SortOrder
    modify_date?: SortOrder
  }

  export type security_userSumOrderByAggregateInput = {
    login_id?: SortOrder
    create_user_id?: SortOrder
  }

  export type User_social_loginListRelationFilter = {
    every?: user_social_loginWhereInput
    some?: user_social_loginWhereInput
    none?: user_social_loginWhereInput
  }

  export type user_social_loginOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type social_login_providerCountOrderByAggregateInput = {
    social_login_provider_id?: SortOrder
    name?: SortOrder
  }

  export type social_login_providerAvgOrderByAggregateInput = {
    social_login_provider_id?: SortOrder
  }

  export type social_login_providerMaxOrderByAggregateInput = {
    social_login_provider_id?: SortOrder
    name?: SortOrder
  }

  export type social_login_providerMinOrderByAggregateInput = {
    social_login_provider_id?: SortOrder
    name?: SortOrder
  }

  export type social_login_providerSumOrderByAggregateInput = {
    social_login_provider_id?: SortOrder
  }

  export type User_sso_loginListRelationFilter = {
    every?: user_sso_loginWhereInput
    some?: user_sso_loginWhereInput
    none?: user_sso_loginWhereInput
  }

  export type user_sso_loginOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sso_login_providerCountOrderByAggregateInput = {
    sso_login_provider_id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    identify_email_enabled?: SortOrder
    identify_handle_enabled?: SortOrder
  }

  export type sso_login_providerAvgOrderByAggregateInput = {
    sso_login_provider_id?: SortOrder
  }

  export type sso_login_providerMaxOrderByAggregateInput = {
    sso_login_provider_id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    identify_email_enabled?: SortOrder
    identify_handle_enabled?: SortOrder
  }

  export type sso_login_providerMinOrderByAggregateInput = {
    sso_login_provider_id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    identify_email_enabled?: SortOrder
    identify_handle_enabled?: SortOrder
  }

  export type sso_login_providerSumOrderByAggregateInput = {
    sso_login_provider_id?: SortOrder
  }

  export type Dice_connectionNullableScalarRelationFilter = {
    is?: dice_connectionWhereInput | null
    isNot?: dice_connectionWhereInput | null
  }

  export type User_2faNullableScalarRelationFilter = {
    is?: user_2faWhereInput | null
    isNot?: user_2faWhereInput | null
  }

  export type User_otp_emailListRelationFilter = {
    every?: user_otp_emailWhereInput
    some?: user_otp_emailWhereInput
    none?: user_otp_emailWhereInput
  }

  export type User_statusListRelationFilter = {
    every?: user_statusWhereInput
    some?: user_statusWhereInput
    none?: user_statusWhereInput
  }

  export type user_otp_emailOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type user_statusOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type userCountOrderByAggregateInput = {
    user_id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    create_date?: SortOrder
    modify_date?: SortOrder
    handle?: SortOrder
    last_login?: SortOrder
    status?: SortOrder
    activation_code?: SortOrder
    middle_name?: SortOrder
    handle_lower?: SortOrder
    timezone_id?: SortOrder
    last_site_hit_date?: SortOrder
    name_in_another_language?: SortOrder
    password?: SortOrder
    open_id?: SortOrder
    reg_source?: SortOrder
    utm_source?: SortOrder
    utm_medium?: SortOrder
    utm_campaign?: SortOrder
  }

  export type userAvgOrderByAggregateInput = {
    user_id?: SortOrder
    timezone_id?: SortOrder
  }

  export type userMaxOrderByAggregateInput = {
    user_id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    create_date?: SortOrder
    modify_date?: SortOrder
    handle?: SortOrder
    last_login?: SortOrder
    status?: SortOrder
    activation_code?: SortOrder
    middle_name?: SortOrder
    handle_lower?: SortOrder
    timezone_id?: SortOrder
    last_site_hit_date?: SortOrder
    name_in_another_language?: SortOrder
    password?: SortOrder
    open_id?: SortOrder
    reg_source?: SortOrder
    utm_source?: SortOrder
    utm_medium?: SortOrder
    utm_campaign?: SortOrder
  }

  export type userMinOrderByAggregateInput = {
    user_id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    create_date?: SortOrder
    modify_date?: SortOrder
    handle?: SortOrder
    last_login?: SortOrder
    status?: SortOrder
    activation_code?: SortOrder
    middle_name?: SortOrder
    handle_lower?: SortOrder
    timezone_id?: SortOrder
    last_site_hit_date?: SortOrder
    name_in_another_language?: SortOrder
    password?: SortOrder
    open_id?: SortOrder
    reg_source?: SortOrder
    utm_source?: SortOrder
    utm_medium?: SortOrder
    utm_campaign?: SortOrder
  }

  export type userSumOrderByAggregateInput = {
    user_id?: SortOrder
    timezone_id?: SortOrder
  }

  export type user_2faCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    mfa_enabled?: SortOrder
    dice_enabled?: SortOrder
    created_by?: SortOrder
    created_at?: SortOrder
    modified_by?: SortOrder
    modified_at?: SortOrder
  }

  export type user_2faAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    created_by?: SortOrder
    modified_by?: SortOrder
  }

  export type user_2faMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    mfa_enabled?: SortOrder
    dice_enabled?: SortOrder
    created_by?: SortOrder
    created_at?: SortOrder
    modified_by?: SortOrder
    modified_at?: SortOrder
  }

  export type user_2faMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    mfa_enabled?: SortOrder
    dice_enabled?: SortOrder
    created_by?: SortOrder
    created_at?: SortOrder
    modified_by?: SortOrder
    modified_at?: SortOrder
  }

  export type user_2faSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    created_by?: SortOrder
    modified_by?: SortOrder
  }

  export type Achievement_type_luScalarRelationFilter = {
    is?: achievement_type_luWhereInput
    isNot?: achievement_type_luWhereInput
  }

  export type user_achievementUser_idAchievement_type_idCompoundUniqueInput = {
    user_id: Decimal | DecimalJsLike | number | string
    achievement_type_id: Decimal | DecimalJsLike | number | string
  }

  export type user_achievementCountOrderByAggregateInput = {
    user_id?: SortOrder
    achievement_date?: SortOrder
    achievement_type_id?: SortOrder
    description?: SortOrder
    create_date?: SortOrder
  }

  export type user_achievementAvgOrderByAggregateInput = {
    user_id?: SortOrder
    achievement_type_id?: SortOrder
  }

  export type user_achievementMaxOrderByAggregateInput = {
    user_id?: SortOrder
    achievement_date?: SortOrder
    achievement_type_id?: SortOrder
    description?: SortOrder
    create_date?: SortOrder
  }

  export type user_achievementMinOrderByAggregateInput = {
    user_id?: SortOrder
    achievement_date?: SortOrder
    achievement_type_id?: SortOrder
    description?: SortOrder
    create_date?: SortOrder
  }

  export type user_achievementSumOrderByAggregateInput = {
    user_id?: SortOrder
    achievement_type_id?: SortOrder
  }

  export type Security_userNullableScalarRelationFilter = {
    is?: security_userWhereInput | null
    isNot?: security_userWhereInput | null
  }

  export type Security_groupsNullableScalarRelationFilter = {
    is?: security_groupsWhereInput | null
    isNot?: security_groupsWhereInput | null
  }

  export type Security_status_luNullableScalarRelationFilter = {
    is?: security_status_luWhereInput | null
    isNot?: security_status_luWhereInput | null
  }

  export type user_group_xrefLogin_idGroup_idCompoundUniqueInput = {
    login_id: Decimal | DecimalJsLike | number | string
    group_id: Decimal | DecimalJsLike | number | string
  }

  export type user_group_xrefCountOrderByAggregateInput = {
    user_group_id?: SortOrder
    login_id?: SortOrder
    group_id?: SortOrder
    create_user_id?: SortOrder
    security_status_id?: SortOrder
    create_date?: SortOrder
  }

  export type user_group_xrefAvgOrderByAggregateInput = {
    user_group_id?: SortOrder
    login_id?: SortOrder
    group_id?: SortOrder
    create_user_id?: SortOrder
    security_status_id?: SortOrder
  }

  export type user_group_xrefMaxOrderByAggregateInput = {
    user_group_id?: SortOrder
    login_id?: SortOrder
    group_id?: SortOrder
    create_user_id?: SortOrder
    security_status_id?: SortOrder
    create_date?: SortOrder
  }

  export type user_group_xrefMinOrderByAggregateInput = {
    user_group_id?: SortOrder
    login_id?: SortOrder
    group_id?: SortOrder
    create_user_id?: SortOrder
    security_status_id?: SortOrder
    create_date?: SortOrder
  }

  export type user_group_xrefSumOrderByAggregateInput = {
    user_group_id?: SortOrder
    login_id?: SortOrder
    group_id?: SortOrder
    create_user_id?: SortOrder
    security_status_id?: SortOrder
  }

  export type user_otp_emailUser_idModeCompoundUniqueInput = {
    user_id: Decimal | DecimalJsLike | number | string
    mode: number
  }

  export type user_otp_emailCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    mode?: SortOrder
    otp?: SortOrder
    expire_at?: SortOrder
    resend?: SortOrder
    fail_count?: SortOrder
  }

  export type user_otp_emailAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    mode?: SortOrder
    fail_count?: SortOrder
  }

  export type user_otp_emailMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    mode?: SortOrder
    otp?: SortOrder
    expire_at?: SortOrder
    resend?: SortOrder
    fail_count?: SortOrder
  }

  export type user_otp_emailMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    mode?: SortOrder
    otp?: SortOrder
    expire_at?: SortOrder
    resend?: SortOrder
    fail_count?: SortOrder
  }

  export type user_otp_emailSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    mode?: SortOrder
    fail_count?: SortOrder
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type Social_login_providerScalarRelationFilter = {
    is?: social_login_providerWhereInput
    isNot?: social_login_providerWhereInput
  }

  export type user_social_loginUser_idSocial_login_provider_idCompoundUniqueInput = {
    user_id: Decimal | DecimalJsLike | number | string
    social_login_provider_id: Decimal | DecimalJsLike | number | string
  }

  export type user_social_loginCountOrderByAggregateInput = {
    social_user_id?: SortOrder
    user_id?: SortOrder
    social_login_provider_id?: SortOrder
    social_user_name?: SortOrder
    social_email?: SortOrder
    social_email_verified?: SortOrder
    create_date?: SortOrder
    modify_date?: SortOrder
  }

  export type user_social_loginAvgOrderByAggregateInput = {
    user_id?: SortOrder
    social_login_provider_id?: SortOrder
  }

  export type user_social_loginMaxOrderByAggregateInput = {
    social_user_id?: SortOrder
    user_id?: SortOrder
    social_login_provider_id?: SortOrder
    social_user_name?: SortOrder
    social_email?: SortOrder
    social_email_verified?: SortOrder
    create_date?: SortOrder
    modify_date?: SortOrder
  }

  export type user_social_loginMinOrderByAggregateInput = {
    social_user_id?: SortOrder
    user_id?: SortOrder
    social_login_provider_id?: SortOrder
    social_user_name?: SortOrder
    social_email?: SortOrder
    social_email_verified?: SortOrder
    create_date?: SortOrder
    modify_date?: SortOrder
  }

  export type user_social_loginSumOrderByAggregateInput = {
    user_id?: SortOrder
    social_login_provider_id?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type Sso_login_providerScalarRelationFilter = {
    is?: sso_login_providerWhereInput
    isNot?: sso_login_providerWhereInput
  }

  export type user_sso_loginUser_idProvider_idCompoundUniqueInput = {
    user_id: Decimal | DecimalJsLike | number | string
    provider_id: Decimal | DecimalJsLike | number | string
  }

  export type user_sso_loginCountOrderByAggregateInput = {
    user_id?: SortOrder
    sso_user_id?: SortOrder
    sso_user_name?: SortOrder
    provider_id?: SortOrder
    email?: SortOrder
  }

  export type user_sso_loginAvgOrderByAggregateInput = {
    user_id?: SortOrder
    provider_id?: SortOrder
  }

  export type user_sso_loginMaxOrderByAggregateInput = {
    user_id?: SortOrder
    sso_user_id?: SortOrder
    sso_user_name?: SortOrder
    provider_id?: SortOrder
    email?: SortOrder
  }

  export type user_sso_loginMinOrderByAggregateInput = {
    user_id?: SortOrder
    sso_user_id?: SortOrder
    sso_user_name?: SortOrder
    provider_id?: SortOrder
    email?: SortOrder
  }

  export type user_sso_loginSumOrderByAggregateInput = {
    user_id?: SortOrder
    provider_id?: SortOrder
  }

  export type User_status_luNullableScalarRelationFilter = {
    is?: user_status_luWhereInput | null
    isNot?: user_status_luWhereInput | null
  }

  export type User_status_type_luScalarRelationFilter = {
    is?: user_status_type_luWhereInput
    isNot?: user_status_type_luWhereInput
  }

  export type user_statusUser_idUser_status_type_idCompoundUniqueInput = {
    user_id: Decimal | DecimalJsLike | number | string
    user_status_type_id: Decimal | DecimalJsLike | number | string
  }

  export type user_statusCountOrderByAggregateInput = {
    user_id?: SortOrder
    user_status_type_id?: SortOrder
    user_status_id?: SortOrder
  }

  export type user_statusAvgOrderByAggregateInput = {
    user_id?: SortOrder
    user_status_type_id?: SortOrder
    user_status_id?: SortOrder
  }

  export type user_statusMaxOrderByAggregateInput = {
    user_id?: SortOrder
    user_status_type_id?: SortOrder
    user_status_id?: SortOrder
  }

  export type user_statusMinOrderByAggregateInput = {
    user_id?: SortOrder
    user_status_type_id?: SortOrder
    user_status_id?: SortOrder
  }

  export type user_statusSumOrderByAggregateInput = {
    user_id?: SortOrder
    user_status_type_id?: SortOrder
    user_status_id?: SortOrder
  }

  export type user_status_luCountOrderByAggregateInput = {
    user_status_id?: SortOrder
    description?: SortOrder
  }

  export type user_status_luAvgOrderByAggregateInput = {
    user_status_id?: SortOrder
  }

  export type user_status_luMaxOrderByAggregateInput = {
    user_status_id?: SortOrder
    description?: SortOrder
  }

  export type user_status_luMinOrderByAggregateInput = {
    user_status_id?: SortOrder
    description?: SortOrder
  }

  export type user_status_luSumOrderByAggregateInput = {
    user_status_id?: SortOrder
  }

  export type user_status_type_luCountOrderByAggregateInput = {
    user_status_type_id?: SortOrder
    description?: SortOrder
  }

  export type user_status_type_luAvgOrderByAggregateInput = {
    user_status_type_id?: SortOrder
  }

  export type user_status_type_luMaxOrderByAggregateInput = {
    user_status_type_id?: SortOrder
    description?: SortOrder
  }

  export type user_status_type_luMinOrderByAggregateInput = {
    user_status_type_id?: SortOrder
    description?: SortOrder
  }

  export type user_status_type_luSumOrderByAggregateInput = {
    user_status_type_id?: SortOrder
  }

  export type EmailScalarRelationFilter = {
    is?: emailWhereInput
    isNot?: emailWhereInput
  }

  export type user_email_xrefUser_idEmail_idCompoundUniqueInput = {
    user_id: Decimal | DecimalJsLike | number | string
    email_id: Decimal | DecimalJsLike | number | string
  }

  export type user_email_xrefCountOrderByAggregateInput = {
    user_id?: SortOrder
    email_id?: SortOrder
    is_primary?: SortOrder
    status_id?: SortOrder
    create_date?: SortOrder
    modify_date?: SortOrder
  }

  export type user_email_xrefAvgOrderByAggregateInput = {
    user_id?: SortOrder
    email_id?: SortOrder
    status_id?: SortOrder
  }

  export type user_email_xrefMaxOrderByAggregateInput = {
    user_id?: SortOrder
    email_id?: SortOrder
    is_primary?: SortOrder
    status_id?: SortOrder
    create_date?: SortOrder
    modify_date?: SortOrder
  }

  export type user_email_xrefMinOrderByAggregateInput = {
    user_id?: SortOrder
    email_id?: SortOrder
    is_primary?: SortOrder
    status_id?: SortOrder
    create_date?: SortOrder
    modify_date?: SortOrder
  }

  export type user_email_xrefSumOrderByAggregateInput = {
    user_id?: SortOrder
    email_id?: SortOrder
    status_id?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type ClientCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    name?: SortOrder
    redirectUri?: SortOrder
    secret?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    modifiedBy?: SortOrder
    modifiedAt?: SortOrder
  }

  export type ClientAvgOrderByAggregateInput = {
    id?: SortOrder
    createdBy?: SortOrder
    modifiedBy?: SortOrder
  }

  export type ClientMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    name?: SortOrder
    redirectUri?: SortOrder
    secret?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    modifiedBy?: SortOrder
    modifiedAt?: SortOrder
  }

  export type ClientMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    name?: SortOrder
    redirectUri?: SortOrder
    secret?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    modifiedBy?: SortOrder
    modifiedAt?: SortOrder
  }

  export type ClientSumOrderByAggregateInput = {
    id?: SortOrder
    createdBy?: SortOrder
    modifiedBy?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type RoleAssignmentListRelationFilter = {
    every?: RoleAssignmentWhereInput
    some?: RoleAssignmentWhereInput
    none?: RoleAssignmentWhereInput
  }

  export type RoleAssignmentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RoleCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    modifiedBy?: SortOrder
    modifiedAt?: SortOrder
  }

  export type RoleAvgOrderByAggregateInput = {
    id?: SortOrder
    createdBy?: SortOrder
    modifiedBy?: SortOrder
  }

  export type RoleMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    modifiedBy?: SortOrder
    modifiedAt?: SortOrder
  }

  export type RoleMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    modifiedBy?: SortOrder
    modifiedAt?: SortOrder
  }

  export type RoleSumOrderByAggregateInput = {
    id?: SortOrder
    createdBy?: SortOrder
    modifiedBy?: SortOrder
  }

  export type RoleScalarRelationFilter = {
    is?: RoleWhereInput
    isNot?: RoleWhereInput
  }

  export type RoleAssignmentRoleIdSubjectIdSubjectTypeCompoundUniqueInput = {
    roleId: number
    subjectId: number
    subjectType: number
  }

  export type RoleAssignmentCountOrderByAggregateInput = {
    id?: SortOrder
    roleId?: SortOrder
    subjectId?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    modifiedBy?: SortOrder
    modifiedAt?: SortOrder
    subjectType?: SortOrder
  }

  export type RoleAssignmentAvgOrderByAggregateInput = {
    id?: SortOrder
    roleId?: SortOrder
    subjectId?: SortOrder
    createdBy?: SortOrder
    modifiedBy?: SortOrder
    subjectType?: SortOrder
  }

  export type RoleAssignmentMaxOrderByAggregateInput = {
    id?: SortOrder
    roleId?: SortOrder
    subjectId?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    modifiedBy?: SortOrder
    modifiedAt?: SortOrder
    subjectType?: SortOrder
  }

  export type RoleAssignmentMinOrderByAggregateInput = {
    id?: SortOrder
    roleId?: SortOrder
    subjectId?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    modifiedBy?: SortOrder
    modifiedAt?: SortOrder
    subjectType?: SortOrder
  }

  export type RoleAssignmentSumOrderByAggregateInput = {
    id?: SortOrder
    roleId?: SortOrder
    subjectId?: SortOrder
    createdBy?: SortOrder
    modifiedBy?: SortOrder
    subjectType?: SortOrder
  }

  export type user_achievementCreateNestedManyWithoutAchievement_type_luInput = {
    create?: XOR<user_achievementCreateWithoutAchievement_type_luInput, user_achievementUncheckedCreateWithoutAchievement_type_luInput> | user_achievementCreateWithoutAchievement_type_luInput[] | user_achievementUncheckedCreateWithoutAchievement_type_luInput[]
    connectOrCreate?: user_achievementCreateOrConnectWithoutAchievement_type_luInput | user_achievementCreateOrConnectWithoutAchievement_type_luInput[]
    createMany?: user_achievementCreateManyAchievement_type_luInputEnvelope
    connect?: user_achievementWhereUniqueInput | user_achievementWhereUniqueInput[]
  }

  export type user_achievementUncheckedCreateNestedManyWithoutAchievement_type_luInput = {
    create?: XOR<user_achievementCreateWithoutAchievement_type_luInput, user_achievementUncheckedCreateWithoutAchievement_type_luInput> | user_achievementCreateWithoutAchievement_type_luInput[] | user_achievementUncheckedCreateWithoutAchievement_type_luInput[]
    connectOrCreate?: user_achievementCreateOrConnectWithoutAchievement_type_luInput | user_achievementCreateOrConnectWithoutAchievement_type_luInput[]
    createMany?: user_achievementCreateManyAchievement_type_luInputEnvelope
    connect?: user_achievementWhereUniqueInput | user_achievementWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type user_achievementUpdateManyWithoutAchievement_type_luNestedInput = {
    create?: XOR<user_achievementCreateWithoutAchievement_type_luInput, user_achievementUncheckedCreateWithoutAchievement_type_luInput> | user_achievementCreateWithoutAchievement_type_luInput[] | user_achievementUncheckedCreateWithoutAchievement_type_luInput[]
    connectOrCreate?: user_achievementCreateOrConnectWithoutAchievement_type_luInput | user_achievementCreateOrConnectWithoutAchievement_type_luInput[]
    upsert?: user_achievementUpsertWithWhereUniqueWithoutAchievement_type_luInput | user_achievementUpsertWithWhereUniqueWithoutAchievement_type_luInput[]
    createMany?: user_achievementCreateManyAchievement_type_luInputEnvelope
    set?: user_achievementWhereUniqueInput | user_achievementWhereUniqueInput[]
    disconnect?: user_achievementWhereUniqueInput | user_achievementWhereUniqueInput[]
    delete?: user_achievementWhereUniqueInput | user_achievementWhereUniqueInput[]
    connect?: user_achievementWhereUniqueInput | user_achievementWhereUniqueInput[]
    update?: user_achievementUpdateWithWhereUniqueWithoutAchievement_type_luInput | user_achievementUpdateWithWhereUniqueWithoutAchievement_type_luInput[]
    updateMany?: user_achievementUpdateManyWithWhereWithoutAchievement_type_luInput | user_achievementUpdateManyWithWhereWithoutAchievement_type_luInput[]
    deleteMany?: user_achievementScalarWhereInput | user_achievementScalarWhereInput[]
  }

  export type user_achievementUncheckedUpdateManyWithoutAchievement_type_luNestedInput = {
    create?: XOR<user_achievementCreateWithoutAchievement_type_luInput, user_achievementUncheckedCreateWithoutAchievement_type_luInput> | user_achievementCreateWithoutAchievement_type_luInput[] | user_achievementUncheckedCreateWithoutAchievement_type_luInput[]
    connectOrCreate?: user_achievementCreateOrConnectWithoutAchievement_type_luInput | user_achievementCreateOrConnectWithoutAchievement_type_luInput[]
    upsert?: user_achievementUpsertWithWhereUniqueWithoutAchievement_type_luInput | user_achievementUpsertWithWhereUniqueWithoutAchievement_type_luInput[]
    createMany?: user_achievementCreateManyAchievement_type_luInputEnvelope
    set?: user_achievementWhereUniqueInput | user_achievementWhereUniqueInput[]
    disconnect?: user_achievementWhereUniqueInput | user_achievementWhereUniqueInput[]
    delete?: user_achievementWhereUniqueInput | user_achievementWhereUniqueInput[]
    connect?: user_achievementWhereUniqueInput | user_achievementWhereUniqueInput[]
    update?: user_achievementUpdateWithWhereUniqueWithoutAchievement_type_luInput | user_achievementUpdateWithWhereUniqueWithoutAchievement_type_luInput[]
    updateMany?: user_achievementUpdateManyWithWhereWithoutAchievement_type_luInput | user_achievementUpdateManyWithWhereWithoutAchievement_type_luInput[]
    deleteMany?: user_achievementScalarWhereInput | user_achievementScalarWhereInput[]
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type userCreateNestedOneWithoutDice_connectionInput = {
    create?: XOR<userCreateWithoutDice_connectionInput, userUncheckedCreateWithoutDice_connectionInput>
    connectOrCreate?: userCreateOrConnectWithoutDice_connectionInput
    connect?: userWhereUniqueInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type userUpdateOneRequiredWithoutDice_connectionNestedInput = {
    create?: XOR<userCreateWithoutDice_connectionInput, userUncheckedCreateWithoutDice_connectionInput>
    connectOrCreate?: userCreateOrConnectWithoutDice_connectionInput
    upsert?: userUpsertWithoutDice_connectionInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutDice_connectionInput, userUpdateWithoutDice_connectionInput>, userUncheckedUpdateWithoutDice_connectionInput>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type email_status_luCreateNestedOneWithoutEmailInput = {
    create?: XOR<email_status_luCreateWithoutEmailInput, email_status_luUncheckedCreateWithoutEmailInput>
    connectOrCreate?: email_status_luCreateOrConnectWithoutEmailInput
    connect?: email_status_luWhereUniqueInput
  }

  export type email_type_luCreateNestedOneWithoutEmailInput = {
    create?: XOR<email_type_luCreateWithoutEmailInput, email_type_luUncheckedCreateWithoutEmailInput>
    connectOrCreate?: email_type_luCreateOrConnectWithoutEmailInput
    connect?: email_type_luWhereUniqueInput
  }

  export type user_email_xrefCreateNestedManyWithoutEmailInput = {
    create?: XOR<user_email_xrefCreateWithoutEmailInput, user_email_xrefUncheckedCreateWithoutEmailInput> | user_email_xrefCreateWithoutEmailInput[] | user_email_xrefUncheckedCreateWithoutEmailInput[]
    connectOrCreate?: user_email_xrefCreateOrConnectWithoutEmailInput | user_email_xrefCreateOrConnectWithoutEmailInput[]
    createMany?: user_email_xrefCreateManyEmailInputEnvelope
    connect?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
  }

  export type userCreateNestedOneWithoutEmailsInput = {
    create?: XOR<userCreateWithoutEmailsInput, userUncheckedCreateWithoutEmailsInput>
    connectOrCreate?: userCreateOrConnectWithoutEmailsInput
    connect?: userWhereUniqueInput
  }

  export type user_email_xrefUncheckedCreateNestedManyWithoutEmailInput = {
    create?: XOR<user_email_xrefCreateWithoutEmailInput, user_email_xrefUncheckedCreateWithoutEmailInput> | user_email_xrefCreateWithoutEmailInput[] | user_email_xrefUncheckedCreateWithoutEmailInput[]
    connectOrCreate?: user_email_xrefCreateOrConnectWithoutEmailInput | user_email_xrefCreateOrConnectWithoutEmailInput[]
    createMany?: user_email_xrefCreateManyEmailInputEnvelope
    connect?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
  }

  export type email_status_luUpdateOneWithoutEmailNestedInput = {
    create?: XOR<email_status_luCreateWithoutEmailInput, email_status_luUncheckedCreateWithoutEmailInput>
    connectOrCreate?: email_status_luCreateOrConnectWithoutEmailInput
    upsert?: email_status_luUpsertWithoutEmailInput
    disconnect?: email_status_luWhereInput | boolean
    delete?: email_status_luWhereInput | boolean
    connect?: email_status_luWhereUniqueInput
    update?: XOR<XOR<email_status_luUpdateToOneWithWhereWithoutEmailInput, email_status_luUpdateWithoutEmailInput>, email_status_luUncheckedUpdateWithoutEmailInput>
  }

  export type email_type_luUpdateOneWithoutEmailNestedInput = {
    create?: XOR<email_type_luCreateWithoutEmailInput, email_type_luUncheckedCreateWithoutEmailInput>
    connectOrCreate?: email_type_luCreateOrConnectWithoutEmailInput
    upsert?: email_type_luUpsertWithoutEmailInput
    disconnect?: email_type_luWhereInput | boolean
    delete?: email_type_luWhereInput | boolean
    connect?: email_type_luWhereUniqueInput
    update?: XOR<XOR<email_type_luUpdateToOneWithWhereWithoutEmailInput, email_type_luUpdateWithoutEmailInput>, email_type_luUncheckedUpdateWithoutEmailInput>
  }

  export type user_email_xrefUpdateManyWithoutEmailNestedInput = {
    create?: XOR<user_email_xrefCreateWithoutEmailInput, user_email_xrefUncheckedCreateWithoutEmailInput> | user_email_xrefCreateWithoutEmailInput[] | user_email_xrefUncheckedCreateWithoutEmailInput[]
    connectOrCreate?: user_email_xrefCreateOrConnectWithoutEmailInput | user_email_xrefCreateOrConnectWithoutEmailInput[]
    upsert?: user_email_xrefUpsertWithWhereUniqueWithoutEmailInput | user_email_xrefUpsertWithWhereUniqueWithoutEmailInput[]
    createMany?: user_email_xrefCreateManyEmailInputEnvelope
    set?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
    disconnect?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
    delete?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
    connect?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
    update?: user_email_xrefUpdateWithWhereUniqueWithoutEmailInput | user_email_xrefUpdateWithWhereUniqueWithoutEmailInput[]
    updateMany?: user_email_xrefUpdateManyWithWhereWithoutEmailInput | user_email_xrefUpdateManyWithWhereWithoutEmailInput[]
    deleteMany?: user_email_xrefScalarWhereInput | user_email_xrefScalarWhereInput[]
  }

  export type userUpdateOneWithoutEmailsNestedInput = {
    create?: XOR<userCreateWithoutEmailsInput, userUncheckedCreateWithoutEmailsInput>
    connectOrCreate?: userCreateOrConnectWithoutEmailsInput
    upsert?: userUpsertWithoutEmailsInput
    disconnect?: userWhereInput | boolean
    delete?: userWhereInput | boolean
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutEmailsInput, userUpdateWithoutEmailsInput>, userUncheckedUpdateWithoutEmailsInput>
  }

  export type user_email_xrefUncheckedUpdateManyWithoutEmailNestedInput = {
    create?: XOR<user_email_xrefCreateWithoutEmailInput, user_email_xrefUncheckedCreateWithoutEmailInput> | user_email_xrefCreateWithoutEmailInput[] | user_email_xrefUncheckedCreateWithoutEmailInput[]
    connectOrCreate?: user_email_xrefCreateOrConnectWithoutEmailInput | user_email_xrefCreateOrConnectWithoutEmailInput[]
    upsert?: user_email_xrefUpsertWithWhereUniqueWithoutEmailInput | user_email_xrefUpsertWithWhereUniqueWithoutEmailInput[]
    createMany?: user_email_xrefCreateManyEmailInputEnvelope
    set?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
    disconnect?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
    delete?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
    connect?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
    update?: user_email_xrefUpdateWithWhereUniqueWithoutEmailInput | user_email_xrefUpdateWithWhereUniqueWithoutEmailInput[]
    updateMany?: user_email_xrefUpdateManyWithWhereWithoutEmailInput | user_email_xrefUpdateManyWithWhereWithoutEmailInput[]
    deleteMany?: user_email_xrefScalarWhereInput | user_email_xrefScalarWhereInput[]
  }

  export type emailCreateNestedManyWithoutEmail_status_luInput = {
    create?: XOR<emailCreateWithoutEmail_status_luInput, emailUncheckedCreateWithoutEmail_status_luInput> | emailCreateWithoutEmail_status_luInput[] | emailUncheckedCreateWithoutEmail_status_luInput[]
    connectOrCreate?: emailCreateOrConnectWithoutEmail_status_luInput | emailCreateOrConnectWithoutEmail_status_luInput[]
    createMany?: emailCreateManyEmail_status_luInputEnvelope
    connect?: emailWhereUniqueInput | emailWhereUniqueInput[]
  }

  export type user_email_xrefCreateNestedManyWithoutEmail_status_luInput = {
    create?: XOR<user_email_xrefCreateWithoutEmail_status_luInput, user_email_xrefUncheckedCreateWithoutEmail_status_luInput> | user_email_xrefCreateWithoutEmail_status_luInput[] | user_email_xrefUncheckedCreateWithoutEmail_status_luInput[]
    connectOrCreate?: user_email_xrefCreateOrConnectWithoutEmail_status_luInput | user_email_xrefCreateOrConnectWithoutEmail_status_luInput[]
    createMany?: user_email_xrefCreateManyEmail_status_luInputEnvelope
    connect?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
  }

  export type emailUncheckedCreateNestedManyWithoutEmail_status_luInput = {
    create?: XOR<emailCreateWithoutEmail_status_luInput, emailUncheckedCreateWithoutEmail_status_luInput> | emailCreateWithoutEmail_status_luInput[] | emailUncheckedCreateWithoutEmail_status_luInput[]
    connectOrCreate?: emailCreateOrConnectWithoutEmail_status_luInput | emailCreateOrConnectWithoutEmail_status_luInput[]
    createMany?: emailCreateManyEmail_status_luInputEnvelope
    connect?: emailWhereUniqueInput | emailWhereUniqueInput[]
  }

  export type user_email_xrefUncheckedCreateNestedManyWithoutEmail_status_luInput = {
    create?: XOR<user_email_xrefCreateWithoutEmail_status_luInput, user_email_xrefUncheckedCreateWithoutEmail_status_luInput> | user_email_xrefCreateWithoutEmail_status_luInput[] | user_email_xrefUncheckedCreateWithoutEmail_status_luInput[]
    connectOrCreate?: user_email_xrefCreateOrConnectWithoutEmail_status_luInput | user_email_xrefCreateOrConnectWithoutEmail_status_luInput[]
    createMany?: user_email_xrefCreateManyEmail_status_luInputEnvelope
    connect?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
  }

  export type emailUpdateManyWithoutEmail_status_luNestedInput = {
    create?: XOR<emailCreateWithoutEmail_status_luInput, emailUncheckedCreateWithoutEmail_status_luInput> | emailCreateWithoutEmail_status_luInput[] | emailUncheckedCreateWithoutEmail_status_luInput[]
    connectOrCreate?: emailCreateOrConnectWithoutEmail_status_luInput | emailCreateOrConnectWithoutEmail_status_luInput[]
    upsert?: emailUpsertWithWhereUniqueWithoutEmail_status_luInput | emailUpsertWithWhereUniqueWithoutEmail_status_luInput[]
    createMany?: emailCreateManyEmail_status_luInputEnvelope
    set?: emailWhereUniqueInput | emailWhereUniqueInput[]
    disconnect?: emailWhereUniqueInput | emailWhereUniqueInput[]
    delete?: emailWhereUniqueInput | emailWhereUniqueInput[]
    connect?: emailWhereUniqueInput | emailWhereUniqueInput[]
    update?: emailUpdateWithWhereUniqueWithoutEmail_status_luInput | emailUpdateWithWhereUniqueWithoutEmail_status_luInput[]
    updateMany?: emailUpdateManyWithWhereWithoutEmail_status_luInput | emailUpdateManyWithWhereWithoutEmail_status_luInput[]
    deleteMany?: emailScalarWhereInput | emailScalarWhereInput[]
  }

  export type user_email_xrefUpdateManyWithoutEmail_status_luNestedInput = {
    create?: XOR<user_email_xrefCreateWithoutEmail_status_luInput, user_email_xrefUncheckedCreateWithoutEmail_status_luInput> | user_email_xrefCreateWithoutEmail_status_luInput[] | user_email_xrefUncheckedCreateWithoutEmail_status_luInput[]
    connectOrCreate?: user_email_xrefCreateOrConnectWithoutEmail_status_luInput | user_email_xrefCreateOrConnectWithoutEmail_status_luInput[]
    upsert?: user_email_xrefUpsertWithWhereUniqueWithoutEmail_status_luInput | user_email_xrefUpsertWithWhereUniqueWithoutEmail_status_luInput[]
    createMany?: user_email_xrefCreateManyEmail_status_luInputEnvelope
    set?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
    disconnect?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
    delete?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
    connect?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
    update?: user_email_xrefUpdateWithWhereUniqueWithoutEmail_status_luInput | user_email_xrefUpdateWithWhereUniqueWithoutEmail_status_luInput[]
    updateMany?: user_email_xrefUpdateManyWithWhereWithoutEmail_status_luInput | user_email_xrefUpdateManyWithWhereWithoutEmail_status_luInput[]
    deleteMany?: user_email_xrefScalarWhereInput | user_email_xrefScalarWhereInput[]
  }

  export type emailUncheckedUpdateManyWithoutEmail_status_luNestedInput = {
    create?: XOR<emailCreateWithoutEmail_status_luInput, emailUncheckedCreateWithoutEmail_status_luInput> | emailCreateWithoutEmail_status_luInput[] | emailUncheckedCreateWithoutEmail_status_luInput[]
    connectOrCreate?: emailCreateOrConnectWithoutEmail_status_luInput | emailCreateOrConnectWithoutEmail_status_luInput[]
    upsert?: emailUpsertWithWhereUniqueWithoutEmail_status_luInput | emailUpsertWithWhereUniqueWithoutEmail_status_luInput[]
    createMany?: emailCreateManyEmail_status_luInputEnvelope
    set?: emailWhereUniqueInput | emailWhereUniqueInput[]
    disconnect?: emailWhereUniqueInput | emailWhereUniqueInput[]
    delete?: emailWhereUniqueInput | emailWhereUniqueInput[]
    connect?: emailWhereUniqueInput | emailWhereUniqueInput[]
    update?: emailUpdateWithWhereUniqueWithoutEmail_status_luInput | emailUpdateWithWhereUniqueWithoutEmail_status_luInput[]
    updateMany?: emailUpdateManyWithWhereWithoutEmail_status_luInput | emailUpdateManyWithWhereWithoutEmail_status_luInput[]
    deleteMany?: emailScalarWhereInput | emailScalarWhereInput[]
  }

  export type user_email_xrefUncheckedUpdateManyWithoutEmail_status_luNestedInput = {
    create?: XOR<user_email_xrefCreateWithoutEmail_status_luInput, user_email_xrefUncheckedCreateWithoutEmail_status_luInput> | user_email_xrefCreateWithoutEmail_status_luInput[] | user_email_xrefUncheckedCreateWithoutEmail_status_luInput[]
    connectOrCreate?: user_email_xrefCreateOrConnectWithoutEmail_status_luInput | user_email_xrefCreateOrConnectWithoutEmail_status_luInput[]
    upsert?: user_email_xrefUpsertWithWhereUniqueWithoutEmail_status_luInput | user_email_xrefUpsertWithWhereUniqueWithoutEmail_status_luInput[]
    createMany?: user_email_xrefCreateManyEmail_status_luInputEnvelope
    set?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
    disconnect?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
    delete?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
    connect?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
    update?: user_email_xrefUpdateWithWhereUniqueWithoutEmail_status_luInput | user_email_xrefUpdateWithWhereUniqueWithoutEmail_status_luInput[]
    updateMany?: user_email_xrefUpdateManyWithWhereWithoutEmail_status_luInput | user_email_xrefUpdateManyWithWhereWithoutEmail_status_luInput[]
    deleteMany?: user_email_xrefScalarWhereInput | user_email_xrefScalarWhereInput[]
  }

  export type emailCreateNestedManyWithoutEmail_type_luInput = {
    create?: XOR<emailCreateWithoutEmail_type_luInput, emailUncheckedCreateWithoutEmail_type_luInput> | emailCreateWithoutEmail_type_luInput[] | emailUncheckedCreateWithoutEmail_type_luInput[]
    connectOrCreate?: emailCreateOrConnectWithoutEmail_type_luInput | emailCreateOrConnectWithoutEmail_type_luInput[]
    createMany?: emailCreateManyEmail_type_luInputEnvelope
    connect?: emailWhereUniqueInput | emailWhereUniqueInput[]
  }

  export type emailUncheckedCreateNestedManyWithoutEmail_type_luInput = {
    create?: XOR<emailCreateWithoutEmail_type_luInput, emailUncheckedCreateWithoutEmail_type_luInput> | emailCreateWithoutEmail_type_luInput[] | emailUncheckedCreateWithoutEmail_type_luInput[]
    connectOrCreate?: emailCreateOrConnectWithoutEmail_type_luInput | emailCreateOrConnectWithoutEmail_type_luInput[]
    createMany?: emailCreateManyEmail_type_luInputEnvelope
    connect?: emailWhereUniqueInput | emailWhereUniqueInput[]
  }

  export type emailUpdateManyWithoutEmail_type_luNestedInput = {
    create?: XOR<emailCreateWithoutEmail_type_luInput, emailUncheckedCreateWithoutEmail_type_luInput> | emailCreateWithoutEmail_type_luInput[] | emailUncheckedCreateWithoutEmail_type_luInput[]
    connectOrCreate?: emailCreateOrConnectWithoutEmail_type_luInput | emailCreateOrConnectWithoutEmail_type_luInput[]
    upsert?: emailUpsertWithWhereUniqueWithoutEmail_type_luInput | emailUpsertWithWhereUniqueWithoutEmail_type_luInput[]
    createMany?: emailCreateManyEmail_type_luInputEnvelope
    set?: emailWhereUniqueInput | emailWhereUniqueInput[]
    disconnect?: emailWhereUniqueInput | emailWhereUniqueInput[]
    delete?: emailWhereUniqueInput | emailWhereUniqueInput[]
    connect?: emailWhereUniqueInput | emailWhereUniqueInput[]
    update?: emailUpdateWithWhereUniqueWithoutEmail_type_luInput | emailUpdateWithWhereUniqueWithoutEmail_type_luInput[]
    updateMany?: emailUpdateManyWithWhereWithoutEmail_type_luInput | emailUpdateManyWithWhereWithoutEmail_type_luInput[]
    deleteMany?: emailScalarWhereInput | emailScalarWhereInput[]
  }

  export type emailUncheckedUpdateManyWithoutEmail_type_luNestedInput = {
    create?: XOR<emailCreateWithoutEmail_type_luInput, emailUncheckedCreateWithoutEmail_type_luInput> | emailCreateWithoutEmail_type_luInput[] | emailUncheckedCreateWithoutEmail_type_luInput[]
    connectOrCreate?: emailCreateOrConnectWithoutEmail_type_luInput | emailCreateOrConnectWithoutEmail_type_luInput[]
    upsert?: emailUpsertWithWhereUniqueWithoutEmail_type_luInput | emailUpsertWithWhereUniqueWithoutEmail_type_luInput[]
    createMany?: emailCreateManyEmail_type_luInputEnvelope
    set?: emailWhereUniqueInput | emailWhereUniqueInput[]
    disconnect?: emailWhereUniqueInput | emailWhereUniqueInput[]
    delete?: emailWhereUniqueInput | emailWhereUniqueInput[]
    connect?: emailWhereUniqueInput | emailWhereUniqueInput[]
    update?: emailUpdateWithWhereUniqueWithoutEmail_type_luInput | emailUpdateWithWhereUniqueWithoutEmail_type_luInput[]
    updateMany?: emailUpdateManyWithWhereWithoutEmail_type_luInput | emailUpdateManyWithWhereWithoutEmail_type_luInput[]
    deleteMany?: emailScalarWhereInput | emailScalarWhereInput[]
  }

  export type user_group_xrefCreateNestedManyWithoutSecurity_groupsInput = {
    create?: XOR<user_group_xrefCreateWithoutSecurity_groupsInput, user_group_xrefUncheckedCreateWithoutSecurity_groupsInput> | user_group_xrefCreateWithoutSecurity_groupsInput[] | user_group_xrefUncheckedCreateWithoutSecurity_groupsInput[]
    connectOrCreate?: user_group_xrefCreateOrConnectWithoutSecurity_groupsInput | user_group_xrefCreateOrConnectWithoutSecurity_groupsInput[]
    createMany?: user_group_xrefCreateManySecurity_groupsInputEnvelope
    connect?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
  }

  export type user_group_xrefUncheckedCreateNestedManyWithoutSecurity_groupsInput = {
    create?: XOR<user_group_xrefCreateWithoutSecurity_groupsInput, user_group_xrefUncheckedCreateWithoutSecurity_groupsInput> | user_group_xrefCreateWithoutSecurity_groupsInput[] | user_group_xrefUncheckedCreateWithoutSecurity_groupsInput[]
    connectOrCreate?: user_group_xrefCreateOrConnectWithoutSecurity_groupsInput | user_group_xrefCreateOrConnectWithoutSecurity_groupsInput[]
    createMany?: user_group_xrefCreateManySecurity_groupsInputEnvelope
    connect?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
  }

  export type user_group_xrefUpdateManyWithoutSecurity_groupsNestedInput = {
    create?: XOR<user_group_xrefCreateWithoutSecurity_groupsInput, user_group_xrefUncheckedCreateWithoutSecurity_groupsInput> | user_group_xrefCreateWithoutSecurity_groupsInput[] | user_group_xrefUncheckedCreateWithoutSecurity_groupsInput[]
    connectOrCreate?: user_group_xrefCreateOrConnectWithoutSecurity_groupsInput | user_group_xrefCreateOrConnectWithoutSecurity_groupsInput[]
    upsert?: user_group_xrefUpsertWithWhereUniqueWithoutSecurity_groupsInput | user_group_xrefUpsertWithWhereUniqueWithoutSecurity_groupsInput[]
    createMany?: user_group_xrefCreateManySecurity_groupsInputEnvelope
    set?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
    disconnect?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
    delete?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
    connect?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
    update?: user_group_xrefUpdateWithWhereUniqueWithoutSecurity_groupsInput | user_group_xrefUpdateWithWhereUniqueWithoutSecurity_groupsInput[]
    updateMany?: user_group_xrefUpdateManyWithWhereWithoutSecurity_groupsInput | user_group_xrefUpdateManyWithWhereWithoutSecurity_groupsInput[]
    deleteMany?: user_group_xrefScalarWhereInput | user_group_xrefScalarWhereInput[]
  }

  export type user_group_xrefUncheckedUpdateManyWithoutSecurity_groupsNestedInput = {
    create?: XOR<user_group_xrefCreateWithoutSecurity_groupsInput, user_group_xrefUncheckedCreateWithoutSecurity_groupsInput> | user_group_xrefCreateWithoutSecurity_groupsInput[] | user_group_xrefUncheckedCreateWithoutSecurity_groupsInput[]
    connectOrCreate?: user_group_xrefCreateOrConnectWithoutSecurity_groupsInput | user_group_xrefCreateOrConnectWithoutSecurity_groupsInput[]
    upsert?: user_group_xrefUpsertWithWhereUniqueWithoutSecurity_groupsInput | user_group_xrefUpsertWithWhereUniqueWithoutSecurity_groupsInput[]
    createMany?: user_group_xrefCreateManySecurity_groupsInputEnvelope
    set?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
    disconnect?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
    delete?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
    connect?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
    update?: user_group_xrefUpdateWithWhereUniqueWithoutSecurity_groupsInput | user_group_xrefUpdateWithWhereUniqueWithoutSecurity_groupsInput[]
    updateMany?: user_group_xrefUpdateManyWithWhereWithoutSecurity_groupsInput | user_group_xrefUpdateManyWithWhereWithoutSecurity_groupsInput[]
    deleteMany?: user_group_xrefScalarWhereInput | user_group_xrefScalarWhereInput[]
  }

  export type user_group_xrefCreateNestedManyWithoutSecurity_status_luInput = {
    create?: XOR<user_group_xrefCreateWithoutSecurity_status_luInput, user_group_xrefUncheckedCreateWithoutSecurity_status_luInput> | user_group_xrefCreateWithoutSecurity_status_luInput[] | user_group_xrefUncheckedCreateWithoutSecurity_status_luInput[]
    connectOrCreate?: user_group_xrefCreateOrConnectWithoutSecurity_status_luInput | user_group_xrefCreateOrConnectWithoutSecurity_status_luInput[]
    createMany?: user_group_xrefCreateManySecurity_status_luInputEnvelope
    connect?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
  }

  export type user_group_xrefUncheckedCreateNestedManyWithoutSecurity_status_luInput = {
    create?: XOR<user_group_xrefCreateWithoutSecurity_status_luInput, user_group_xrefUncheckedCreateWithoutSecurity_status_luInput> | user_group_xrefCreateWithoutSecurity_status_luInput[] | user_group_xrefUncheckedCreateWithoutSecurity_status_luInput[]
    connectOrCreate?: user_group_xrefCreateOrConnectWithoutSecurity_status_luInput | user_group_xrefCreateOrConnectWithoutSecurity_status_luInput[]
    createMany?: user_group_xrefCreateManySecurity_status_luInputEnvelope
    connect?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
  }

  export type user_group_xrefUpdateManyWithoutSecurity_status_luNestedInput = {
    create?: XOR<user_group_xrefCreateWithoutSecurity_status_luInput, user_group_xrefUncheckedCreateWithoutSecurity_status_luInput> | user_group_xrefCreateWithoutSecurity_status_luInput[] | user_group_xrefUncheckedCreateWithoutSecurity_status_luInput[]
    connectOrCreate?: user_group_xrefCreateOrConnectWithoutSecurity_status_luInput | user_group_xrefCreateOrConnectWithoutSecurity_status_luInput[]
    upsert?: user_group_xrefUpsertWithWhereUniqueWithoutSecurity_status_luInput | user_group_xrefUpsertWithWhereUniqueWithoutSecurity_status_luInput[]
    createMany?: user_group_xrefCreateManySecurity_status_luInputEnvelope
    set?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
    disconnect?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
    delete?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
    connect?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
    update?: user_group_xrefUpdateWithWhereUniqueWithoutSecurity_status_luInput | user_group_xrefUpdateWithWhereUniqueWithoutSecurity_status_luInput[]
    updateMany?: user_group_xrefUpdateManyWithWhereWithoutSecurity_status_luInput | user_group_xrefUpdateManyWithWhereWithoutSecurity_status_luInput[]
    deleteMany?: user_group_xrefScalarWhereInput | user_group_xrefScalarWhereInput[]
  }

  export type user_group_xrefUncheckedUpdateManyWithoutSecurity_status_luNestedInput = {
    create?: XOR<user_group_xrefCreateWithoutSecurity_status_luInput, user_group_xrefUncheckedCreateWithoutSecurity_status_luInput> | user_group_xrefCreateWithoutSecurity_status_luInput[] | user_group_xrefUncheckedCreateWithoutSecurity_status_luInput[]
    connectOrCreate?: user_group_xrefCreateOrConnectWithoutSecurity_status_luInput | user_group_xrefCreateOrConnectWithoutSecurity_status_luInput[]
    upsert?: user_group_xrefUpsertWithWhereUniqueWithoutSecurity_status_luInput | user_group_xrefUpsertWithWhereUniqueWithoutSecurity_status_luInput[]
    createMany?: user_group_xrefCreateManySecurity_status_luInputEnvelope
    set?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
    disconnect?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
    delete?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
    connect?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
    update?: user_group_xrefUpdateWithWhereUniqueWithoutSecurity_status_luInput | user_group_xrefUpdateWithWhereUniqueWithoutSecurity_status_luInput[]
    updateMany?: user_group_xrefUpdateManyWithWhereWithoutSecurity_status_luInput | user_group_xrefUpdateManyWithWhereWithoutSecurity_status_luInput[]
    deleteMany?: user_group_xrefScalarWhereInput | user_group_xrefScalarWhereInput[]
  }

  export type user_group_xrefCreateNestedManyWithoutSecurity_userInput = {
    create?: XOR<user_group_xrefCreateWithoutSecurity_userInput, user_group_xrefUncheckedCreateWithoutSecurity_userInput> | user_group_xrefCreateWithoutSecurity_userInput[] | user_group_xrefUncheckedCreateWithoutSecurity_userInput[]
    connectOrCreate?: user_group_xrefCreateOrConnectWithoutSecurity_userInput | user_group_xrefCreateOrConnectWithoutSecurity_userInput[]
    createMany?: user_group_xrefCreateManySecurity_userInputEnvelope
    connect?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
  }

  export type user_group_xrefUncheckedCreateNestedManyWithoutSecurity_userInput = {
    create?: XOR<user_group_xrefCreateWithoutSecurity_userInput, user_group_xrefUncheckedCreateWithoutSecurity_userInput> | user_group_xrefCreateWithoutSecurity_userInput[] | user_group_xrefUncheckedCreateWithoutSecurity_userInput[]
    connectOrCreate?: user_group_xrefCreateOrConnectWithoutSecurity_userInput | user_group_xrefCreateOrConnectWithoutSecurity_userInput[]
    createMany?: user_group_xrefCreateManySecurity_userInputEnvelope
    connect?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
  }

  export type user_group_xrefUpdateManyWithoutSecurity_userNestedInput = {
    create?: XOR<user_group_xrefCreateWithoutSecurity_userInput, user_group_xrefUncheckedCreateWithoutSecurity_userInput> | user_group_xrefCreateWithoutSecurity_userInput[] | user_group_xrefUncheckedCreateWithoutSecurity_userInput[]
    connectOrCreate?: user_group_xrefCreateOrConnectWithoutSecurity_userInput | user_group_xrefCreateOrConnectWithoutSecurity_userInput[]
    upsert?: user_group_xrefUpsertWithWhereUniqueWithoutSecurity_userInput | user_group_xrefUpsertWithWhereUniqueWithoutSecurity_userInput[]
    createMany?: user_group_xrefCreateManySecurity_userInputEnvelope
    set?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
    disconnect?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
    delete?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
    connect?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
    update?: user_group_xrefUpdateWithWhereUniqueWithoutSecurity_userInput | user_group_xrefUpdateWithWhereUniqueWithoutSecurity_userInput[]
    updateMany?: user_group_xrefUpdateManyWithWhereWithoutSecurity_userInput | user_group_xrefUpdateManyWithWhereWithoutSecurity_userInput[]
    deleteMany?: user_group_xrefScalarWhereInput | user_group_xrefScalarWhereInput[]
  }

  export type user_group_xrefUncheckedUpdateManyWithoutSecurity_userNestedInput = {
    create?: XOR<user_group_xrefCreateWithoutSecurity_userInput, user_group_xrefUncheckedCreateWithoutSecurity_userInput> | user_group_xrefCreateWithoutSecurity_userInput[] | user_group_xrefUncheckedCreateWithoutSecurity_userInput[]
    connectOrCreate?: user_group_xrefCreateOrConnectWithoutSecurity_userInput | user_group_xrefCreateOrConnectWithoutSecurity_userInput[]
    upsert?: user_group_xrefUpsertWithWhereUniqueWithoutSecurity_userInput | user_group_xrefUpsertWithWhereUniqueWithoutSecurity_userInput[]
    createMany?: user_group_xrefCreateManySecurity_userInputEnvelope
    set?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
    disconnect?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
    delete?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
    connect?: user_group_xrefWhereUniqueInput | user_group_xrefWhereUniqueInput[]
    update?: user_group_xrefUpdateWithWhereUniqueWithoutSecurity_userInput | user_group_xrefUpdateWithWhereUniqueWithoutSecurity_userInput[]
    updateMany?: user_group_xrefUpdateManyWithWhereWithoutSecurity_userInput | user_group_xrefUpdateManyWithWhereWithoutSecurity_userInput[]
    deleteMany?: user_group_xrefScalarWhereInput | user_group_xrefScalarWhereInput[]
  }

  export type user_social_loginCreateNestedManyWithoutSocial_login_providerInput = {
    create?: XOR<user_social_loginCreateWithoutSocial_login_providerInput, user_social_loginUncheckedCreateWithoutSocial_login_providerInput> | user_social_loginCreateWithoutSocial_login_providerInput[] | user_social_loginUncheckedCreateWithoutSocial_login_providerInput[]
    connectOrCreate?: user_social_loginCreateOrConnectWithoutSocial_login_providerInput | user_social_loginCreateOrConnectWithoutSocial_login_providerInput[]
    createMany?: user_social_loginCreateManySocial_login_providerInputEnvelope
    connect?: user_social_loginWhereUniqueInput | user_social_loginWhereUniqueInput[]
  }

  export type user_social_loginUncheckedCreateNestedManyWithoutSocial_login_providerInput = {
    create?: XOR<user_social_loginCreateWithoutSocial_login_providerInput, user_social_loginUncheckedCreateWithoutSocial_login_providerInput> | user_social_loginCreateWithoutSocial_login_providerInput[] | user_social_loginUncheckedCreateWithoutSocial_login_providerInput[]
    connectOrCreate?: user_social_loginCreateOrConnectWithoutSocial_login_providerInput | user_social_loginCreateOrConnectWithoutSocial_login_providerInput[]
    createMany?: user_social_loginCreateManySocial_login_providerInputEnvelope
    connect?: user_social_loginWhereUniqueInput | user_social_loginWhereUniqueInput[]
  }

  export type user_social_loginUpdateManyWithoutSocial_login_providerNestedInput = {
    create?: XOR<user_social_loginCreateWithoutSocial_login_providerInput, user_social_loginUncheckedCreateWithoutSocial_login_providerInput> | user_social_loginCreateWithoutSocial_login_providerInput[] | user_social_loginUncheckedCreateWithoutSocial_login_providerInput[]
    connectOrCreate?: user_social_loginCreateOrConnectWithoutSocial_login_providerInput | user_social_loginCreateOrConnectWithoutSocial_login_providerInput[]
    upsert?: user_social_loginUpsertWithWhereUniqueWithoutSocial_login_providerInput | user_social_loginUpsertWithWhereUniqueWithoutSocial_login_providerInput[]
    createMany?: user_social_loginCreateManySocial_login_providerInputEnvelope
    set?: user_social_loginWhereUniqueInput | user_social_loginWhereUniqueInput[]
    disconnect?: user_social_loginWhereUniqueInput | user_social_loginWhereUniqueInput[]
    delete?: user_social_loginWhereUniqueInput | user_social_loginWhereUniqueInput[]
    connect?: user_social_loginWhereUniqueInput | user_social_loginWhereUniqueInput[]
    update?: user_social_loginUpdateWithWhereUniqueWithoutSocial_login_providerInput | user_social_loginUpdateWithWhereUniqueWithoutSocial_login_providerInput[]
    updateMany?: user_social_loginUpdateManyWithWhereWithoutSocial_login_providerInput | user_social_loginUpdateManyWithWhereWithoutSocial_login_providerInput[]
    deleteMany?: user_social_loginScalarWhereInput | user_social_loginScalarWhereInput[]
  }

  export type user_social_loginUncheckedUpdateManyWithoutSocial_login_providerNestedInput = {
    create?: XOR<user_social_loginCreateWithoutSocial_login_providerInput, user_social_loginUncheckedCreateWithoutSocial_login_providerInput> | user_social_loginCreateWithoutSocial_login_providerInput[] | user_social_loginUncheckedCreateWithoutSocial_login_providerInput[]
    connectOrCreate?: user_social_loginCreateOrConnectWithoutSocial_login_providerInput | user_social_loginCreateOrConnectWithoutSocial_login_providerInput[]
    upsert?: user_social_loginUpsertWithWhereUniqueWithoutSocial_login_providerInput | user_social_loginUpsertWithWhereUniqueWithoutSocial_login_providerInput[]
    createMany?: user_social_loginCreateManySocial_login_providerInputEnvelope
    set?: user_social_loginWhereUniqueInput | user_social_loginWhereUniqueInput[]
    disconnect?: user_social_loginWhereUniqueInput | user_social_loginWhereUniqueInput[]
    delete?: user_social_loginWhereUniqueInput | user_social_loginWhereUniqueInput[]
    connect?: user_social_loginWhereUniqueInput | user_social_loginWhereUniqueInput[]
    update?: user_social_loginUpdateWithWhereUniqueWithoutSocial_login_providerInput | user_social_loginUpdateWithWhereUniqueWithoutSocial_login_providerInput[]
    updateMany?: user_social_loginUpdateManyWithWhereWithoutSocial_login_providerInput | user_social_loginUpdateManyWithWhereWithoutSocial_login_providerInput[]
    deleteMany?: user_social_loginScalarWhereInput | user_social_loginScalarWhereInput[]
  }

  export type user_sso_loginCreateNestedManyWithoutSso_login_providerInput = {
    create?: XOR<user_sso_loginCreateWithoutSso_login_providerInput, user_sso_loginUncheckedCreateWithoutSso_login_providerInput> | user_sso_loginCreateWithoutSso_login_providerInput[] | user_sso_loginUncheckedCreateWithoutSso_login_providerInput[]
    connectOrCreate?: user_sso_loginCreateOrConnectWithoutSso_login_providerInput | user_sso_loginCreateOrConnectWithoutSso_login_providerInput[]
    createMany?: user_sso_loginCreateManySso_login_providerInputEnvelope
    connect?: user_sso_loginWhereUniqueInput | user_sso_loginWhereUniqueInput[]
  }

  export type user_sso_loginUncheckedCreateNestedManyWithoutSso_login_providerInput = {
    create?: XOR<user_sso_loginCreateWithoutSso_login_providerInput, user_sso_loginUncheckedCreateWithoutSso_login_providerInput> | user_sso_loginCreateWithoutSso_login_providerInput[] | user_sso_loginUncheckedCreateWithoutSso_login_providerInput[]
    connectOrCreate?: user_sso_loginCreateOrConnectWithoutSso_login_providerInput | user_sso_loginCreateOrConnectWithoutSso_login_providerInput[]
    createMany?: user_sso_loginCreateManySso_login_providerInputEnvelope
    connect?: user_sso_loginWhereUniqueInput | user_sso_loginWhereUniqueInput[]
  }

  export type user_sso_loginUpdateManyWithoutSso_login_providerNestedInput = {
    create?: XOR<user_sso_loginCreateWithoutSso_login_providerInput, user_sso_loginUncheckedCreateWithoutSso_login_providerInput> | user_sso_loginCreateWithoutSso_login_providerInput[] | user_sso_loginUncheckedCreateWithoutSso_login_providerInput[]
    connectOrCreate?: user_sso_loginCreateOrConnectWithoutSso_login_providerInput | user_sso_loginCreateOrConnectWithoutSso_login_providerInput[]
    upsert?: user_sso_loginUpsertWithWhereUniqueWithoutSso_login_providerInput | user_sso_loginUpsertWithWhereUniqueWithoutSso_login_providerInput[]
    createMany?: user_sso_loginCreateManySso_login_providerInputEnvelope
    set?: user_sso_loginWhereUniqueInput | user_sso_loginWhereUniqueInput[]
    disconnect?: user_sso_loginWhereUniqueInput | user_sso_loginWhereUniqueInput[]
    delete?: user_sso_loginWhereUniqueInput | user_sso_loginWhereUniqueInput[]
    connect?: user_sso_loginWhereUniqueInput | user_sso_loginWhereUniqueInput[]
    update?: user_sso_loginUpdateWithWhereUniqueWithoutSso_login_providerInput | user_sso_loginUpdateWithWhereUniqueWithoutSso_login_providerInput[]
    updateMany?: user_sso_loginUpdateManyWithWhereWithoutSso_login_providerInput | user_sso_loginUpdateManyWithWhereWithoutSso_login_providerInput[]
    deleteMany?: user_sso_loginScalarWhereInput | user_sso_loginScalarWhereInput[]
  }

  export type user_sso_loginUncheckedUpdateManyWithoutSso_login_providerNestedInput = {
    create?: XOR<user_sso_loginCreateWithoutSso_login_providerInput, user_sso_loginUncheckedCreateWithoutSso_login_providerInput> | user_sso_loginCreateWithoutSso_login_providerInput[] | user_sso_loginUncheckedCreateWithoutSso_login_providerInput[]
    connectOrCreate?: user_sso_loginCreateOrConnectWithoutSso_login_providerInput | user_sso_loginCreateOrConnectWithoutSso_login_providerInput[]
    upsert?: user_sso_loginUpsertWithWhereUniqueWithoutSso_login_providerInput | user_sso_loginUpsertWithWhereUniqueWithoutSso_login_providerInput[]
    createMany?: user_sso_loginCreateManySso_login_providerInputEnvelope
    set?: user_sso_loginWhereUniqueInput | user_sso_loginWhereUniqueInput[]
    disconnect?: user_sso_loginWhereUniqueInput | user_sso_loginWhereUniqueInput[]
    delete?: user_sso_loginWhereUniqueInput | user_sso_loginWhereUniqueInput[]
    connect?: user_sso_loginWhereUniqueInput | user_sso_loginWhereUniqueInput[]
    update?: user_sso_loginUpdateWithWhereUniqueWithoutSso_login_providerInput | user_sso_loginUpdateWithWhereUniqueWithoutSso_login_providerInput[]
    updateMany?: user_sso_loginUpdateManyWithWhereWithoutSso_login_providerInput | user_sso_loginUpdateManyWithWhereWithoutSso_login_providerInput[]
    deleteMany?: user_sso_loginScalarWhereInput | user_sso_loginScalarWhereInput[]
  }

  export type dice_connectionCreateNestedOneWithoutUserInput = {
    create?: XOR<dice_connectionCreateWithoutUserInput, dice_connectionUncheckedCreateWithoutUserInput>
    connectOrCreate?: dice_connectionCreateOrConnectWithoutUserInput
    connect?: dice_connectionWhereUniqueInput
  }

  export type user_2faCreateNestedOneWithoutUserInput = {
    create?: XOR<user_2faCreateWithoutUserInput, user_2faUncheckedCreateWithoutUserInput>
    connectOrCreate?: user_2faCreateOrConnectWithoutUserInput
    connect?: user_2faWhereUniqueInput
  }

  export type user_achievementCreateNestedManyWithoutUserInput = {
    create?: XOR<user_achievementCreateWithoutUserInput, user_achievementUncheckedCreateWithoutUserInput> | user_achievementCreateWithoutUserInput[] | user_achievementUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_achievementCreateOrConnectWithoutUserInput | user_achievementCreateOrConnectWithoutUserInput[]
    createMany?: user_achievementCreateManyUserInputEnvelope
    connect?: user_achievementWhereUniqueInput | user_achievementWhereUniqueInput[]
  }

  export type user_otp_emailCreateNestedManyWithoutUserInput = {
    create?: XOR<user_otp_emailCreateWithoutUserInput, user_otp_emailUncheckedCreateWithoutUserInput> | user_otp_emailCreateWithoutUserInput[] | user_otp_emailUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_otp_emailCreateOrConnectWithoutUserInput | user_otp_emailCreateOrConnectWithoutUserInput[]
    createMany?: user_otp_emailCreateManyUserInputEnvelope
    connect?: user_otp_emailWhereUniqueInput | user_otp_emailWhereUniqueInput[]
  }

  export type user_social_loginCreateNestedManyWithoutUserInput = {
    create?: XOR<user_social_loginCreateWithoutUserInput, user_social_loginUncheckedCreateWithoutUserInput> | user_social_loginCreateWithoutUserInput[] | user_social_loginUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_social_loginCreateOrConnectWithoutUserInput | user_social_loginCreateOrConnectWithoutUserInput[]
    createMany?: user_social_loginCreateManyUserInputEnvelope
    connect?: user_social_loginWhereUniqueInput | user_social_loginWhereUniqueInput[]
  }

  export type user_sso_loginCreateNestedManyWithoutUserInput = {
    create?: XOR<user_sso_loginCreateWithoutUserInput, user_sso_loginUncheckedCreateWithoutUserInput> | user_sso_loginCreateWithoutUserInput[] | user_sso_loginUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_sso_loginCreateOrConnectWithoutUserInput | user_sso_loginCreateOrConnectWithoutUserInput[]
    createMany?: user_sso_loginCreateManyUserInputEnvelope
    connect?: user_sso_loginWhereUniqueInput | user_sso_loginWhereUniqueInput[]
  }

  export type user_statusCreateNestedManyWithoutUserInput = {
    create?: XOR<user_statusCreateWithoutUserInput, user_statusUncheckedCreateWithoutUserInput> | user_statusCreateWithoutUserInput[] | user_statusUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_statusCreateOrConnectWithoutUserInput | user_statusCreateOrConnectWithoutUserInput[]
    createMany?: user_statusCreateManyUserInputEnvelope
    connect?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
  }

  export type user_email_xrefCreateNestedManyWithoutUserInput = {
    create?: XOR<user_email_xrefCreateWithoutUserInput, user_email_xrefUncheckedCreateWithoutUserInput> | user_email_xrefCreateWithoutUserInput[] | user_email_xrefUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_email_xrefCreateOrConnectWithoutUserInput | user_email_xrefCreateOrConnectWithoutUserInput[]
    createMany?: user_email_xrefCreateManyUserInputEnvelope
    connect?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
  }

  export type emailCreateNestedManyWithoutUserInput = {
    create?: XOR<emailCreateWithoutUserInput, emailUncheckedCreateWithoutUserInput> | emailCreateWithoutUserInput[] | emailUncheckedCreateWithoutUserInput[]
    connectOrCreate?: emailCreateOrConnectWithoutUserInput | emailCreateOrConnectWithoutUserInput[]
    createMany?: emailCreateManyUserInputEnvelope
    connect?: emailWhereUniqueInput | emailWhereUniqueInput[]
  }

  export type dice_connectionUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<dice_connectionCreateWithoutUserInput, dice_connectionUncheckedCreateWithoutUserInput>
    connectOrCreate?: dice_connectionCreateOrConnectWithoutUserInput
    connect?: dice_connectionWhereUniqueInput
  }

  export type user_2faUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<user_2faCreateWithoutUserInput, user_2faUncheckedCreateWithoutUserInput>
    connectOrCreate?: user_2faCreateOrConnectWithoutUserInput
    connect?: user_2faWhereUniqueInput
  }

  export type user_achievementUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<user_achievementCreateWithoutUserInput, user_achievementUncheckedCreateWithoutUserInput> | user_achievementCreateWithoutUserInput[] | user_achievementUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_achievementCreateOrConnectWithoutUserInput | user_achievementCreateOrConnectWithoutUserInput[]
    createMany?: user_achievementCreateManyUserInputEnvelope
    connect?: user_achievementWhereUniqueInput | user_achievementWhereUniqueInput[]
  }

  export type user_otp_emailUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<user_otp_emailCreateWithoutUserInput, user_otp_emailUncheckedCreateWithoutUserInput> | user_otp_emailCreateWithoutUserInput[] | user_otp_emailUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_otp_emailCreateOrConnectWithoutUserInput | user_otp_emailCreateOrConnectWithoutUserInput[]
    createMany?: user_otp_emailCreateManyUserInputEnvelope
    connect?: user_otp_emailWhereUniqueInput | user_otp_emailWhereUniqueInput[]
  }

  export type user_social_loginUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<user_social_loginCreateWithoutUserInput, user_social_loginUncheckedCreateWithoutUserInput> | user_social_loginCreateWithoutUserInput[] | user_social_loginUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_social_loginCreateOrConnectWithoutUserInput | user_social_loginCreateOrConnectWithoutUserInput[]
    createMany?: user_social_loginCreateManyUserInputEnvelope
    connect?: user_social_loginWhereUniqueInput | user_social_loginWhereUniqueInput[]
  }

  export type user_sso_loginUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<user_sso_loginCreateWithoutUserInput, user_sso_loginUncheckedCreateWithoutUserInput> | user_sso_loginCreateWithoutUserInput[] | user_sso_loginUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_sso_loginCreateOrConnectWithoutUserInput | user_sso_loginCreateOrConnectWithoutUserInput[]
    createMany?: user_sso_loginCreateManyUserInputEnvelope
    connect?: user_sso_loginWhereUniqueInput | user_sso_loginWhereUniqueInput[]
  }

  export type user_statusUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<user_statusCreateWithoutUserInput, user_statusUncheckedCreateWithoutUserInput> | user_statusCreateWithoutUserInput[] | user_statusUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_statusCreateOrConnectWithoutUserInput | user_statusCreateOrConnectWithoutUserInput[]
    createMany?: user_statusCreateManyUserInputEnvelope
    connect?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
  }

  export type user_email_xrefUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<user_email_xrefCreateWithoutUserInput, user_email_xrefUncheckedCreateWithoutUserInput> | user_email_xrefCreateWithoutUserInput[] | user_email_xrefUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_email_xrefCreateOrConnectWithoutUserInput | user_email_xrefCreateOrConnectWithoutUserInput[]
    createMany?: user_email_xrefCreateManyUserInputEnvelope
    connect?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
  }

  export type emailUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<emailCreateWithoutUserInput, emailUncheckedCreateWithoutUserInput> | emailCreateWithoutUserInput[] | emailUncheckedCreateWithoutUserInput[]
    connectOrCreate?: emailCreateOrConnectWithoutUserInput | emailCreateOrConnectWithoutUserInput[]
    createMany?: emailCreateManyUserInputEnvelope
    connect?: emailWhereUniqueInput | emailWhereUniqueInput[]
  }

  export type dice_connectionUpdateOneWithoutUserNestedInput = {
    create?: XOR<dice_connectionCreateWithoutUserInput, dice_connectionUncheckedCreateWithoutUserInput>
    connectOrCreate?: dice_connectionCreateOrConnectWithoutUserInput
    upsert?: dice_connectionUpsertWithoutUserInput
    disconnect?: dice_connectionWhereInput | boolean
    delete?: dice_connectionWhereInput | boolean
    connect?: dice_connectionWhereUniqueInput
    update?: XOR<XOR<dice_connectionUpdateToOneWithWhereWithoutUserInput, dice_connectionUpdateWithoutUserInput>, dice_connectionUncheckedUpdateWithoutUserInput>
  }

  export type user_2faUpdateOneWithoutUserNestedInput = {
    create?: XOR<user_2faCreateWithoutUserInput, user_2faUncheckedCreateWithoutUserInput>
    connectOrCreate?: user_2faCreateOrConnectWithoutUserInput
    upsert?: user_2faUpsertWithoutUserInput
    disconnect?: user_2faWhereInput | boolean
    delete?: user_2faWhereInput | boolean
    connect?: user_2faWhereUniqueInput
    update?: XOR<XOR<user_2faUpdateToOneWithWhereWithoutUserInput, user_2faUpdateWithoutUserInput>, user_2faUncheckedUpdateWithoutUserInput>
  }

  export type user_achievementUpdateManyWithoutUserNestedInput = {
    create?: XOR<user_achievementCreateWithoutUserInput, user_achievementUncheckedCreateWithoutUserInput> | user_achievementCreateWithoutUserInput[] | user_achievementUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_achievementCreateOrConnectWithoutUserInput | user_achievementCreateOrConnectWithoutUserInput[]
    upsert?: user_achievementUpsertWithWhereUniqueWithoutUserInput | user_achievementUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: user_achievementCreateManyUserInputEnvelope
    set?: user_achievementWhereUniqueInput | user_achievementWhereUniqueInput[]
    disconnect?: user_achievementWhereUniqueInput | user_achievementWhereUniqueInput[]
    delete?: user_achievementWhereUniqueInput | user_achievementWhereUniqueInput[]
    connect?: user_achievementWhereUniqueInput | user_achievementWhereUniqueInput[]
    update?: user_achievementUpdateWithWhereUniqueWithoutUserInput | user_achievementUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: user_achievementUpdateManyWithWhereWithoutUserInput | user_achievementUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: user_achievementScalarWhereInput | user_achievementScalarWhereInput[]
  }

  export type user_otp_emailUpdateManyWithoutUserNestedInput = {
    create?: XOR<user_otp_emailCreateWithoutUserInput, user_otp_emailUncheckedCreateWithoutUserInput> | user_otp_emailCreateWithoutUserInput[] | user_otp_emailUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_otp_emailCreateOrConnectWithoutUserInput | user_otp_emailCreateOrConnectWithoutUserInput[]
    upsert?: user_otp_emailUpsertWithWhereUniqueWithoutUserInput | user_otp_emailUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: user_otp_emailCreateManyUserInputEnvelope
    set?: user_otp_emailWhereUniqueInput | user_otp_emailWhereUniqueInput[]
    disconnect?: user_otp_emailWhereUniqueInput | user_otp_emailWhereUniqueInput[]
    delete?: user_otp_emailWhereUniqueInput | user_otp_emailWhereUniqueInput[]
    connect?: user_otp_emailWhereUniqueInput | user_otp_emailWhereUniqueInput[]
    update?: user_otp_emailUpdateWithWhereUniqueWithoutUserInput | user_otp_emailUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: user_otp_emailUpdateManyWithWhereWithoutUserInput | user_otp_emailUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: user_otp_emailScalarWhereInput | user_otp_emailScalarWhereInput[]
  }

  export type user_social_loginUpdateManyWithoutUserNestedInput = {
    create?: XOR<user_social_loginCreateWithoutUserInput, user_social_loginUncheckedCreateWithoutUserInput> | user_social_loginCreateWithoutUserInput[] | user_social_loginUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_social_loginCreateOrConnectWithoutUserInput | user_social_loginCreateOrConnectWithoutUserInput[]
    upsert?: user_social_loginUpsertWithWhereUniqueWithoutUserInput | user_social_loginUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: user_social_loginCreateManyUserInputEnvelope
    set?: user_social_loginWhereUniqueInput | user_social_loginWhereUniqueInput[]
    disconnect?: user_social_loginWhereUniqueInput | user_social_loginWhereUniqueInput[]
    delete?: user_social_loginWhereUniqueInput | user_social_loginWhereUniqueInput[]
    connect?: user_social_loginWhereUniqueInput | user_social_loginWhereUniqueInput[]
    update?: user_social_loginUpdateWithWhereUniqueWithoutUserInput | user_social_loginUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: user_social_loginUpdateManyWithWhereWithoutUserInput | user_social_loginUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: user_social_loginScalarWhereInput | user_social_loginScalarWhereInput[]
  }

  export type user_sso_loginUpdateManyWithoutUserNestedInput = {
    create?: XOR<user_sso_loginCreateWithoutUserInput, user_sso_loginUncheckedCreateWithoutUserInput> | user_sso_loginCreateWithoutUserInput[] | user_sso_loginUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_sso_loginCreateOrConnectWithoutUserInput | user_sso_loginCreateOrConnectWithoutUserInput[]
    upsert?: user_sso_loginUpsertWithWhereUniqueWithoutUserInput | user_sso_loginUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: user_sso_loginCreateManyUserInputEnvelope
    set?: user_sso_loginWhereUniqueInput | user_sso_loginWhereUniqueInput[]
    disconnect?: user_sso_loginWhereUniqueInput | user_sso_loginWhereUniqueInput[]
    delete?: user_sso_loginWhereUniqueInput | user_sso_loginWhereUniqueInput[]
    connect?: user_sso_loginWhereUniqueInput | user_sso_loginWhereUniqueInput[]
    update?: user_sso_loginUpdateWithWhereUniqueWithoutUserInput | user_sso_loginUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: user_sso_loginUpdateManyWithWhereWithoutUserInput | user_sso_loginUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: user_sso_loginScalarWhereInput | user_sso_loginScalarWhereInput[]
  }

  export type user_statusUpdateManyWithoutUserNestedInput = {
    create?: XOR<user_statusCreateWithoutUserInput, user_statusUncheckedCreateWithoutUserInput> | user_statusCreateWithoutUserInput[] | user_statusUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_statusCreateOrConnectWithoutUserInput | user_statusCreateOrConnectWithoutUserInput[]
    upsert?: user_statusUpsertWithWhereUniqueWithoutUserInput | user_statusUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: user_statusCreateManyUserInputEnvelope
    set?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
    disconnect?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
    delete?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
    connect?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
    update?: user_statusUpdateWithWhereUniqueWithoutUserInput | user_statusUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: user_statusUpdateManyWithWhereWithoutUserInput | user_statusUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: user_statusScalarWhereInput | user_statusScalarWhereInput[]
  }

  export type user_email_xrefUpdateManyWithoutUserNestedInput = {
    create?: XOR<user_email_xrefCreateWithoutUserInput, user_email_xrefUncheckedCreateWithoutUserInput> | user_email_xrefCreateWithoutUserInput[] | user_email_xrefUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_email_xrefCreateOrConnectWithoutUserInput | user_email_xrefCreateOrConnectWithoutUserInput[]
    upsert?: user_email_xrefUpsertWithWhereUniqueWithoutUserInput | user_email_xrefUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: user_email_xrefCreateManyUserInputEnvelope
    set?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
    disconnect?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
    delete?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
    connect?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
    update?: user_email_xrefUpdateWithWhereUniqueWithoutUserInput | user_email_xrefUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: user_email_xrefUpdateManyWithWhereWithoutUserInput | user_email_xrefUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: user_email_xrefScalarWhereInput | user_email_xrefScalarWhereInput[]
  }

  export type emailUpdateManyWithoutUserNestedInput = {
    create?: XOR<emailCreateWithoutUserInput, emailUncheckedCreateWithoutUserInput> | emailCreateWithoutUserInput[] | emailUncheckedCreateWithoutUserInput[]
    connectOrCreate?: emailCreateOrConnectWithoutUserInput | emailCreateOrConnectWithoutUserInput[]
    upsert?: emailUpsertWithWhereUniqueWithoutUserInput | emailUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: emailCreateManyUserInputEnvelope
    set?: emailWhereUniqueInput | emailWhereUniqueInput[]
    disconnect?: emailWhereUniqueInput | emailWhereUniqueInput[]
    delete?: emailWhereUniqueInput | emailWhereUniqueInput[]
    connect?: emailWhereUniqueInput | emailWhereUniqueInput[]
    update?: emailUpdateWithWhereUniqueWithoutUserInput | emailUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: emailUpdateManyWithWhereWithoutUserInput | emailUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: emailScalarWhereInput | emailScalarWhereInput[]
  }

  export type dice_connectionUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<dice_connectionCreateWithoutUserInput, dice_connectionUncheckedCreateWithoutUserInput>
    connectOrCreate?: dice_connectionCreateOrConnectWithoutUserInput
    upsert?: dice_connectionUpsertWithoutUserInput
    disconnect?: dice_connectionWhereInput | boolean
    delete?: dice_connectionWhereInput | boolean
    connect?: dice_connectionWhereUniqueInput
    update?: XOR<XOR<dice_connectionUpdateToOneWithWhereWithoutUserInput, dice_connectionUpdateWithoutUserInput>, dice_connectionUncheckedUpdateWithoutUserInput>
  }

  export type user_2faUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<user_2faCreateWithoutUserInput, user_2faUncheckedCreateWithoutUserInput>
    connectOrCreate?: user_2faCreateOrConnectWithoutUserInput
    upsert?: user_2faUpsertWithoutUserInput
    disconnect?: user_2faWhereInput | boolean
    delete?: user_2faWhereInput | boolean
    connect?: user_2faWhereUniqueInput
    update?: XOR<XOR<user_2faUpdateToOneWithWhereWithoutUserInput, user_2faUpdateWithoutUserInput>, user_2faUncheckedUpdateWithoutUserInput>
  }

  export type user_achievementUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<user_achievementCreateWithoutUserInput, user_achievementUncheckedCreateWithoutUserInput> | user_achievementCreateWithoutUserInput[] | user_achievementUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_achievementCreateOrConnectWithoutUserInput | user_achievementCreateOrConnectWithoutUserInput[]
    upsert?: user_achievementUpsertWithWhereUniqueWithoutUserInput | user_achievementUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: user_achievementCreateManyUserInputEnvelope
    set?: user_achievementWhereUniqueInput | user_achievementWhereUniqueInput[]
    disconnect?: user_achievementWhereUniqueInput | user_achievementWhereUniqueInput[]
    delete?: user_achievementWhereUniqueInput | user_achievementWhereUniqueInput[]
    connect?: user_achievementWhereUniqueInput | user_achievementWhereUniqueInput[]
    update?: user_achievementUpdateWithWhereUniqueWithoutUserInput | user_achievementUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: user_achievementUpdateManyWithWhereWithoutUserInput | user_achievementUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: user_achievementScalarWhereInput | user_achievementScalarWhereInput[]
  }

  export type user_otp_emailUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<user_otp_emailCreateWithoutUserInput, user_otp_emailUncheckedCreateWithoutUserInput> | user_otp_emailCreateWithoutUserInput[] | user_otp_emailUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_otp_emailCreateOrConnectWithoutUserInput | user_otp_emailCreateOrConnectWithoutUserInput[]
    upsert?: user_otp_emailUpsertWithWhereUniqueWithoutUserInput | user_otp_emailUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: user_otp_emailCreateManyUserInputEnvelope
    set?: user_otp_emailWhereUniqueInput | user_otp_emailWhereUniqueInput[]
    disconnect?: user_otp_emailWhereUniqueInput | user_otp_emailWhereUniqueInput[]
    delete?: user_otp_emailWhereUniqueInput | user_otp_emailWhereUniqueInput[]
    connect?: user_otp_emailWhereUniqueInput | user_otp_emailWhereUniqueInput[]
    update?: user_otp_emailUpdateWithWhereUniqueWithoutUserInput | user_otp_emailUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: user_otp_emailUpdateManyWithWhereWithoutUserInput | user_otp_emailUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: user_otp_emailScalarWhereInput | user_otp_emailScalarWhereInput[]
  }

  export type user_social_loginUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<user_social_loginCreateWithoutUserInput, user_social_loginUncheckedCreateWithoutUserInput> | user_social_loginCreateWithoutUserInput[] | user_social_loginUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_social_loginCreateOrConnectWithoutUserInput | user_social_loginCreateOrConnectWithoutUserInput[]
    upsert?: user_social_loginUpsertWithWhereUniqueWithoutUserInput | user_social_loginUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: user_social_loginCreateManyUserInputEnvelope
    set?: user_social_loginWhereUniqueInput | user_social_loginWhereUniqueInput[]
    disconnect?: user_social_loginWhereUniqueInput | user_social_loginWhereUniqueInput[]
    delete?: user_social_loginWhereUniqueInput | user_social_loginWhereUniqueInput[]
    connect?: user_social_loginWhereUniqueInput | user_social_loginWhereUniqueInput[]
    update?: user_social_loginUpdateWithWhereUniqueWithoutUserInput | user_social_loginUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: user_social_loginUpdateManyWithWhereWithoutUserInput | user_social_loginUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: user_social_loginScalarWhereInput | user_social_loginScalarWhereInput[]
  }

  export type user_sso_loginUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<user_sso_loginCreateWithoutUserInput, user_sso_loginUncheckedCreateWithoutUserInput> | user_sso_loginCreateWithoutUserInput[] | user_sso_loginUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_sso_loginCreateOrConnectWithoutUserInput | user_sso_loginCreateOrConnectWithoutUserInput[]
    upsert?: user_sso_loginUpsertWithWhereUniqueWithoutUserInput | user_sso_loginUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: user_sso_loginCreateManyUserInputEnvelope
    set?: user_sso_loginWhereUniqueInput | user_sso_loginWhereUniqueInput[]
    disconnect?: user_sso_loginWhereUniqueInput | user_sso_loginWhereUniqueInput[]
    delete?: user_sso_loginWhereUniqueInput | user_sso_loginWhereUniqueInput[]
    connect?: user_sso_loginWhereUniqueInput | user_sso_loginWhereUniqueInput[]
    update?: user_sso_loginUpdateWithWhereUniqueWithoutUserInput | user_sso_loginUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: user_sso_loginUpdateManyWithWhereWithoutUserInput | user_sso_loginUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: user_sso_loginScalarWhereInput | user_sso_loginScalarWhereInput[]
  }

  export type user_statusUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<user_statusCreateWithoutUserInput, user_statusUncheckedCreateWithoutUserInput> | user_statusCreateWithoutUserInput[] | user_statusUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_statusCreateOrConnectWithoutUserInput | user_statusCreateOrConnectWithoutUserInput[]
    upsert?: user_statusUpsertWithWhereUniqueWithoutUserInput | user_statusUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: user_statusCreateManyUserInputEnvelope
    set?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
    disconnect?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
    delete?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
    connect?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
    update?: user_statusUpdateWithWhereUniqueWithoutUserInput | user_statusUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: user_statusUpdateManyWithWhereWithoutUserInput | user_statusUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: user_statusScalarWhereInput | user_statusScalarWhereInput[]
  }

  export type user_email_xrefUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<user_email_xrefCreateWithoutUserInput, user_email_xrefUncheckedCreateWithoutUserInput> | user_email_xrefCreateWithoutUserInput[] | user_email_xrefUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_email_xrefCreateOrConnectWithoutUserInput | user_email_xrefCreateOrConnectWithoutUserInput[]
    upsert?: user_email_xrefUpsertWithWhereUniqueWithoutUserInput | user_email_xrefUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: user_email_xrefCreateManyUserInputEnvelope
    set?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
    disconnect?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
    delete?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
    connect?: user_email_xrefWhereUniqueInput | user_email_xrefWhereUniqueInput[]
    update?: user_email_xrefUpdateWithWhereUniqueWithoutUserInput | user_email_xrefUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: user_email_xrefUpdateManyWithWhereWithoutUserInput | user_email_xrefUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: user_email_xrefScalarWhereInput | user_email_xrefScalarWhereInput[]
  }

  export type emailUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<emailCreateWithoutUserInput, emailUncheckedCreateWithoutUserInput> | emailCreateWithoutUserInput[] | emailUncheckedCreateWithoutUserInput[]
    connectOrCreate?: emailCreateOrConnectWithoutUserInput | emailCreateOrConnectWithoutUserInput[]
    upsert?: emailUpsertWithWhereUniqueWithoutUserInput | emailUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: emailCreateManyUserInputEnvelope
    set?: emailWhereUniqueInput | emailWhereUniqueInput[]
    disconnect?: emailWhereUniqueInput | emailWhereUniqueInput[]
    delete?: emailWhereUniqueInput | emailWhereUniqueInput[]
    connect?: emailWhereUniqueInput | emailWhereUniqueInput[]
    update?: emailUpdateWithWhereUniqueWithoutUserInput | emailUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: emailUpdateManyWithWhereWithoutUserInput | emailUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: emailScalarWhereInput | emailScalarWhereInput[]
  }

  export type userCreateNestedOneWithoutUser_2faInput = {
    create?: XOR<userCreateWithoutUser_2faInput, userUncheckedCreateWithoutUser_2faInput>
    connectOrCreate?: userCreateOrConnectWithoutUser_2faInput
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutUser_2faNestedInput = {
    create?: XOR<userCreateWithoutUser_2faInput, userUncheckedCreateWithoutUser_2faInput>
    connectOrCreate?: userCreateOrConnectWithoutUser_2faInput
    upsert?: userUpsertWithoutUser_2faInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUser_2faInput, userUpdateWithoutUser_2faInput>, userUncheckedUpdateWithoutUser_2faInput>
  }

  export type achievement_type_luCreateNestedOneWithoutUser_achievementInput = {
    create?: XOR<achievement_type_luCreateWithoutUser_achievementInput, achievement_type_luUncheckedCreateWithoutUser_achievementInput>
    connectOrCreate?: achievement_type_luCreateOrConnectWithoutUser_achievementInput
    connect?: achievement_type_luWhereUniqueInput
  }

  export type userCreateNestedOneWithoutUser_achievementInput = {
    create?: XOR<userCreateWithoutUser_achievementInput, userUncheckedCreateWithoutUser_achievementInput>
    connectOrCreate?: userCreateOrConnectWithoutUser_achievementInput
    connect?: userWhereUniqueInput
  }

  export type achievement_type_luUpdateOneRequiredWithoutUser_achievementNestedInput = {
    create?: XOR<achievement_type_luCreateWithoutUser_achievementInput, achievement_type_luUncheckedCreateWithoutUser_achievementInput>
    connectOrCreate?: achievement_type_luCreateOrConnectWithoutUser_achievementInput
    upsert?: achievement_type_luUpsertWithoutUser_achievementInput
    connect?: achievement_type_luWhereUniqueInput
    update?: XOR<XOR<achievement_type_luUpdateToOneWithWhereWithoutUser_achievementInput, achievement_type_luUpdateWithoutUser_achievementInput>, achievement_type_luUncheckedUpdateWithoutUser_achievementInput>
  }

  export type userUpdateOneRequiredWithoutUser_achievementNestedInput = {
    create?: XOR<userCreateWithoutUser_achievementInput, userUncheckedCreateWithoutUser_achievementInput>
    connectOrCreate?: userCreateOrConnectWithoutUser_achievementInput
    upsert?: userUpsertWithoutUser_achievementInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUser_achievementInput, userUpdateWithoutUser_achievementInput>, userUncheckedUpdateWithoutUser_achievementInput>
  }

  export type security_userCreateNestedOneWithoutUser_group_xrefInput = {
    create?: XOR<security_userCreateWithoutUser_group_xrefInput, security_userUncheckedCreateWithoutUser_group_xrefInput>
    connectOrCreate?: security_userCreateOrConnectWithoutUser_group_xrefInput
    connect?: security_userWhereUniqueInput
  }

  export type security_groupsCreateNestedOneWithoutUser_group_xrefInput = {
    create?: XOR<security_groupsCreateWithoutUser_group_xrefInput, security_groupsUncheckedCreateWithoutUser_group_xrefInput>
    connectOrCreate?: security_groupsCreateOrConnectWithoutUser_group_xrefInput
    connect?: security_groupsWhereUniqueInput
  }

  export type security_status_luCreateNestedOneWithoutUser_group_xrefInput = {
    create?: XOR<security_status_luCreateWithoutUser_group_xrefInput, security_status_luUncheckedCreateWithoutUser_group_xrefInput>
    connectOrCreate?: security_status_luCreateOrConnectWithoutUser_group_xrefInput
    connect?: security_status_luWhereUniqueInput
  }

  export type security_userUpdateOneWithoutUser_group_xrefNestedInput = {
    create?: XOR<security_userCreateWithoutUser_group_xrefInput, security_userUncheckedCreateWithoutUser_group_xrefInput>
    connectOrCreate?: security_userCreateOrConnectWithoutUser_group_xrefInput
    upsert?: security_userUpsertWithoutUser_group_xrefInput
    disconnect?: security_userWhereInput | boolean
    delete?: security_userWhereInput | boolean
    connect?: security_userWhereUniqueInput
    update?: XOR<XOR<security_userUpdateToOneWithWhereWithoutUser_group_xrefInput, security_userUpdateWithoutUser_group_xrefInput>, security_userUncheckedUpdateWithoutUser_group_xrefInput>
  }

  export type security_groupsUpdateOneWithoutUser_group_xrefNestedInput = {
    create?: XOR<security_groupsCreateWithoutUser_group_xrefInput, security_groupsUncheckedCreateWithoutUser_group_xrefInput>
    connectOrCreate?: security_groupsCreateOrConnectWithoutUser_group_xrefInput
    upsert?: security_groupsUpsertWithoutUser_group_xrefInput
    disconnect?: security_groupsWhereInput | boolean
    delete?: security_groupsWhereInput | boolean
    connect?: security_groupsWhereUniqueInput
    update?: XOR<XOR<security_groupsUpdateToOneWithWhereWithoutUser_group_xrefInput, security_groupsUpdateWithoutUser_group_xrefInput>, security_groupsUncheckedUpdateWithoutUser_group_xrefInput>
  }

  export type security_status_luUpdateOneWithoutUser_group_xrefNestedInput = {
    create?: XOR<security_status_luCreateWithoutUser_group_xrefInput, security_status_luUncheckedCreateWithoutUser_group_xrefInput>
    connectOrCreate?: security_status_luCreateOrConnectWithoutUser_group_xrefInput
    upsert?: security_status_luUpsertWithoutUser_group_xrefInput
    disconnect?: security_status_luWhereInput | boolean
    delete?: security_status_luWhereInput | boolean
    connect?: security_status_luWhereUniqueInput
    update?: XOR<XOR<security_status_luUpdateToOneWithWhereWithoutUser_group_xrefInput, security_status_luUpdateWithoutUser_group_xrefInput>, security_status_luUncheckedUpdateWithoutUser_group_xrefInput>
  }

  export type userCreateNestedOneWithoutUser_otp_emailInput = {
    create?: XOR<userCreateWithoutUser_otp_emailInput, userUncheckedCreateWithoutUser_otp_emailInput>
    connectOrCreate?: userCreateOrConnectWithoutUser_otp_emailInput
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutUser_otp_emailNestedInput = {
    create?: XOR<userCreateWithoutUser_otp_emailInput, userUncheckedCreateWithoutUser_otp_emailInput>
    connectOrCreate?: userCreateOrConnectWithoutUser_otp_emailInput
    upsert?: userUpsertWithoutUser_otp_emailInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUser_otp_emailInput, userUpdateWithoutUser_otp_emailInput>, userUncheckedUpdateWithoutUser_otp_emailInput>
  }

  export type social_login_providerCreateNestedOneWithoutUser_social_loginInput = {
    create?: XOR<social_login_providerCreateWithoutUser_social_loginInput, social_login_providerUncheckedCreateWithoutUser_social_loginInput>
    connectOrCreate?: social_login_providerCreateOrConnectWithoutUser_social_loginInput
    connect?: social_login_providerWhereUniqueInput
  }

  export type userCreateNestedOneWithoutUser_social_loginInput = {
    create?: XOR<userCreateWithoutUser_social_loginInput, userUncheckedCreateWithoutUser_social_loginInput>
    connectOrCreate?: userCreateOrConnectWithoutUser_social_loginInput
    connect?: userWhereUniqueInput
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type social_login_providerUpdateOneRequiredWithoutUser_social_loginNestedInput = {
    create?: XOR<social_login_providerCreateWithoutUser_social_loginInput, social_login_providerUncheckedCreateWithoutUser_social_loginInput>
    connectOrCreate?: social_login_providerCreateOrConnectWithoutUser_social_loginInput
    upsert?: social_login_providerUpsertWithoutUser_social_loginInput
    connect?: social_login_providerWhereUniqueInput
    update?: XOR<XOR<social_login_providerUpdateToOneWithWhereWithoutUser_social_loginInput, social_login_providerUpdateWithoutUser_social_loginInput>, social_login_providerUncheckedUpdateWithoutUser_social_loginInput>
  }

  export type userUpdateOneRequiredWithoutUser_social_loginNestedInput = {
    create?: XOR<userCreateWithoutUser_social_loginInput, userUncheckedCreateWithoutUser_social_loginInput>
    connectOrCreate?: userCreateOrConnectWithoutUser_social_loginInput
    upsert?: userUpsertWithoutUser_social_loginInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUser_social_loginInput, userUpdateWithoutUser_social_loginInput>, userUncheckedUpdateWithoutUser_social_loginInput>
  }

  export type sso_login_providerCreateNestedOneWithoutUser_sso_loginInput = {
    create?: XOR<sso_login_providerCreateWithoutUser_sso_loginInput, sso_login_providerUncheckedCreateWithoutUser_sso_loginInput>
    connectOrCreate?: sso_login_providerCreateOrConnectWithoutUser_sso_loginInput
    connect?: sso_login_providerWhereUniqueInput
  }

  export type userCreateNestedOneWithoutUser_sso_loginInput = {
    create?: XOR<userCreateWithoutUser_sso_loginInput, userUncheckedCreateWithoutUser_sso_loginInput>
    connectOrCreate?: userCreateOrConnectWithoutUser_sso_loginInput
    connect?: userWhereUniqueInput
  }

  export type sso_login_providerUpdateOneRequiredWithoutUser_sso_loginNestedInput = {
    create?: XOR<sso_login_providerCreateWithoutUser_sso_loginInput, sso_login_providerUncheckedCreateWithoutUser_sso_loginInput>
    connectOrCreate?: sso_login_providerCreateOrConnectWithoutUser_sso_loginInput
    upsert?: sso_login_providerUpsertWithoutUser_sso_loginInput
    connect?: sso_login_providerWhereUniqueInput
    update?: XOR<XOR<sso_login_providerUpdateToOneWithWhereWithoutUser_sso_loginInput, sso_login_providerUpdateWithoutUser_sso_loginInput>, sso_login_providerUncheckedUpdateWithoutUser_sso_loginInput>
  }

  export type userUpdateOneRequiredWithoutUser_sso_loginNestedInput = {
    create?: XOR<userCreateWithoutUser_sso_loginInput, userUncheckedCreateWithoutUser_sso_loginInput>
    connectOrCreate?: userCreateOrConnectWithoutUser_sso_loginInput
    upsert?: userUpsertWithoutUser_sso_loginInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUser_sso_loginInput, userUpdateWithoutUser_sso_loginInput>, userUncheckedUpdateWithoutUser_sso_loginInput>
  }

  export type userCreateNestedOneWithoutUser_statusInput = {
    create?: XOR<userCreateWithoutUser_statusInput, userUncheckedCreateWithoutUser_statusInput>
    connectOrCreate?: userCreateOrConnectWithoutUser_statusInput
    connect?: userWhereUniqueInput
  }

  export type user_status_luCreateNestedOneWithoutUser_statusInput = {
    create?: XOR<user_status_luCreateWithoutUser_statusInput, user_status_luUncheckedCreateWithoutUser_statusInput>
    connectOrCreate?: user_status_luCreateOrConnectWithoutUser_statusInput
    connect?: user_status_luWhereUniqueInput
  }

  export type user_status_type_luCreateNestedOneWithoutUser_statusInput = {
    create?: XOR<user_status_type_luCreateWithoutUser_statusInput, user_status_type_luUncheckedCreateWithoutUser_statusInput>
    connectOrCreate?: user_status_type_luCreateOrConnectWithoutUser_statusInput
    connect?: user_status_type_luWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutUser_statusNestedInput = {
    create?: XOR<userCreateWithoutUser_statusInput, userUncheckedCreateWithoutUser_statusInput>
    connectOrCreate?: userCreateOrConnectWithoutUser_statusInput
    upsert?: userUpsertWithoutUser_statusInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUser_statusInput, userUpdateWithoutUser_statusInput>, userUncheckedUpdateWithoutUser_statusInput>
  }

  export type user_status_luUpdateOneWithoutUser_statusNestedInput = {
    create?: XOR<user_status_luCreateWithoutUser_statusInput, user_status_luUncheckedCreateWithoutUser_statusInput>
    connectOrCreate?: user_status_luCreateOrConnectWithoutUser_statusInput
    upsert?: user_status_luUpsertWithoutUser_statusInput
    disconnect?: user_status_luWhereInput | boolean
    delete?: user_status_luWhereInput | boolean
    connect?: user_status_luWhereUniqueInput
    update?: XOR<XOR<user_status_luUpdateToOneWithWhereWithoutUser_statusInput, user_status_luUpdateWithoutUser_statusInput>, user_status_luUncheckedUpdateWithoutUser_statusInput>
  }

  export type user_status_type_luUpdateOneRequiredWithoutUser_statusNestedInput = {
    create?: XOR<user_status_type_luCreateWithoutUser_statusInput, user_status_type_luUncheckedCreateWithoutUser_statusInput>
    connectOrCreate?: user_status_type_luCreateOrConnectWithoutUser_statusInput
    upsert?: user_status_type_luUpsertWithoutUser_statusInput
    connect?: user_status_type_luWhereUniqueInput
    update?: XOR<XOR<user_status_type_luUpdateToOneWithWhereWithoutUser_statusInput, user_status_type_luUpdateWithoutUser_statusInput>, user_status_type_luUncheckedUpdateWithoutUser_statusInput>
  }

  export type user_statusCreateNestedManyWithoutUser_status_luInput = {
    create?: XOR<user_statusCreateWithoutUser_status_luInput, user_statusUncheckedCreateWithoutUser_status_luInput> | user_statusCreateWithoutUser_status_luInput[] | user_statusUncheckedCreateWithoutUser_status_luInput[]
    connectOrCreate?: user_statusCreateOrConnectWithoutUser_status_luInput | user_statusCreateOrConnectWithoutUser_status_luInput[]
    createMany?: user_statusCreateManyUser_status_luInputEnvelope
    connect?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
  }

  export type user_statusUncheckedCreateNestedManyWithoutUser_status_luInput = {
    create?: XOR<user_statusCreateWithoutUser_status_luInput, user_statusUncheckedCreateWithoutUser_status_luInput> | user_statusCreateWithoutUser_status_luInput[] | user_statusUncheckedCreateWithoutUser_status_luInput[]
    connectOrCreate?: user_statusCreateOrConnectWithoutUser_status_luInput | user_statusCreateOrConnectWithoutUser_status_luInput[]
    createMany?: user_statusCreateManyUser_status_luInputEnvelope
    connect?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
  }

  export type user_statusUpdateManyWithoutUser_status_luNestedInput = {
    create?: XOR<user_statusCreateWithoutUser_status_luInput, user_statusUncheckedCreateWithoutUser_status_luInput> | user_statusCreateWithoutUser_status_luInput[] | user_statusUncheckedCreateWithoutUser_status_luInput[]
    connectOrCreate?: user_statusCreateOrConnectWithoutUser_status_luInput | user_statusCreateOrConnectWithoutUser_status_luInput[]
    upsert?: user_statusUpsertWithWhereUniqueWithoutUser_status_luInput | user_statusUpsertWithWhereUniqueWithoutUser_status_luInput[]
    createMany?: user_statusCreateManyUser_status_luInputEnvelope
    set?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
    disconnect?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
    delete?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
    connect?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
    update?: user_statusUpdateWithWhereUniqueWithoutUser_status_luInput | user_statusUpdateWithWhereUniqueWithoutUser_status_luInput[]
    updateMany?: user_statusUpdateManyWithWhereWithoutUser_status_luInput | user_statusUpdateManyWithWhereWithoutUser_status_luInput[]
    deleteMany?: user_statusScalarWhereInput | user_statusScalarWhereInput[]
  }

  export type user_statusUncheckedUpdateManyWithoutUser_status_luNestedInput = {
    create?: XOR<user_statusCreateWithoutUser_status_luInput, user_statusUncheckedCreateWithoutUser_status_luInput> | user_statusCreateWithoutUser_status_luInput[] | user_statusUncheckedCreateWithoutUser_status_luInput[]
    connectOrCreate?: user_statusCreateOrConnectWithoutUser_status_luInput | user_statusCreateOrConnectWithoutUser_status_luInput[]
    upsert?: user_statusUpsertWithWhereUniqueWithoutUser_status_luInput | user_statusUpsertWithWhereUniqueWithoutUser_status_luInput[]
    createMany?: user_statusCreateManyUser_status_luInputEnvelope
    set?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
    disconnect?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
    delete?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
    connect?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
    update?: user_statusUpdateWithWhereUniqueWithoutUser_status_luInput | user_statusUpdateWithWhereUniqueWithoutUser_status_luInput[]
    updateMany?: user_statusUpdateManyWithWhereWithoutUser_status_luInput | user_statusUpdateManyWithWhereWithoutUser_status_luInput[]
    deleteMany?: user_statusScalarWhereInput | user_statusScalarWhereInput[]
  }

  export type user_statusCreateNestedManyWithoutUser_status_type_luInput = {
    create?: XOR<user_statusCreateWithoutUser_status_type_luInput, user_statusUncheckedCreateWithoutUser_status_type_luInput> | user_statusCreateWithoutUser_status_type_luInput[] | user_statusUncheckedCreateWithoutUser_status_type_luInput[]
    connectOrCreate?: user_statusCreateOrConnectWithoutUser_status_type_luInput | user_statusCreateOrConnectWithoutUser_status_type_luInput[]
    createMany?: user_statusCreateManyUser_status_type_luInputEnvelope
    connect?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
  }

  export type user_statusUncheckedCreateNestedManyWithoutUser_status_type_luInput = {
    create?: XOR<user_statusCreateWithoutUser_status_type_luInput, user_statusUncheckedCreateWithoutUser_status_type_luInput> | user_statusCreateWithoutUser_status_type_luInput[] | user_statusUncheckedCreateWithoutUser_status_type_luInput[]
    connectOrCreate?: user_statusCreateOrConnectWithoutUser_status_type_luInput | user_statusCreateOrConnectWithoutUser_status_type_luInput[]
    createMany?: user_statusCreateManyUser_status_type_luInputEnvelope
    connect?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
  }

  export type user_statusUpdateManyWithoutUser_status_type_luNestedInput = {
    create?: XOR<user_statusCreateWithoutUser_status_type_luInput, user_statusUncheckedCreateWithoutUser_status_type_luInput> | user_statusCreateWithoutUser_status_type_luInput[] | user_statusUncheckedCreateWithoutUser_status_type_luInput[]
    connectOrCreate?: user_statusCreateOrConnectWithoutUser_status_type_luInput | user_statusCreateOrConnectWithoutUser_status_type_luInput[]
    upsert?: user_statusUpsertWithWhereUniqueWithoutUser_status_type_luInput | user_statusUpsertWithWhereUniqueWithoutUser_status_type_luInput[]
    createMany?: user_statusCreateManyUser_status_type_luInputEnvelope
    set?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
    disconnect?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
    delete?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
    connect?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
    update?: user_statusUpdateWithWhereUniqueWithoutUser_status_type_luInput | user_statusUpdateWithWhereUniqueWithoutUser_status_type_luInput[]
    updateMany?: user_statusUpdateManyWithWhereWithoutUser_status_type_luInput | user_statusUpdateManyWithWhereWithoutUser_status_type_luInput[]
    deleteMany?: user_statusScalarWhereInput | user_statusScalarWhereInput[]
  }

  export type user_statusUncheckedUpdateManyWithoutUser_status_type_luNestedInput = {
    create?: XOR<user_statusCreateWithoutUser_status_type_luInput, user_statusUncheckedCreateWithoutUser_status_type_luInput> | user_statusCreateWithoutUser_status_type_luInput[] | user_statusUncheckedCreateWithoutUser_status_type_luInput[]
    connectOrCreate?: user_statusCreateOrConnectWithoutUser_status_type_luInput | user_statusCreateOrConnectWithoutUser_status_type_luInput[]
    upsert?: user_statusUpsertWithWhereUniqueWithoutUser_status_type_luInput | user_statusUpsertWithWhereUniqueWithoutUser_status_type_luInput[]
    createMany?: user_statusCreateManyUser_status_type_luInputEnvelope
    set?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
    disconnect?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
    delete?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
    connect?: user_statusWhereUniqueInput | user_statusWhereUniqueInput[]
    update?: user_statusUpdateWithWhereUniqueWithoutUser_status_type_luInput | user_statusUpdateWithWhereUniqueWithoutUser_status_type_luInput[]
    updateMany?: user_statusUpdateManyWithWhereWithoutUser_status_type_luInput | user_statusUpdateManyWithWhereWithoutUser_status_type_luInput[]
    deleteMany?: user_statusScalarWhereInput | user_statusScalarWhereInput[]
  }

  export type userCreateNestedOneWithoutUser_email_xrefInput = {
    create?: XOR<userCreateWithoutUser_email_xrefInput, userUncheckedCreateWithoutUser_email_xrefInput>
    connectOrCreate?: userCreateOrConnectWithoutUser_email_xrefInput
    connect?: userWhereUniqueInput
  }

  export type emailCreateNestedOneWithoutUser_email_xrefInput = {
    create?: XOR<emailCreateWithoutUser_email_xrefInput, emailUncheckedCreateWithoutUser_email_xrefInput>
    connectOrCreate?: emailCreateOrConnectWithoutUser_email_xrefInput
    connect?: emailWhereUniqueInput
  }

  export type email_status_luCreateNestedOneWithoutUser_email_xrefInput = {
    create?: XOR<email_status_luCreateWithoutUser_email_xrefInput, email_status_luUncheckedCreateWithoutUser_email_xrefInput>
    connectOrCreate?: email_status_luCreateOrConnectWithoutUser_email_xrefInput
    connect?: email_status_luWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutUser_email_xrefNestedInput = {
    create?: XOR<userCreateWithoutUser_email_xrefInput, userUncheckedCreateWithoutUser_email_xrefInput>
    connectOrCreate?: userCreateOrConnectWithoutUser_email_xrefInput
    upsert?: userUpsertWithoutUser_email_xrefInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutUser_email_xrefInput, userUpdateWithoutUser_email_xrefInput>, userUncheckedUpdateWithoutUser_email_xrefInput>
  }

  export type emailUpdateOneRequiredWithoutUser_email_xrefNestedInput = {
    create?: XOR<emailCreateWithoutUser_email_xrefInput, emailUncheckedCreateWithoutUser_email_xrefInput>
    connectOrCreate?: emailCreateOrConnectWithoutUser_email_xrefInput
    upsert?: emailUpsertWithoutUser_email_xrefInput
    connect?: emailWhereUniqueInput
    update?: XOR<XOR<emailUpdateToOneWithWhereWithoutUser_email_xrefInput, emailUpdateWithoutUser_email_xrefInput>, emailUncheckedUpdateWithoutUser_email_xrefInput>
  }

  export type email_status_luUpdateOneWithoutUser_email_xrefNestedInput = {
    create?: XOR<email_status_luCreateWithoutUser_email_xrefInput, email_status_luUncheckedCreateWithoutUser_email_xrefInput>
    connectOrCreate?: email_status_luCreateOrConnectWithoutUser_email_xrefInput
    upsert?: email_status_luUpsertWithoutUser_email_xrefInput
    disconnect?: email_status_luWhereInput | boolean
    delete?: email_status_luWhereInput | boolean
    connect?: email_status_luWhereUniqueInput
    update?: XOR<XOR<email_status_luUpdateToOneWithWhereWithoutUser_email_xrefInput, email_status_luUpdateWithoutUser_email_xrefInput>, email_status_luUncheckedUpdateWithoutUser_email_xrefInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type RoleAssignmentCreateNestedManyWithoutRoleInput = {
    create?: XOR<RoleAssignmentCreateWithoutRoleInput, RoleAssignmentUncheckedCreateWithoutRoleInput> | RoleAssignmentCreateWithoutRoleInput[] | RoleAssignmentUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: RoleAssignmentCreateOrConnectWithoutRoleInput | RoleAssignmentCreateOrConnectWithoutRoleInput[]
    createMany?: RoleAssignmentCreateManyRoleInputEnvelope
    connect?: RoleAssignmentWhereUniqueInput | RoleAssignmentWhereUniqueInput[]
  }

  export type RoleAssignmentUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<RoleAssignmentCreateWithoutRoleInput, RoleAssignmentUncheckedCreateWithoutRoleInput> | RoleAssignmentCreateWithoutRoleInput[] | RoleAssignmentUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: RoleAssignmentCreateOrConnectWithoutRoleInput | RoleAssignmentCreateOrConnectWithoutRoleInput[]
    createMany?: RoleAssignmentCreateManyRoleInputEnvelope
    connect?: RoleAssignmentWhereUniqueInput | RoleAssignmentWhereUniqueInput[]
  }

  export type RoleAssignmentUpdateManyWithoutRoleNestedInput = {
    create?: XOR<RoleAssignmentCreateWithoutRoleInput, RoleAssignmentUncheckedCreateWithoutRoleInput> | RoleAssignmentCreateWithoutRoleInput[] | RoleAssignmentUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: RoleAssignmentCreateOrConnectWithoutRoleInput | RoleAssignmentCreateOrConnectWithoutRoleInput[]
    upsert?: RoleAssignmentUpsertWithWhereUniqueWithoutRoleInput | RoleAssignmentUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: RoleAssignmentCreateManyRoleInputEnvelope
    set?: RoleAssignmentWhereUniqueInput | RoleAssignmentWhereUniqueInput[]
    disconnect?: RoleAssignmentWhereUniqueInput | RoleAssignmentWhereUniqueInput[]
    delete?: RoleAssignmentWhereUniqueInput | RoleAssignmentWhereUniqueInput[]
    connect?: RoleAssignmentWhereUniqueInput | RoleAssignmentWhereUniqueInput[]
    update?: RoleAssignmentUpdateWithWhereUniqueWithoutRoleInput | RoleAssignmentUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: RoleAssignmentUpdateManyWithWhereWithoutRoleInput | RoleAssignmentUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: RoleAssignmentScalarWhereInput | RoleAssignmentScalarWhereInput[]
  }

  export type RoleAssignmentUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<RoleAssignmentCreateWithoutRoleInput, RoleAssignmentUncheckedCreateWithoutRoleInput> | RoleAssignmentCreateWithoutRoleInput[] | RoleAssignmentUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: RoleAssignmentCreateOrConnectWithoutRoleInput | RoleAssignmentCreateOrConnectWithoutRoleInput[]
    upsert?: RoleAssignmentUpsertWithWhereUniqueWithoutRoleInput | RoleAssignmentUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: RoleAssignmentCreateManyRoleInputEnvelope
    set?: RoleAssignmentWhereUniqueInput | RoleAssignmentWhereUniqueInput[]
    disconnect?: RoleAssignmentWhereUniqueInput | RoleAssignmentWhereUniqueInput[]
    delete?: RoleAssignmentWhereUniqueInput | RoleAssignmentWhereUniqueInput[]
    connect?: RoleAssignmentWhereUniqueInput | RoleAssignmentWhereUniqueInput[]
    update?: RoleAssignmentUpdateWithWhereUniqueWithoutRoleInput | RoleAssignmentUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: RoleAssignmentUpdateManyWithWhereWithoutRoleInput | RoleAssignmentUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: RoleAssignmentScalarWhereInput | RoleAssignmentScalarWhereInput[]
  }

  export type RoleCreateNestedOneWithoutRoleAssignmentsInput = {
    create?: XOR<RoleCreateWithoutRoleAssignmentsInput, RoleUncheckedCreateWithoutRoleAssignmentsInput>
    connectOrCreate?: RoleCreateOrConnectWithoutRoleAssignmentsInput
    connect?: RoleWhereUniqueInput
  }

  export type RoleUpdateOneRequiredWithoutRoleAssignmentsNestedInput = {
    create?: XOR<RoleCreateWithoutRoleAssignmentsInput, RoleUncheckedCreateWithoutRoleAssignmentsInput>
    connectOrCreate?: RoleCreateOrConnectWithoutRoleAssignmentsInput
    upsert?: RoleUpsertWithoutRoleAssignmentsInput
    connect?: RoleWhereUniqueInput
    update?: XOR<XOR<RoleUpdateToOneWithWhereWithoutRoleAssignmentsInput, RoleUpdateWithoutRoleAssignmentsInput>, RoleUncheckedUpdateWithoutRoleAssignmentsInput>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type user_achievementCreateWithoutAchievement_type_luInput = {
    achievement_date: Date | string
    description?: string | null
    create_date?: Date | string | null
    user: userCreateNestedOneWithoutUser_achievementInput
  }

  export type user_achievementUncheckedCreateWithoutAchievement_type_luInput = {
    user_id: Decimal | DecimalJsLike | number | string
    achievement_date: Date | string
    description?: string | null
    create_date?: Date | string | null
  }

  export type user_achievementCreateOrConnectWithoutAchievement_type_luInput = {
    where: user_achievementWhereUniqueInput
    create: XOR<user_achievementCreateWithoutAchievement_type_luInput, user_achievementUncheckedCreateWithoutAchievement_type_luInput>
  }

  export type user_achievementCreateManyAchievement_type_luInputEnvelope = {
    data: user_achievementCreateManyAchievement_type_luInput | user_achievementCreateManyAchievement_type_luInput[]
    skipDuplicates?: boolean
  }

  export type user_achievementUpsertWithWhereUniqueWithoutAchievement_type_luInput = {
    where: user_achievementWhereUniqueInput
    update: XOR<user_achievementUpdateWithoutAchievement_type_luInput, user_achievementUncheckedUpdateWithoutAchievement_type_luInput>
    create: XOR<user_achievementCreateWithoutAchievement_type_luInput, user_achievementUncheckedCreateWithoutAchievement_type_luInput>
  }

  export type user_achievementUpdateWithWhereUniqueWithoutAchievement_type_luInput = {
    where: user_achievementWhereUniqueInput
    data: XOR<user_achievementUpdateWithoutAchievement_type_luInput, user_achievementUncheckedUpdateWithoutAchievement_type_luInput>
  }

  export type user_achievementUpdateManyWithWhereWithoutAchievement_type_luInput = {
    where: user_achievementScalarWhereInput
    data: XOR<user_achievementUpdateManyMutationInput, user_achievementUncheckedUpdateManyWithoutAchievement_type_luInput>
  }

  export type user_achievementScalarWhereInput = {
    AND?: user_achievementScalarWhereInput | user_achievementScalarWhereInput[]
    OR?: user_achievementScalarWhereInput[]
    NOT?: user_achievementScalarWhereInput | user_achievementScalarWhereInput[]
    user_id?: DecimalFilter<"user_achievement"> | Decimal | DecimalJsLike | number | string
    achievement_date?: DateTimeFilter<"user_achievement"> | Date | string
    achievement_type_id?: DecimalFilter<"user_achievement"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableFilter<"user_achievement"> | string | null
    create_date?: DateTimeNullableFilter<"user_achievement"> | Date | string | null
  }

  export type userCreateWithoutDice_connectionInput = {
    user_id?: Decimal | DecimalJsLike | number | string
    first_name?: string | null
    last_name?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    handle: string
    last_login?: Date | string | null
    status: string
    activation_code?: string | null
    middle_name?: string | null
    handle_lower?: string | null
    timezone_id?: Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: Date | string | null
    name_in_another_language?: string | null
    password?: string | null
    open_id?: string | null
    reg_source?: string | null
    utm_source?: string | null
    utm_medium?: string | null
    utm_campaign?: string | null
    user_2fa?: user_2faCreateNestedOneWithoutUserInput
    user_achievement?: user_achievementCreateNestedManyWithoutUserInput
    user_otp_email?: user_otp_emailCreateNestedManyWithoutUserInput
    user_social_login?: user_social_loginCreateNestedManyWithoutUserInput
    user_sso_login?: user_sso_loginCreateNestedManyWithoutUserInput
    user_status?: user_statusCreateNestedManyWithoutUserInput
    user_email_xref?: user_email_xrefCreateNestedManyWithoutUserInput
    emails?: emailCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutDice_connectionInput = {
    user_id?: Decimal | DecimalJsLike | number | string
    first_name?: string | null
    last_name?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    handle: string
    last_login?: Date | string | null
    status: string
    activation_code?: string | null
    middle_name?: string | null
    handle_lower?: string | null
    timezone_id?: Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: Date | string | null
    name_in_another_language?: string | null
    password?: string | null
    open_id?: string | null
    reg_source?: string | null
    utm_source?: string | null
    utm_medium?: string | null
    utm_campaign?: string | null
    user_2fa?: user_2faUncheckedCreateNestedOneWithoutUserInput
    user_achievement?: user_achievementUncheckedCreateNestedManyWithoutUserInput
    user_otp_email?: user_otp_emailUncheckedCreateNestedManyWithoutUserInput
    user_social_login?: user_social_loginUncheckedCreateNestedManyWithoutUserInput
    user_sso_login?: user_sso_loginUncheckedCreateNestedManyWithoutUserInput
    user_status?: user_statusUncheckedCreateNestedManyWithoutUserInput
    user_email_xref?: user_email_xrefUncheckedCreateNestedManyWithoutUserInput
    emails?: emailUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutDice_connectionInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutDice_connectionInput, userUncheckedCreateWithoutDice_connectionInput>
  }

  export type userUpsertWithoutDice_connectionInput = {
    update: XOR<userUpdateWithoutDice_connectionInput, userUncheckedUpdateWithoutDice_connectionInput>
    create: XOR<userCreateWithoutDice_connectionInput, userUncheckedCreateWithoutDice_connectionInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutDice_connectionInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutDice_connectionInput, userUncheckedUpdateWithoutDice_connectionInput>
  }

  export type userUpdateWithoutDice_connectionInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    handle?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    activation_code?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    handle_lower?: NullableStringFieldUpdateOperationsInput | string | null
    timezone_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_in_another_language?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    open_id?: NullableStringFieldUpdateOperationsInput | string | null
    reg_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_medium?: NullableStringFieldUpdateOperationsInput | string | null
    utm_campaign?: NullableStringFieldUpdateOperationsInput | string | null
    user_2fa?: user_2faUpdateOneWithoutUserNestedInput
    user_achievement?: user_achievementUpdateManyWithoutUserNestedInput
    user_otp_email?: user_otp_emailUpdateManyWithoutUserNestedInput
    user_social_login?: user_social_loginUpdateManyWithoutUserNestedInput
    user_sso_login?: user_sso_loginUpdateManyWithoutUserNestedInput
    user_status?: user_statusUpdateManyWithoutUserNestedInput
    user_email_xref?: user_email_xrefUpdateManyWithoutUserNestedInput
    emails?: emailUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutDice_connectionInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    handle?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    activation_code?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    handle_lower?: NullableStringFieldUpdateOperationsInput | string | null
    timezone_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_in_another_language?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    open_id?: NullableStringFieldUpdateOperationsInput | string | null
    reg_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_medium?: NullableStringFieldUpdateOperationsInput | string | null
    utm_campaign?: NullableStringFieldUpdateOperationsInput | string | null
    user_2fa?: user_2faUncheckedUpdateOneWithoutUserNestedInput
    user_achievement?: user_achievementUncheckedUpdateManyWithoutUserNestedInput
    user_otp_email?: user_otp_emailUncheckedUpdateManyWithoutUserNestedInput
    user_social_login?: user_social_loginUncheckedUpdateManyWithoutUserNestedInput
    user_sso_login?: user_sso_loginUncheckedUpdateManyWithoutUserNestedInput
    user_status?: user_statusUncheckedUpdateManyWithoutUserNestedInput
    user_email_xref?: user_email_xrefUncheckedUpdateManyWithoutUserNestedInput
    emails?: emailUncheckedUpdateManyWithoutUserNestedInput
  }

  export type email_status_luCreateWithoutEmailInput = {
    status_id: Decimal | DecimalJsLike | number | string
    status_desc?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    user_email_xref?: user_email_xrefCreateNestedManyWithoutEmail_status_luInput
  }

  export type email_status_luUncheckedCreateWithoutEmailInput = {
    status_id: Decimal | DecimalJsLike | number | string
    status_desc?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    user_email_xref?: user_email_xrefUncheckedCreateNestedManyWithoutEmail_status_luInput
  }

  export type email_status_luCreateOrConnectWithoutEmailInput = {
    where: email_status_luWhereUniqueInput
    create: XOR<email_status_luCreateWithoutEmailInput, email_status_luUncheckedCreateWithoutEmailInput>
  }

  export type email_type_luCreateWithoutEmailInput = {
    email_type_id: Decimal | DecimalJsLike | number | string
    email_type_desc?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
  }

  export type email_type_luUncheckedCreateWithoutEmailInput = {
    email_type_id: Decimal | DecimalJsLike | number | string
    email_type_desc?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
  }

  export type email_type_luCreateOrConnectWithoutEmailInput = {
    where: email_type_luWhereUniqueInput
    create: XOR<email_type_luCreateWithoutEmailInput, email_type_luUncheckedCreateWithoutEmailInput>
  }

  export type user_email_xrefCreateWithoutEmailInput = {
    is_primary: boolean
    create_date?: Date | string | null
    modify_date?: Date | string | null
    user: userCreateNestedOneWithoutUser_email_xrefInput
    email_status_lu?: email_status_luCreateNestedOneWithoutUser_email_xrefInput
  }

  export type user_email_xrefUncheckedCreateWithoutEmailInput = {
    user_id: Decimal | DecimalJsLike | number | string
    is_primary: boolean
    status_id: Decimal | DecimalJsLike | number | string
    create_date?: Date | string | null
    modify_date?: Date | string | null
  }

  export type user_email_xrefCreateOrConnectWithoutEmailInput = {
    where: user_email_xrefWhereUniqueInput
    create: XOR<user_email_xrefCreateWithoutEmailInput, user_email_xrefUncheckedCreateWithoutEmailInput>
  }

  export type user_email_xrefCreateManyEmailInputEnvelope = {
    data: user_email_xrefCreateManyEmailInput | user_email_xrefCreateManyEmailInput[]
    skipDuplicates?: boolean
  }

  export type userCreateWithoutEmailsInput = {
    user_id?: Decimal | DecimalJsLike | number | string
    first_name?: string | null
    last_name?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    handle: string
    last_login?: Date | string | null
    status: string
    activation_code?: string | null
    middle_name?: string | null
    handle_lower?: string | null
    timezone_id?: Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: Date | string | null
    name_in_another_language?: string | null
    password?: string | null
    open_id?: string | null
    reg_source?: string | null
    utm_source?: string | null
    utm_medium?: string | null
    utm_campaign?: string | null
    dice_connection?: dice_connectionCreateNestedOneWithoutUserInput
    user_2fa?: user_2faCreateNestedOneWithoutUserInput
    user_achievement?: user_achievementCreateNestedManyWithoutUserInput
    user_otp_email?: user_otp_emailCreateNestedManyWithoutUserInput
    user_social_login?: user_social_loginCreateNestedManyWithoutUserInput
    user_sso_login?: user_sso_loginCreateNestedManyWithoutUserInput
    user_status?: user_statusCreateNestedManyWithoutUserInput
    user_email_xref?: user_email_xrefCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutEmailsInput = {
    user_id?: Decimal | DecimalJsLike | number | string
    first_name?: string | null
    last_name?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    handle: string
    last_login?: Date | string | null
    status: string
    activation_code?: string | null
    middle_name?: string | null
    handle_lower?: string | null
    timezone_id?: Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: Date | string | null
    name_in_another_language?: string | null
    password?: string | null
    open_id?: string | null
    reg_source?: string | null
    utm_source?: string | null
    utm_medium?: string | null
    utm_campaign?: string | null
    dice_connection?: dice_connectionUncheckedCreateNestedOneWithoutUserInput
    user_2fa?: user_2faUncheckedCreateNestedOneWithoutUserInput
    user_achievement?: user_achievementUncheckedCreateNestedManyWithoutUserInput
    user_otp_email?: user_otp_emailUncheckedCreateNestedManyWithoutUserInput
    user_social_login?: user_social_loginUncheckedCreateNestedManyWithoutUserInput
    user_sso_login?: user_sso_loginUncheckedCreateNestedManyWithoutUserInput
    user_status?: user_statusUncheckedCreateNestedManyWithoutUserInput
    user_email_xref?: user_email_xrefUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutEmailsInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutEmailsInput, userUncheckedCreateWithoutEmailsInput>
  }

  export type email_status_luUpsertWithoutEmailInput = {
    update: XOR<email_status_luUpdateWithoutEmailInput, email_status_luUncheckedUpdateWithoutEmailInput>
    create: XOR<email_status_luCreateWithoutEmailInput, email_status_luUncheckedCreateWithoutEmailInput>
    where?: email_status_luWhereInput
  }

  export type email_status_luUpdateToOneWithWhereWithoutEmailInput = {
    where?: email_status_luWhereInput
    data: XOR<email_status_luUpdateWithoutEmailInput, email_status_luUncheckedUpdateWithoutEmailInput>
  }

  export type email_status_luUpdateWithoutEmailInput = {
    status_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status_desc?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_email_xref?: user_email_xrefUpdateManyWithoutEmail_status_luNestedInput
  }

  export type email_status_luUncheckedUpdateWithoutEmailInput = {
    status_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status_desc?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_email_xref?: user_email_xrefUncheckedUpdateManyWithoutEmail_status_luNestedInput
  }

  export type email_type_luUpsertWithoutEmailInput = {
    update: XOR<email_type_luUpdateWithoutEmailInput, email_type_luUncheckedUpdateWithoutEmailInput>
    create: XOR<email_type_luCreateWithoutEmailInput, email_type_luUncheckedCreateWithoutEmailInput>
    where?: email_type_luWhereInput
  }

  export type email_type_luUpdateToOneWithWhereWithoutEmailInput = {
    where?: email_type_luWhereInput
    data: XOR<email_type_luUpdateWithoutEmailInput, email_type_luUncheckedUpdateWithoutEmailInput>
  }

  export type email_type_luUpdateWithoutEmailInput = {
    email_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    email_type_desc?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type email_type_luUncheckedUpdateWithoutEmailInput = {
    email_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    email_type_desc?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_email_xrefUpsertWithWhereUniqueWithoutEmailInput = {
    where: user_email_xrefWhereUniqueInput
    update: XOR<user_email_xrefUpdateWithoutEmailInput, user_email_xrefUncheckedUpdateWithoutEmailInput>
    create: XOR<user_email_xrefCreateWithoutEmailInput, user_email_xrefUncheckedCreateWithoutEmailInput>
  }

  export type user_email_xrefUpdateWithWhereUniqueWithoutEmailInput = {
    where: user_email_xrefWhereUniqueInput
    data: XOR<user_email_xrefUpdateWithoutEmailInput, user_email_xrefUncheckedUpdateWithoutEmailInput>
  }

  export type user_email_xrefUpdateManyWithWhereWithoutEmailInput = {
    where: user_email_xrefScalarWhereInput
    data: XOR<user_email_xrefUpdateManyMutationInput, user_email_xrefUncheckedUpdateManyWithoutEmailInput>
  }

  export type user_email_xrefScalarWhereInput = {
    AND?: user_email_xrefScalarWhereInput | user_email_xrefScalarWhereInput[]
    OR?: user_email_xrefScalarWhereInput[]
    NOT?: user_email_xrefScalarWhereInput | user_email_xrefScalarWhereInput[]
    user_id?: DecimalFilter<"user_email_xref"> | Decimal | DecimalJsLike | number | string
    email_id?: DecimalFilter<"user_email_xref"> | Decimal | DecimalJsLike | number | string
    is_primary?: BoolFilter<"user_email_xref"> | boolean
    status_id?: DecimalFilter<"user_email_xref"> | Decimal | DecimalJsLike | number | string
    create_date?: DateTimeNullableFilter<"user_email_xref"> | Date | string | null
    modify_date?: DateTimeNullableFilter<"user_email_xref"> | Date | string | null
  }

  export type userUpsertWithoutEmailsInput = {
    update: XOR<userUpdateWithoutEmailsInput, userUncheckedUpdateWithoutEmailsInput>
    create: XOR<userCreateWithoutEmailsInput, userUncheckedCreateWithoutEmailsInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutEmailsInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutEmailsInput, userUncheckedUpdateWithoutEmailsInput>
  }

  export type userUpdateWithoutEmailsInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    handle?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    activation_code?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    handle_lower?: NullableStringFieldUpdateOperationsInput | string | null
    timezone_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_in_another_language?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    open_id?: NullableStringFieldUpdateOperationsInput | string | null
    reg_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_medium?: NullableStringFieldUpdateOperationsInput | string | null
    utm_campaign?: NullableStringFieldUpdateOperationsInput | string | null
    dice_connection?: dice_connectionUpdateOneWithoutUserNestedInput
    user_2fa?: user_2faUpdateOneWithoutUserNestedInput
    user_achievement?: user_achievementUpdateManyWithoutUserNestedInput
    user_otp_email?: user_otp_emailUpdateManyWithoutUserNestedInput
    user_social_login?: user_social_loginUpdateManyWithoutUserNestedInput
    user_sso_login?: user_sso_loginUpdateManyWithoutUserNestedInput
    user_status?: user_statusUpdateManyWithoutUserNestedInput
    user_email_xref?: user_email_xrefUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutEmailsInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    handle?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    activation_code?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    handle_lower?: NullableStringFieldUpdateOperationsInput | string | null
    timezone_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_in_another_language?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    open_id?: NullableStringFieldUpdateOperationsInput | string | null
    reg_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_medium?: NullableStringFieldUpdateOperationsInput | string | null
    utm_campaign?: NullableStringFieldUpdateOperationsInput | string | null
    dice_connection?: dice_connectionUncheckedUpdateOneWithoutUserNestedInput
    user_2fa?: user_2faUncheckedUpdateOneWithoutUserNestedInput
    user_achievement?: user_achievementUncheckedUpdateManyWithoutUserNestedInput
    user_otp_email?: user_otp_emailUncheckedUpdateManyWithoutUserNestedInput
    user_social_login?: user_social_loginUncheckedUpdateManyWithoutUserNestedInput
    user_sso_login?: user_sso_loginUncheckedUpdateManyWithoutUserNestedInput
    user_status?: user_statusUncheckedUpdateManyWithoutUserNestedInput
    user_email_xref?: user_email_xrefUncheckedUpdateManyWithoutUserNestedInput
  }

  export type emailCreateWithoutEmail_status_luInput = {
    email_id?: Decimal | DecimalJsLike | number | string
    address?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    primary_ind?: Decimal | DecimalJsLike | number | string | null
    email_type_lu?: email_type_luCreateNestedOneWithoutEmailInput
    user_email_xref?: user_email_xrefCreateNestedManyWithoutEmailInput
    user?: userCreateNestedOneWithoutEmailsInput
  }

  export type emailUncheckedCreateWithoutEmail_status_luInput = {
    user_id?: Decimal | DecimalJsLike | number | string | null
    email_id?: Decimal | DecimalJsLike | number | string
    email_type_id?: Decimal | DecimalJsLike | number | string | null
    address?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    primary_ind?: Decimal | DecimalJsLike | number | string | null
    user_email_xref?: user_email_xrefUncheckedCreateNestedManyWithoutEmailInput
  }

  export type emailCreateOrConnectWithoutEmail_status_luInput = {
    where: emailWhereUniqueInput
    create: XOR<emailCreateWithoutEmail_status_luInput, emailUncheckedCreateWithoutEmail_status_luInput>
  }

  export type emailCreateManyEmail_status_luInputEnvelope = {
    data: emailCreateManyEmail_status_luInput | emailCreateManyEmail_status_luInput[]
    skipDuplicates?: boolean
  }

  export type user_email_xrefCreateWithoutEmail_status_luInput = {
    is_primary: boolean
    create_date?: Date | string | null
    modify_date?: Date | string | null
    user: userCreateNestedOneWithoutUser_email_xrefInput
    email: emailCreateNestedOneWithoutUser_email_xrefInput
  }

  export type user_email_xrefUncheckedCreateWithoutEmail_status_luInput = {
    user_id: Decimal | DecimalJsLike | number | string
    email_id: Decimal | DecimalJsLike | number | string
    is_primary: boolean
    create_date?: Date | string | null
    modify_date?: Date | string | null
  }

  export type user_email_xrefCreateOrConnectWithoutEmail_status_luInput = {
    where: user_email_xrefWhereUniqueInput
    create: XOR<user_email_xrefCreateWithoutEmail_status_luInput, user_email_xrefUncheckedCreateWithoutEmail_status_luInput>
  }

  export type user_email_xrefCreateManyEmail_status_luInputEnvelope = {
    data: user_email_xrefCreateManyEmail_status_luInput | user_email_xrefCreateManyEmail_status_luInput[]
    skipDuplicates?: boolean
  }

  export type emailUpsertWithWhereUniqueWithoutEmail_status_luInput = {
    where: emailWhereUniqueInput
    update: XOR<emailUpdateWithoutEmail_status_luInput, emailUncheckedUpdateWithoutEmail_status_luInput>
    create: XOR<emailCreateWithoutEmail_status_luInput, emailUncheckedCreateWithoutEmail_status_luInput>
  }

  export type emailUpdateWithWhereUniqueWithoutEmail_status_luInput = {
    where: emailWhereUniqueInput
    data: XOR<emailUpdateWithoutEmail_status_luInput, emailUncheckedUpdateWithoutEmail_status_luInput>
  }

  export type emailUpdateManyWithWhereWithoutEmail_status_luInput = {
    where: emailScalarWhereInput
    data: XOR<emailUpdateManyMutationInput, emailUncheckedUpdateManyWithoutEmail_status_luInput>
  }

  export type emailScalarWhereInput = {
    AND?: emailScalarWhereInput | emailScalarWhereInput[]
    OR?: emailScalarWhereInput[]
    NOT?: emailScalarWhereInput | emailScalarWhereInput[]
    user_id?: DecimalNullableFilter<"email"> | Decimal | DecimalJsLike | number | string | null
    email_id?: DecimalFilter<"email"> | Decimal | DecimalJsLike | number | string
    email_type_id?: DecimalNullableFilter<"email"> | Decimal | DecimalJsLike | number | string | null
    address?: StringNullableFilter<"email"> | string | null
    create_date?: DateTimeNullableFilter<"email"> | Date | string | null
    modify_date?: DateTimeNullableFilter<"email"> | Date | string | null
    primary_ind?: DecimalNullableFilter<"email"> | Decimal | DecimalJsLike | number | string | null
    status_id?: DecimalNullableFilter<"email"> | Decimal | DecimalJsLike | number | string | null
  }

  export type user_email_xrefUpsertWithWhereUniqueWithoutEmail_status_luInput = {
    where: user_email_xrefWhereUniqueInput
    update: XOR<user_email_xrefUpdateWithoutEmail_status_luInput, user_email_xrefUncheckedUpdateWithoutEmail_status_luInput>
    create: XOR<user_email_xrefCreateWithoutEmail_status_luInput, user_email_xrefUncheckedCreateWithoutEmail_status_luInput>
  }

  export type user_email_xrefUpdateWithWhereUniqueWithoutEmail_status_luInput = {
    where: user_email_xrefWhereUniqueInput
    data: XOR<user_email_xrefUpdateWithoutEmail_status_luInput, user_email_xrefUncheckedUpdateWithoutEmail_status_luInput>
  }

  export type user_email_xrefUpdateManyWithWhereWithoutEmail_status_luInput = {
    where: user_email_xrefScalarWhereInput
    data: XOR<user_email_xrefUpdateManyMutationInput, user_email_xrefUncheckedUpdateManyWithoutEmail_status_luInput>
  }

  export type emailCreateWithoutEmail_type_luInput = {
    email_id?: Decimal | DecimalJsLike | number | string
    address?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    primary_ind?: Decimal | DecimalJsLike | number | string | null
    email_status_lu?: email_status_luCreateNestedOneWithoutEmailInput
    user_email_xref?: user_email_xrefCreateNestedManyWithoutEmailInput
    user?: userCreateNestedOneWithoutEmailsInput
  }

  export type emailUncheckedCreateWithoutEmail_type_luInput = {
    user_id?: Decimal | DecimalJsLike | number | string | null
    email_id?: Decimal | DecimalJsLike | number | string
    address?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    primary_ind?: Decimal | DecimalJsLike | number | string | null
    status_id?: Decimal | DecimalJsLike | number | string | null
    user_email_xref?: user_email_xrefUncheckedCreateNestedManyWithoutEmailInput
  }

  export type emailCreateOrConnectWithoutEmail_type_luInput = {
    where: emailWhereUniqueInput
    create: XOR<emailCreateWithoutEmail_type_luInput, emailUncheckedCreateWithoutEmail_type_luInput>
  }

  export type emailCreateManyEmail_type_luInputEnvelope = {
    data: emailCreateManyEmail_type_luInput | emailCreateManyEmail_type_luInput[]
    skipDuplicates?: boolean
  }

  export type emailUpsertWithWhereUniqueWithoutEmail_type_luInput = {
    where: emailWhereUniqueInput
    update: XOR<emailUpdateWithoutEmail_type_luInput, emailUncheckedUpdateWithoutEmail_type_luInput>
    create: XOR<emailCreateWithoutEmail_type_luInput, emailUncheckedCreateWithoutEmail_type_luInput>
  }

  export type emailUpdateWithWhereUniqueWithoutEmail_type_luInput = {
    where: emailWhereUniqueInput
    data: XOR<emailUpdateWithoutEmail_type_luInput, emailUncheckedUpdateWithoutEmail_type_luInput>
  }

  export type emailUpdateManyWithWhereWithoutEmail_type_luInput = {
    where: emailScalarWhereInput
    data: XOR<emailUpdateManyMutationInput, emailUncheckedUpdateManyWithoutEmail_type_luInput>
  }

  export type user_group_xrefCreateWithoutSecurity_groupsInput = {
    user_group_id: Decimal | DecimalJsLike | number | string
    create_user_id?: Decimal | DecimalJsLike | number | string | null
    create_date?: Date | string | null
    security_user?: security_userCreateNestedOneWithoutUser_group_xrefInput
    security_status_lu?: security_status_luCreateNestedOneWithoutUser_group_xrefInput
  }

  export type user_group_xrefUncheckedCreateWithoutSecurity_groupsInput = {
    user_group_id: Decimal | DecimalJsLike | number | string
    login_id?: Decimal | DecimalJsLike | number | string | null
    create_user_id?: Decimal | DecimalJsLike | number | string | null
    security_status_id?: Decimal | DecimalJsLike | number | string | null
    create_date?: Date | string | null
  }

  export type user_group_xrefCreateOrConnectWithoutSecurity_groupsInput = {
    where: user_group_xrefWhereUniqueInput
    create: XOR<user_group_xrefCreateWithoutSecurity_groupsInput, user_group_xrefUncheckedCreateWithoutSecurity_groupsInput>
  }

  export type user_group_xrefCreateManySecurity_groupsInputEnvelope = {
    data: user_group_xrefCreateManySecurity_groupsInput | user_group_xrefCreateManySecurity_groupsInput[]
    skipDuplicates?: boolean
  }

  export type user_group_xrefUpsertWithWhereUniqueWithoutSecurity_groupsInput = {
    where: user_group_xrefWhereUniqueInput
    update: XOR<user_group_xrefUpdateWithoutSecurity_groupsInput, user_group_xrefUncheckedUpdateWithoutSecurity_groupsInput>
    create: XOR<user_group_xrefCreateWithoutSecurity_groupsInput, user_group_xrefUncheckedCreateWithoutSecurity_groupsInput>
  }

  export type user_group_xrefUpdateWithWhereUniqueWithoutSecurity_groupsInput = {
    where: user_group_xrefWhereUniqueInput
    data: XOR<user_group_xrefUpdateWithoutSecurity_groupsInput, user_group_xrefUncheckedUpdateWithoutSecurity_groupsInput>
  }

  export type user_group_xrefUpdateManyWithWhereWithoutSecurity_groupsInput = {
    where: user_group_xrefScalarWhereInput
    data: XOR<user_group_xrefUpdateManyMutationInput, user_group_xrefUncheckedUpdateManyWithoutSecurity_groupsInput>
  }

  export type user_group_xrefScalarWhereInput = {
    AND?: user_group_xrefScalarWhereInput | user_group_xrefScalarWhereInput[]
    OR?: user_group_xrefScalarWhereInput[]
    NOT?: user_group_xrefScalarWhereInput | user_group_xrefScalarWhereInput[]
    user_group_id?: DecimalFilter<"user_group_xref"> | Decimal | DecimalJsLike | number | string
    login_id?: DecimalNullableFilter<"user_group_xref"> | Decimal | DecimalJsLike | number | string | null
    group_id?: DecimalNullableFilter<"user_group_xref"> | Decimal | DecimalJsLike | number | string | null
    create_user_id?: DecimalNullableFilter<"user_group_xref"> | Decimal | DecimalJsLike | number | string | null
    security_status_id?: DecimalNullableFilter<"user_group_xref"> | Decimal | DecimalJsLike | number | string | null
    create_date?: DateTimeNullableFilter<"user_group_xref"> | Date | string | null
  }

  export type user_group_xrefCreateWithoutSecurity_status_luInput = {
    user_group_id: Decimal | DecimalJsLike | number | string
    create_user_id?: Decimal | DecimalJsLike | number | string | null
    create_date?: Date | string | null
    security_user?: security_userCreateNestedOneWithoutUser_group_xrefInput
    security_groups?: security_groupsCreateNestedOneWithoutUser_group_xrefInput
  }

  export type user_group_xrefUncheckedCreateWithoutSecurity_status_luInput = {
    user_group_id: Decimal | DecimalJsLike | number | string
    login_id?: Decimal | DecimalJsLike | number | string | null
    group_id?: Decimal | DecimalJsLike | number | string | null
    create_user_id?: Decimal | DecimalJsLike | number | string | null
    create_date?: Date | string | null
  }

  export type user_group_xrefCreateOrConnectWithoutSecurity_status_luInput = {
    where: user_group_xrefWhereUniqueInput
    create: XOR<user_group_xrefCreateWithoutSecurity_status_luInput, user_group_xrefUncheckedCreateWithoutSecurity_status_luInput>
  }

  export type user_group_xrefCreateManySecurity_status_luInputEnvelope = {
    data: user_group_xrefCreateManySecurity_status_luInput | user_group_xrefCreateManySecurity_status_luInput[]
    skipDuplicates?: boolean
  }

  export type user_group_xrefUpsertWithWhereUniqueWithoutSecurity_status_luInput = {
    where: user_group_xrefWhereUniqueInput
    update: XOR<user_group_xrefUpdateWithoutSecurity_status_luInput, user_group_xrefUncheckedUpdateWithoutSecurity_status_luInput>
    create: XOR<user_group_xrefCreateWithoutSecurity_status_luInput, user_group_xrefUncheckedCreateWithoutSecurity_status_luInput>
  }

  export type user_group_xrefUpdateWithWhereUniqueWithoutSecurity_status_luInput = {
    where: user_group_xrefWhereUniqueInput
    data: XOR<user_group_xrefUpdateWithoutSecurity_status_luInput, user_group_xrefUncheckedUpdateWithoutSecurity_status_luInput>
  }

  export type user_group_xrefUpdateManyWithWhereWithoutSecurity_status_luInput = {
    where: user_group_xrefScalarWhereInput
    data: XOR<user_group_xrefUpdateManyMutationInput, user_group_xrefUncheckedUpdateManyWithoutSecurity_status_luInput>
  }

  export type user_group_xrefCreateWithoutSecurity_userInput = {
    user_group_id: Decimal | DecimalJsLike | number | string
    create_user_id?: Decimal | DecimalJsLike | number | string | null
    create_date?: Date | string | null
    security_groups?: security_groupsCreateNestedOneWithoutUser_group_xrefInput
    security_status_lu?: security_status_luCreateNestedOneWithoutUser_group_xrefInput
  }

  export type user_group_xrefUncheckedCreateWithoutSecurity_userInput = {
    user_group_id: Decimal | DecimalJsLike | number | string
    group_id?: Decimal | DecimalJsLike | number | string | null
    create_user_id?: Decimal | DecimalJsLike | number | string | null
    security_status_id?: Decimal | DecimalJsLike | number | string | null
    create_date?: Date | string | null
  }

  export type user_group_xrefCreateOrConnectWithoutSecurity_userInput = {
    where: user_group_xrefWhereUniqueInput
    create: XOR<user_group_xrefCreateWithoutSecurity_userInput, user_group_xrefUncheckedCreateWithoutSecurity_userInput>
  }

  export type user_group_xrefCreateManySecurity_userInputEnvelope = {
    data: user_group_xrefCreateManySecurity_userInput | user_group_xrefCreateManySecurity_userInput[]
    skipDuplicates?: boolean
  }

  export type user_group_xrefUpsertWithWhereUniqueWithoutSecurity_userInput = {
    where: user_group_xrefWhereUniqueInput
    update: XOR<user_group_xrefUpdateWithoutSecurity_userInput, user_group_xrefUncheckedUpdateWithoutSecurity_userInput>
    create: XOR<user_group_xrefCreateWithoutSecurity_userInput, user_group_xrefUncheckedCreateWithoutSecurity_userInput>
  }

  export type user_group_xrefUpdateWithWhereUniqueWithoutSecurity_userInput = {
    where: user_group_xrefWhereUniqueInput
    data: XOR<user_group_xrefUpdateWithoutSecurity_userInput, user_group_xrefUncheckedUpdateWithoutSecurity_userInput>
  }

  export type user_group_xrefUpdateManyWithWhereWithoutSecurity_userInput = {
    where: user_group_xrefScalarWhereInput
    data: XOR<user_group_xrefUpdateManyMutationInput, user_group_xrefUncheckedUpdateManyWithoutSecurity_userInput>
  }

  export type user_social_loginCreateWithoutSocial_login_providerInput = {
    social_user_id?: string | null
    social_user_name: string
    social_email?: string | null
    social_email_verified?: boolean | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    user: userCreateNestedOneWithoutUser_social_loginInput
  }

  export type user_social_loginUncheckedCreateWithoutSocial_login_providerInput = {
    social_user_id?: string | null
    user_id: Decimal | DecimalJsLike | number | string
    social_user_name: string
    social_email?: string | null
    social_email_verified?: boolean | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
  }

  export type user_social_loginCreateOrConnectWithoutSocial_login_providerInput = {
    where: user_social_loginWhereUniqueInput
    create: XOR<user_social_loginCreateWithoutSocial_login_providerInput, user_social_loginUncheckedCreateWithoutSocial_login_providerInput>
  }

  export type user_social_loginCreateManySocial_login_providerInputEnvelope = {
    data: user_social_loginCreateManySocial_login_providerInput | user_social_loginCreateManySocial_login_providerInput[]
    skipDuplicates?: boolean
  }

  export type user_social_loginUpsertWithWhereUniqueWithoutSocial_login_providerInput = {
    where: user_social_loginWhereUniqueInput
    update: XOR<user_social_loginUpdateWithoutSocial_login_providerInput, user_social_loginUncheckedUpdateWithoutSocial_login_providerInput>
    create: XOR<user_social_loginCreateWithoutSocial_login_providerInput, user_social_loginUncheckedCreateWithoutSocial_login_providerInput>
  }

  export type user_social_loginUpdateWithWhereUniqueWithoutSocial_login_providerInput = {
    where: user_social_loginWhereUniqueInput
    data: XOR<user_social_loginUpdateWithoutSocial_login_providerInput, user_social_loginUncheckedUpdateWithoutSocial_login_providerInput>
  }

  export type user_social_loginUpdateManyWithWhereWithoutSocial_login_providerInput = {
    where: user_social_loginScalarWhereInput
    data: XOR<user_social_loginUpdateManyMutationInput, user_social_loginUncheckedUpdateManyWithoutSocial_login_providerInput>
  }

  export type user_social_loginScalarWhereInput = {
    AND?: user_social_loginScalarWhereInput | user_social_loginScalarWhereInput[]
    OR?: user_social_loginScalarWhereInput[]
    NOT?: user_social_loginScalarWhereInput | user_social_loginScalarWhereInput[]
    social_user_id?: StringNullableFilter<"user_social_login"> | string | null
    user_id?: DecimalFilter<"user_social_login"> | Decimal | DecimalJsLike | number | string
    social_login_provider_id?: DecimalFilter<"user_social_login"> | Decimal | DecimalJsLike | number | string
    social_user_name?: StringFilter<"user_social_login"> | string
    social_email?: StringNullableFilter<"user_social_login"> | string | null
    social_email_verified?: BoolNullableFilter<"user_social_login"> | boolean | null
    create_date?: DateTimeNullableFilter<"user_social_login"> | Date | string | null
    modify_date?: DateTimeNullableFilter<"user_social_login"> | Date | string | null
  }

  export type user_sso_loginCreateWithoutSso_login_providerInput = {
    sso_user_id: string
    sso_user_name?: string | null
    email?: string | null
    user: userCreateNestedOneWithoutUser_sso_loginInput
  }

  export type user_sso_loginUncheckedCreateWithoutSso_login_providerInput = {
    user_id: Decimal | DecimalJsLike | number | string
    sso_user_id: string
    sso_user_name?: string | null
    email?: string | null
  }

  export type user_sso_loginCreateOrConnectWithoutSso_login_providerInput = {
    where: user_sso_loginWhereUniqueInput
    create: XOR<user_sso_loginCreateWithoutSso_login_providerInput, user_sso_loginUncheckedCreateWithoutSso_login_providerInput>
  }

  export type user_sso_loginCreateManySso_login_providerInputEnvelope = {
    data: user_sso_loginCreateManySso_login_providerInput | user_sso_loginCreateManySso_login_providerInput[]
    skipDuplicates?: boolean
  }

  export type user_sso_loginUpsertWithWhereUniqueWithoutSso_login_providerInput = {
    where: user_sso_loginWhereUniqueInput
    update: XOR<user_sso_loginUpdateWithoutSso_login_providerInput, user_sso_loginUncheckedUpdateWithoutSso_login_providerInput>
    create: XOR<user_sso_loginCreateWithoutSso_login_providerInput, user_sso_loginUncheckedCreateWithoutSso_login_providerInput>
  }

  export type user_sso_loginUpdateWithWhereUniqueWithoutSso_login_providerInput = {
    where: user_sso_loginWhereUniqueInput
    data: XOR<user_sso_loginUpdateWithoutSso_login_providerInput, user_sso_loginUncheckedUpdateWithoutSso_login_providerInput>
  }

  export type user_sso_loginUpdateManyWithWhereWithoutSso_login_providerInput = {
    where: user_sso_loginScalarWhereInput
    data: XOR<user_sso_loginUpdateManyMutationInput, user_sso_loginUncheckedUpdateManyWithoutSso_login_providerInput>
  }

  export type user_sso_loginScalarWhereInput = {
    AND?: user_sso_loginScalarWhereInput | user_sso_loginScalarWhereInput[]
    OR?: user_sso_loginScalarWhereInput[]
    NOT?: user_sso_loginScalarWhereInput | user_sso_loginScalarWhereInput[]
    user_id?: DecimalFilter<"user_sso_login"> | Decimal | DecimalJsLike | number | string
    sso_user_id?: StringFilter<"user_sso_login"> | string
    sso_user_name?: StringNullableFilter<"user_sso_login"> | string | null
    provider_id?: DecimalFilter<"user_sso_login"> | Decimal | DecimalJsLike | number | string
    email?: StringNullableFilter<"user_sso_login"> | string | null
  }

  export type dice_connectionCreateWithoutUserInput = {
    connection?: string | null
    accepted?: boolean
    created_at?: Date | string
    short_url?: string | null
    con_created_at?: Date | string | null
  }

  export type dice_connectionUncheckedCreateWithoutUserInput = {
    id?: number
    connection?: string | null
    accepted?: boolean
    created_at?: Date | string
    short_url?: string | null
    con_created_at?: Date | string | null
  }

  export type dice_connectionCreateOrConnectWithoutUserInput = {
    where: dice_connectionWhereUniqueInput
    create: XOR<dice_connectionCreateWithoutUserInput, dice_connectionUncheckedCreateWithoutUserInput>
  }

  export type user_2faCreateWithoutUserInput = {
    mfa_enabled?: boolean
    dice_enabled?: boolean
    created_by: Decimal | DecimalJsLike | number | string
    created_at?: Date | string
    modified_by: Decimal | DecimalJsLike | number | string
    modified_at?: Date | string
  }

  export type user_2faUncheckedCreateWithoutUserInput = {
    id?: number
    mfa_enabled?: boolean
    dice_enabled?: boolean
    created_by: Decimal | DecimalJsLike | number | string
    created_at?: Date | string
    modified_by: Decimal | DecimalJsLike | number | string
    modified_at?: Date | string
  }

  export type user_2faCreateOrConnectWithoutUserInput = {
    where: user_2faWhereUniqueInput
    create: XOR<user_2faCreateWithoutUserInput, user_2faUncheckedCreateWithoutUserInput>
  }

  export type user_achievementCreateWithoutUserInput = {
    achievement_date: Date | string
    description?: string | null
    create_date?: Date | string | null
    achievement_type_lu: achievement_type_luCreateNestedOneWithoutUser_achievementInput
  }

  export type user_achievementUncheckedCreateWithoutUserInput = {
    achievement_date: Date | string
    achievement_type_id: Decimal | DecimalJsLike | number | string
    description?: string | null
    create_date?: Date | string | null
  }

  export type user_achievementCreateOrConnectWithoutUserInput = {
    where: user_achievementWhereUniqueInput
    create: XOR<user_achievementCreateWithoutUserInput, user_achievementUncheckedCreateWithoutUserInput>
  }

  export type user_achievementCreateManyUserInputEnvelope = {
    data: user_achievementCreateManyUserInput | user_achievementCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type user_otp_emailCreateWithoutUserInput = {
    mode: number
    otp: string
    expire_at: Date | string
    resend?: boolean
    fail_count?: number
  }

  export type user_otp_emailUncheckedCreateWithoutUserInput = {
    id?: number
    mode: number
    otp: string
    expire_at: Date | string
    resend?: boolean
    fail_count?: number
  }

  export type user_otp_emailCreateOrConnectWithoutUserInput = {
    where: user_otp_emailWhereUniqueInput
    create: XOR<user_otp_emailCreateWithoutUserInput, user_otp_emailUncheckedCreateWithoutUserInput>
  }

  export type user_otp_emailCreateManyUserInputEnvelope = {
    data: user_otp_emailCreateManyUserInput | user_otp_emailCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type user_social_loginCreateWithoutUserInput = {
    social_user_id?: string | null
    social_user_name: string
    social_email?: string | null
    social_email_verified?: boolean | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    social_login_provider: social_login_providerCreateNestedOneWithoutUser_social_loginInput
  }

  export type user_social_loginUncheckedCreateWithoutUserInput = {
    social_user_id?: string | null
    social_login_provider_id: Decimal | DecimalJsLike | number | string
    social_user_name: string
    social_email?: string | null
    social_email_verified?: boolean | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
  }

  export type user_social_loginCreateOrConnectWithoutUserInput = {
    where: user_social_loginWhereUniqueInput
    create: XOR<user_social_loginCreateWithoutUserInput, user_social_loginUncheckedCreateWithoutUserInput>
  }

  export type user_social_loginCreateManyUserInputEnvelope = {
    data: user_social_loginCreateManyUserInput | user_social_loginCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type user_sso_loginCreateWithoutUserInput = {
    sso_user_id: string
    sso_user_name?: string | null
    email?: string | null
    sso_login_provider: sso_login_providerCreateNestedOneWithoutUser_sso_loginInput
  }

  export type user_sso_loginUncheckedCreateWithoutUserInput = {
    sso_user_id: string
    sso_user_name?: string | null
    provider_id: Decimal | DecimalJsLike | number | string
    email?: string | null
  }

  export type user_sso_loginCreateOrConnectWithoutUserInput = {
    where: user_sso_loginWhereUniqueInput
    create: XOR<user_sso_loginCreateWithoutUserInput, user_sso_loginUncheckedCreateWithoutUserInput>
  }

  export type user_sso_loginCreateManyUserInputEnvelope = {
    data: user_sso_loginCreateManyUserInput | user_sso_loginCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type user_statusCreateWithoutUserInput = {
    user_status_lu?: user_status_luCreateNestedOneWithoutUser_statusInput
    user_status_type_lu: user_status_type_luCreateNestedOneWithoutUser_statusInput
  }

  export type user_statusUncheckedCreateWithoutUserInput = {
    user_status_type_id: Decimal | DecimalJsLike | number | string
    user_status_id?: Decimal | DecimalJsLike | number | string | null
  }

  export type user_statusCreateOrConnectWithoutUserInput = {
    where: user_statusWhereUniqueInput
    create: XOR<user_statusCreateWithoutUserInput, user_statusUncheckedCreateWithoutUserInput>
  }

  export type user_statusCreateManyUserInputEnvelope = {
    data: user_statusCreateManyUserInput | user_statusCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type user_email_xrefCreateWithoutUserInput = {
    is_primary: boolean
    create_date?: Date | string | null
    modify_date?: Date | string | null
    email: emailCreateNestedOneWithoutUser_email_xrefInput
    email_status_lu?: email_status_luCreateNestedOneWithoutUser_email_xrefInput
  }

  export type user_email_xrefUncheckedCreateWithoutUserInput = {
    email_id: Decimal | DecimalJsLike | number | string
    is_primary: boolean
    status_id: Decimal | DecimalJsLike | number | string
    create_date?: Date | string | null
    modify_date?: Date | string | null
  }

  export type user_email_xrefCreateOrConnectWithoutUserInput = {
    where: user_email_xrefWhereUniqueInput
    create: XOR<user_email_xrefCreateWithoutUserInput, user_email_xrefUncheckedCreateWithoutUserInput>
  }

  export type user_email_xrefCreateManyUserInputEnvelope = {
    data: user_email_xrefCreateManyUserInput | user_email_xrefCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type emailCreateWithoutUserInput = {
    email_id?: Decimal | DecimalJsLike | number | string
    address?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    primary_ind?: Decimal | DecimalJsLike | number | string | null
    email_status_lu?: email_status_luCreateNestedOneWithoutEmailInput
    email_type_lu?: email_type_luCreateNestedOneWithoutEmailInput
    user_email_xref?: user_email_xrefCreateNestedManyWithoutEmailInput
  }

  export type emailUncheckedCreateWithoutUserInput = {
    email_id?: Decimal | DecimalJsLike | number | string
    email_type_id?: Decimal | DecimalJsLike | number | string | null
    address?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    primary_ind?: Decimal | DecimalJsLike | number | string | null
    status_id?: Decimal | DecimalJsLike | number | string | null
    user_email_xref?: user_email_xrefUncheckedCreateNestedManyWithoutEmailInput
  }

  export type emailCreateOrConnectWithoutUserInput = {
    where: emailWhereUniqueInput
    create: XOR<emailCreateWithoutUserInput, emailUncheckedCreateWithoutUserInput>
  }

  export type emailCreateManyUserInputEnvelope = {
    data: emailCreateManyUserInput | emailCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type dice_connectionUpsertWithoutUserInput = {
    update: XOR<dice_connectionUpdateWithoutUserInput, dice_connectionUncheckedUpdateWithoutUserInput>
    create: XOR<dice_connectionCreateWithoutUserInput, dice_connectionUncheckedCreateWithoutUserInput>
    where?: dice_connectionWhereInput
  }

  export type dice_connectionUpdateToOneWithWhereWithoutUserInput = {
    where?: dice_connectionWhereInput
    data: XOR<dice_connectionUpdateWithoutUserInput, dice_connectionUncheckedUpdateWithoutUserInput>
  }

  export type dice_connectionUpdateWithoutUserInput = {
    connection?: NullableStringFieldUpdateOperationsInput | string | null
    accepted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    short_url?: NullableStringFieldUpdateOperationsInput | string | null
    con_created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type dice_connectionUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    connection?: NullableStringFieldUpdateOperationsInput | string | null
    accepted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    short_url?: NullableStringFieldUpdateOperationsInput | string | null
    con_created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_2faUpsertWithoutUserInput = {
    update: XOR<user_2faUpdateWithoutUserInput, user_2faUncheckedUpdateWithoutUserInput>
    create: XOR<user_2faCreateWithoutUserInput, user_2faUncheckedCreateWithoutUserInput>
    where?: user_2faWhereInput
  }

  export type user_2faUpdateToOneWithWhereWithoutUserInput = {
    where?: user_2faWhereInput
    data: XOR<user_2faUpdateWithoutUserInput, user_2faUncheckedUpdateWithoutUserInput>
  }

  export type user_2faUpdateWithoutUserInput = {
    mfa_enabled?: BoolFieldUpdateOperationsInput | boolean
    dice_enabled?: BoolFieldUpdateOperationsInput | boolean
    created_by?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_by?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_2faUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    mfa_enabled?: BoolFieldUpdateOperationsInput | boolean
    dice_enabled?: BoolFieldUpdateOperationsInput | boolean
    created_by?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modified_by?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    modified_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_achievementUpsertWithWhereUniqueWithoutUserInput = {
    where: user_achievementWhereUniqueInput
    update: XOR<user_achievementUpdateWithoutUserInput, user_achievementUncheckedUpdateWithoutUserInput>
    create: XOR<user_achievementCreateWithoutUserInput, user_achievementUncheckedCreateWithoutUserInput>
  }

  export type user_achievementUpdateWithWhereUniqueWithoutUserInput = {
    where: user_achievementWhereUniqueInput
    data: XOR<user_achievementUpdateWithoutUserInput, user_achievementUncheckedUpdateWithoutUserInput>
  }

  export type user_achievementUpdateManyWithWhereWithoutUserInput = {
    where: user_achievementScalarWhereInput
    data: XOR<user_achievementUpdateManyMutationInput, user_achievementUncheckedUpdateManyWithoutUserInput>
  }

  export type user_otp_emailUpsertWithWhereUniqueWithoutUserInput = {
    where: user_otp_emailWhereUniqueInput
    update: XOR<user_otp_emailUpdateWithoutUserInput, user_otp_emailUncheckedUpdateWithoutUserInput>
    create: XOR<user_otp_emailCreateWithoutUserInput, user_otp_emailUncheckedCreateWithoutUserInput>
  }

  export type user_otp_emailUpdateWithWhereUniqueWithoutUserInput = {
    where: user_otp_emailWhereUniqueInput
    data: XOR<user_otp_emailUpdateWithoutUserInput, user_otp_emailUncheckedUpdateWithoutUserInput>
  }

  export type user_otp_emailUpdateManyWithWhereWithoutUserInput = {
    where: user_otp_emailScalarWhereInput
    data: XOR<user_otp_emailUpdateManyMutationInput, user_otp_emailUncheckedUpdateManyWithoutUserInput>
  }

  export type user_otp_emailScalarWhereInput = {
    AND?: user_otp_emailScalarWhereInput | user_otp_emailScalarWhereInput[]
    OR?: user_otp_emailScalarWhereInput[]
    NOT?: user_otp_emailScalarWhereInput | user_otp_emailScalarWhereInput[]
    id?: IntFilter<"user_otp_email"> | number
    user_id?: DecimalFilter<"user_otp_email"> | Decimal | DecimalJsLike | number | string
    mode?: IntFilter<"user_otp_email"> | number
    otp?: StringFilter<"user_otp_email"> | string
    expire_at?: DateTimeFilter<"user_otp_email"> | Date | string
    resend?: BoolFilter<"user_otp_email"> | boolean
    fail_count?: IntFilter<"user_otp_email"> | number
  }

  export type user_social_loginUpsertWithWhereUniqueWithoutUserInput = {
    where: user_social_loginWhereUniqueInput
    update: XOR<user_social_loginUpdateWithoutUserInput, user_social_loginUncheckedUpdateWithoutUserInput>
    create: XOR<user_social_loginCreateWithoutUserInput, user_social_loginUncheckedCreateWithoutUserInput>
  }

  export type user_social_loginUpdateWithWhereUniqueWithoutUserInput = {
    where: user_social_loginWhereUniqueInput
    data: XOR<user_social_loginUpdateWithoutUserInput, user_social_loginUncheckedUpdateWithoutUserInput>
  }

  export type user_social_loginUpdateManyWithWhereWithoutUserInput = {
    where: user_social_loginScalarWhereInput
    data: XOR<user_social_loginUpdateManyMutationInput, user_social_loginUncheckedUpdateManyWithoutUserInput>
  }

  export type user_sso_loginUpsertWithWhereUniqueWithoutUserInput = {
    where: user_sso_loginWhereUniqueInput
    update: XOR<user_sso_loginUpdateWithoutUserInput, user_sso_loginUncheckedUpdateWithoutUserInput>
    create: XOR<user_sso_loginCreateWithoutUserInput, user_sso_loginUncheckedCreateWithoutUserInput>
  }

  export type user_sso_loginUpdateWithWhereUniqueWithoutUserInput = {
    where: user_sso_loginWhereUniqueInput
    data: XOR<user_sso_loginUpdateWithoutUserInput, user_sso_loginUncheckedUpdateWithoutUserInput>
  }

  export type user_sso_loginUpdateManyWithWhereWithoutUserInput = {
    where: user_sso_loginScalarWhereInput
    data: XOR<user_sso_loginUpdateManyMutationInput, user_sso_loginUncheckedUpdateManyWithoutUserInput>
  }

  export type user_statusUpsertWithWhereUniqueWithoutUserInput = {
    where: user_statusWhereUniqueInput
    update: XOR<user_statusUpdateWithoutUserInput, user_statusUncheckedUpdateWithoutUserInput>
    create: XOR<user_statusCreateWithoutUserInput, user_statusUncheckedCreateWithoutUserInput>
  }

  export type user_statusUpdateWithWhereUniqueWithoutUserInput = {
    where: user_statusWhereUniqueInput
    data: XOR<user_statusUpdateWithoutUserInput, user_statusUncheckedUpdateWithoutUserInput>
  }

  export type user_statusUpdateManyWithWhereWithoutUserInput = {
    where: user_statusScalarWhereInput
    data: XOR<user_statusUpdateManyMutationInput, user_statusUncheckedUpdateManyWithoutUserInput>
  }

  export type user_statusScalarWhereInput = {
    AND?: user_statusScalarWhereInput | user_statusScalarWhereInput[]
    OR?: user_statusScalarWhereInput[]
    NOT?: user_statusScalarWhereInput | user_statusScalarWhereInput[]
    user_id?: DecimalFilter<"user_status"> | Decimal | DecimalJsLike | number | string
    user_status_type_id?: DecimalFilter<"user_status"> | Decimal | DecimalJsLike | number | string
    user_status_id?: DecimalNullableFilter<"user_status"> | Decimal | DecimalJsLike | number | string | null
  }

  export type user_email_xrefUpsertWithWhereUniqueWithoutUserInput = {
    where: user_email_xrefWhereUniqueInput
    update: XOR<user_email_xrefUpdateWithoutUserInput, user_email_xrefUncheckedUpdateWithoutUserInput>
    create: XOR<user_email_xrefCreateWithoutUserInput, user_email_xrefUncheckedCreateWithoutUserInput>
  }

  export type user_email_xrefUpdateWithWhereUniqueWithoutUserInput = {
    where: user_email_xrefWhereUniqueInput
    data: XOR<user_email_xrefUpdateWithoutUserInput, user_email_xrefUncheckedUpdateWithoutUserInput>
  }

  export type user_email_xrefUpdateManyWithWhereWithoutUserInput = {
    where: user_email_xrefScalarWhereInput
    data: XOR<user_email_xrefUpdateManyMutationInput, user_email_xrefUncheckedUpdateManyWithoutUserInput>
  }

  export type emailUpsertWithWhereUniqueWithoutUserInput = {
    where: emailWhereUniqueInput
    update: XOR<emailUpdateWithoutUserInput, emailUncheckedUpdateWithoutUserInput>
    create: XOR<emailCreateWithoutUserInput, emailUncheckedCreateWithoutUserInput>
  }

  export type emailUpdateWithWhereUniqueWithoutUserInput = {
    where: emailWhereUniqueInput
    data: XOR<emailUpdateWithoutUserInput, emailUncheckedUpdateWithoutUserInput>
  }

  export type emailUpdateManyWithWhereWithoutUserInput = {
    where: emailScalarWhereInput
    data: XOR<emailUpdateManyMutationInput, emailUncheckedUpdateManyWithoutUserInput>
  }

  export type userCreateWithoutUser_2faInput = {
    user_id?: Decimal | DecimalJsLike | number | string
    first_name?: string | null
    last_name?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    handle: string
    last_login?: Date | string | null
    status: string
    activation_code?: string | null
    middle_name?: string | null
    handle_lower?: string | null
    timezone_id?: Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: Date | string | null
    name_in_another_language?: string | null
    password?: string | null
    open_id?: string | null
    reg_source?: string | null
    utm_source?: string | null
    utm_medium?: string | null
    utm_campaign?: string | null
    dice_connection?: dice_connectionCreateNestedOneWithoutUserInput
    user_achievement?: user_achievementCreateNestedManyWithoutUserInput
    user_otp_email?: user_otp_emailCreateNestedManyWithoutUserInput
    user_social_login?: user_social_loginCreateNestedManyWithoutUserInput
    user_sso_login?: user_sso_loginCreateNestedManyWithoutUserInput
    user_status?: user_statusCreateNestedManyWithoutUserInput
    user_email_xref?: user_email_xrefCreateNestedManyWithoutUserInput
    emails?: emailCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutUser_2faInput = {
    user_id?: Decimal | DecimalJsLike | number | string
    first_name?: string | null
    last_name?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    handle: string
    last_login?: Date | string | null
    status: string
    activation_code?: string | null
    middle_name?: string | null
    handle_lower?: string | null
    timezone_id?: Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: Date | string | null
    name_in_another_language?: string | null
    password?: string | null
    open_id?: string | null
    reg_source?: string | null
    utm_source?: string | null
    utm_medium?: string | null
    utm_campaign?: string | null
    dice_connection?: dice_connectionUncheckedCreateNestedOneWithoutUserInput
    user_achievement?: user_achievementUncheckedCreateNestedManyWithoutUserInput
    user_otp_email?: user_otp_emailUncheckedCreateNestedManyWithoutUserInput
    user_social_login?: user_social_loginUncheckedCreateNestedManyWithoutUserInput
    user_sso_login?: user_sso_loginUncheckedCreateNestedManyWithoutUserInput
    user_status?: user_statusUncheckedCreateNestedManyWithoutUserInput
    user_email_xref?: user_email_xrefUncheckedCreateNestedManyWithoutUserInput
    emails?: emailUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutUser_2faInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUser_2faInput, userUncheckedCreateWithoutUser_2faInput>
  }

  export type userUpsertWithoutUser_2faInput = {
    update: XOR<userUpdateWithoutUser_2faInput, userUncheckedUpdateWithoutUser_2faInput>
    create: XOR<userCreateWithoutUser_2faInput, userUncheckedCreateWithoutUser_2faInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUser_2faInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUser_2faInput, userUncheckedUpdateWithoutUser_2faInput>
  }

  export type userUpdateWithoutUser_2faInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    handle?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    activation_code?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    handle_lower?: NullableStringFieldUpdateOperationsInput | string | null
    timezone_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_in_another_language?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    open_id?: NullableStringFieldUpdateOperationsInput | string | null
    reg_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_medium?: NullableStringFieldUpdateOperationsInput | string | null
    utm_campaign?: NullableStringFieldUpdateOperationsInput | string | null
    dice_connection?: dice_connectionUpdateOneWithoutUserNestedInput
    user_achievement?: user_achievementUpdateManyWithoutUserNestedInput
    user_otp_email?: user_otp_emailUpdateManyWithoutUserNestedInput
    user_social_login?: user_social_loginUpdateManyWithoutUserNestedInput
    user_sso_login?: user_sso_loginUpdateManyWithoutUserNestedInput
    user_status?: user_statusUpdateManyWithoutUserNestedInput
    user_email_xref?: user_email_xrefUpdateManyWithoutUserNestedInput
    emails?: emailUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutUser_2faInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    handle?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    activation_code?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    handle_lower?: NullableStringFieldUpdateOperationsInput | string | null
    timezone_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_in_another_language?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    open_id?: NullableStringFieldUpdateOperationsInput | string | null
    reg_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_medium?: NullableStringFieldUpdateOperationsInput | string | null
    utm_campaign?: NullableStringFieldUpdateOperationsInput | string | null
    dice_connection?: dice_connectionUncheckedUpdateOneWithoutUserNestedInput
    user_achievement?: user_achievementUncheckedUpdateManyWithoutUserNestedInput
    user_otp_email?: user_otp_emailUncheckedUpdateManyWithoutUserNestedInput
    user_social_login?: user_social_loginUncheckedUpdateManyWithoutUserNestedInput
    user_sso_login?: user_sso_loginUncheckedUpdateManyWithoutUserNestedInput
    user_status?: user_statusUncheckedUpdateManyWithoutUserNestedInput
    user_email_xref?: user_email_xrefUncheckedUpdateManyWithoutUserNestedInput
    emails?: emailUncheckedUpdateManyWithoutUserNestedInput
  }

  export type achievement_type_luCreateWithoutUser_achievementInput = {
    achievement_type_id: Decimal | DecimalJsLike | number | string
    achievement_type_desc: string
  }

  export type achievement_type_luUncheckedCreateWithoutUser_achievementInput = {
    achievement_type_id: Decimal | DecimalJsLike | number | string
    achievement_type_desc: string
  }

  export type achievement_type_luCreateOrConnectWithoutUser_achievementInput = {
    where: achievement_type_luWhereUniqueInput
    create: XOR<achievement_type_luCreateWithoutUser_achievementInput, achievement_type_luUncheckedCreateWithoutUser_achievementInput>
  }

  export type userCreateWithoutUser_achievementInput = {
    user_id?: Decimal | DecimalJsLike | number | string
    first_name?: string | null
    last_name?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    handle: string
    last_login?: Date | string | null
    status: string
    activation_code?: string | null
    middle_name?: string | null
    handle_lower?: string | null
    timezone_id?: Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: Date | string | null
    name_in_another_language?: string | null
    password?: string | null
    open_id?: string | null
    reg_source?: string | null
    utm_source?: string | null
    utm_medium?: string | null
    utm_campaign?: string | null
    dice_connection?: dice_connectionCreateNestedOneWithoutUserInput
    user_2fa?: user_2faCreateNestedOneWithoutUserInput
    user_otp_email?: user_otp_emailCreateNestedManyWithoutUserInput
    user_social_login?: user_social_loginCreateNestedManyWithoutUserInput
    user_sso_login?: user_sso_loginCreateNestedManyWithoutUserInput
    user_status?: user_statusCreateNestedManyWithoutUserInput
    user_email_xref?: user_email_xrefCreateNestedManyWithoutUserInput
    emails?: emailCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutUser_achievementInput = {
    user_id?: Decimal | DecimalJsLike | number | string
    first_name?: string | null
    last_name?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    handle: string
    last_login?: Date | string | null
    status: string
    activation_code?: string | null
    middle_name?: string | null
    handle_lower?: string | null
    timezone_id?: Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: Date | string | null
    name_in_another_language?: string | null
    password?: string | null
    open_id?: string | null
    reg_source?: string | null
    utm_source?: string | null
    utm_medium?: string | null
    utm_campaign?: string | null
    dice_connection?: dice_connectionUncheckedCreateNestedOneWithoutUserInput
    user_2fa?: user_2faUncheckedCreateNestedOneWithoutUserInput
    user_otp_email?: user_otp_emailUncheckedCreateNestedManyWithoutUserInput
    user_social_login?: user_social_loginUncheckedCreateNestedManyWithoutUserInput
    user_sso_login?: user_sso_loginUncheckedCreateNestedManyWithoutUserInput
    user_status?: user_statusUncheckedCreateNestedManyWithoutUserInput
    user_email_xref?: user_email_xrefUncheckedCreateNestedManyWithoutUserInput
    emails?: emailUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutUser_achievementInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUser_achievementInput, userUncheckedCreateWithoutUser_achievementInput>
  }

  export type achievement_type_luUpsertWithoutUser_achievementInput = {
    update: XOR<achievement_type_luUpdateWithoutUser_achievementInput, achievement_type_luUncheckedUpdateWithoutUser_achievementInput>
    create: XOR<achievement_type_luCreateWithoutUser_achievementInput, achievement_type_luUncheckedCreateWithoutUser_achievementInput>
    where?: achievement_type_luWhereInput
  }

  export type achievement_type_luUpdateToOneWithWhereWithoutUser_achievementInput = {
    where?: achievement_type_luWhereInput
    data: XOR<achievement_type_luUpdateWithoutUser_achievementInput, achievement_type_luUncheckedUpdateWithoutUser_achievementInput>
  }

  export type achievement_type_luUpdateWithoutUser_achievementInput = {
    achievement_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    achievement_type_desc?: StringFieldUpdateOperationsInput | string
  }

  export type achievement_type_luUncheckedUpdateWithoutUser_achievementInput = {
    achievement_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    achievement_type_desc?: StringFieldUpdateOperationsInput | string
  }

  export type userUpsertWithoutUser_achievementInput = {
    update: XOR<userUpdateWithoutUser_achievementInput, userUncheckedUpdateWithoutUser_achievementInput>
    create: XOR<userCreateWithoutUser_achievementInput, userUncheckedCreateWithoutUser_achievementInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUser_achievementInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUser_achievementInput, userUncheckedUpdateWithoutUser_achievementInput>
  }

  export type userUpdateWithoutUser_achievementInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    handle?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    activation_code?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    handle_lower?: NullableStringFieldUpdateOperationsInput | string | null
    timezone_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_in_another_language?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    open_id?: NullableStringFieldUpdateOperationsInput | string | null
    reg_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_medium?: NullableStringFieldUpdateOperationsInput | string | null
    utm_campaign?: NullableStringFieldUpdateOperationsInput | string | null
    dice_connection?: dice_connectionUpdateOneWithoutUserNestedInput
    user_2fa?: user_2faUpdateOneWithoutUserNestedInput
    user_otp_email?: user_otp_emailUpdateManyWithoutUserNestedInput
    user_social_login?: user_social_loginUpdateManyWithoutUserNestedInput
    user_sso_login?: user_sso_loginUpdateManyWithoutUserNestedInput
    user_status?: user_statusUpdateManyWithoutUserNestedInput
    user_email_xref?: user_email_xrefUpdateManyWithoutUserNestedInput
    emails?: emailUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutUser_achievementInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    handle?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    activation_code?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    handle_lower?: NullableStringFieldUpdateOperationsInput | string | null
    timezone_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_in_another_language?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    open_id?: NullableStringFieldUpdateOperationsInput | string | null
    reg_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_medium?: NullableStringFieldUpdateOperationsInput | string | null
    utm_campaign?: NullableStringFieldUpdateOperationsInput | string | null
    dice_connection?: dice_connectionUncheckedUpdateOneWithoutUserNestedInput
    user_2fa?: user_2faUncheckedUpdateOneWithoutUserNestedInput
    user_otp_email?: user_otp_emailUncheckedUpdateManyWithoutUserNestedInput
    user_social_login?: user_social_loginUncheckedUpdateManyWithoutUserNestedInput
    user_sso_login?: user_sso_loginUncheckedUpdateManyWithoutUserNestedInput
    user_status?: user_statusUncheckedUpdateManyWithoutUserNestedInput
    user_email_xref?: user_email_xrefUncheckedUpdateManyWithoutUserNestedInput
    emails?: emailUncheckedUpdateManyWithoutUserNestedInput
  }

  export type security_userCreateWithoutUser_group_xrefInput = {
    login_id: Decimal | DecimalJsLike | number | string
    user_id: string
    password: string
    create_user_id?: Decimal | DecimalJsLike | number | string | null
    modify_date?: Date | string | null
  }

  export type security_userUncheckedCreateWithoutUser_group_xrefInput = {
    login_id: Decimal | DecimalJsLike | number | string
    user_id: string
    password: string
    create_user_id?: Decimal | DecimalJsLike | number | string | null
    modify_date?: Date | string | null
  }

  export type security_userCreateOrConnectWithoutUser_group_xrefInput = {
    where: security_userWhereUniqueInput
    create: XOR<security_userCreateWithoutUser_group_xrefInput, security_userUncheckedCreateWithoutUser_group_xrefInput>
  }

  export type security_groupsCreateWithoutUser_group_xrefInput = {
    group_id: Decimal | DecimalJsLike | number | string
    description: string
    challenge_group_ind?: number
    create_user_id?: Decimal | DecimalJsLike | number | string | null
  }

  export type security_groupsUncheckedCreateWithoutUser_group_xrefInput = {
    group_id: Decimal | DecimalJsLike | number | string
    description: string
    challenge_group_ind?: number
    create_user_id?: Decimal | DecimalJsLike | number | string | null
  }

  export type security_groupsCreateOrConnectWithoutUser_group_xrefInput = {
    where: security_groupsWhereUniqueInput
    create: XOR<security_groupsCreateWithoutUser_group_xrefInput, security_groupsUncheckedCreateWithoutUser_group_xrefInput>
  }

  export type security_status_luCreateWithoutUser_group_xrefInput = {
    security_status_id: Decimal | DecimalJsLike | number | string
    status_desc?: string | null
  }

  export type security_status_luUncheckedCreateWithoutUser_group_xrefInput = {
    security_status_id: Decimal | DecimalJsLike | number | string
    status_desc?: string | null
  }

  export type security_status_luCreateOrConnectWithoutUser_group_xrefInput = {
    where: security_status_luWhereUniqueInput
    create: XOR<security_status_luCreateWithoutUser_group_xrefInput, security_status_luUncheckedCreateWithoutUser_group_xrefInput>
  }

  export type security_userUpsertWithoutUser_group_xrefInput = {
    update: XOR<security_userUpdateWithoutUser_group_xrefInput, security_userUncheckedUpdateWithoutUser_group_xrefInput>
    create: XOR<security_userCreateWithoutUser_group_xrefInput, security_userUncheckedCreateWithoutUser_group_xrefInput>
    where?: security_userWhereInput
  }

  export type security_userUpdateToOneWithWhereWithoutUser_group_xrefInput = {
    where?: security_userWhereInput
    data: XOR<security_userUpdateWithoutUser_group_xrefInput, security_userUncheckedUpdateWithoutUser_group_xrefInput>
  }

  export type security_userUpdateWithoutUser_group_xrefInput = {
    login_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    user_id?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    create_user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type security_userUncheckedUpdateWithoutUser_group_xrefInput = {
    login_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    user_id?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    create_user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type security_groupsUpsertWithoutUser_group_xrefInput = {
    update: XOR<security_groupsUpdateWithoutUser_group_xrefInput, security_groupsUncheckedUpdateWithoutUser_group_xrefInput>
    create: XOR<security_groupsCreateWithoutUser_group_xrefInput, security_groupsUncheckedCreateWithoutUser_group_xrefInput>
    where?: security_groupsWhereInput
  }

  export type security_groupsUpdateToOneWithWhereWithoutUser_group_xrefInput = {
    where?: security_groupsWhereInput
    data: XOR<security_groupsUpdateWithoutUser_group_xrefInput, security_groupsUncheckedUpdateWithoutUser_group_xrefInput>
  }

  export type security_groupsUpdateWithoutUser_group_xrefInput = {
    group_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: StringFieldUpdateOperationsInput | string
    challenge_group_ind?: IntFieldUpdateOperationsInput | number
    create_user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type security_groupsUncheckedUpdateWithoutUser_group_xrefInput = {
    group_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: StringFieldUpdateOperationsInput | string
    challenge_group_ind?: IntFieldUpdateOperationsInput | number
    create_user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type security_status_luUpsertWithoutUser_group_xrefInput = {
    update: XOR<security_status_luUpdateWithoutUser_group_xrefInput, security_status_luUncheckedUpdateWithoutUser_group_xrefInput>
    create: XOR<security_status_luCreateWithoutUser_group_xrefInput, security_status_luUncheckedCreateWithoutUser_group_xrefInput>
    where?: security_status_luWhereInput
  }

  export type security_status_luUpdateToOneWithWhereWithoutUser_group_xrefInput = {
    where?: security_status_luWhereInput
    data: XOR<security_status_luUpdateWithoutUser_group_xrefInput, security_status_luUncheckedUpdateWithoutUser_group_xrefInput>
  }

  export type security_status_luUpdateWithoutUser_group_xrefInput = {
    security_status_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status_desc?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type security_status_luUncheckedUpdateWithoutUser_group_xrefInput = {
    security_status_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status_desc?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type userCreateWithoutUser_otp_emailInput = {
    user_id?: Decimal | DecimalJsLike | number | string
    first_name?: string | null
    last_name?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    handle: string
    last_login?: Date | string | null
    status: string
    activation_code?: string | null
    middle_name?: string | null
    handle_lower?: string | null
    timezone_id?: Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: Date | string | null
    name_in_another_language?: string | null
    password?: string | null
    open_id?: string | null
    reg_source?: string | null
    utm_source?: string | null
    utm_medium?: string | null
    utm_campaign?: string | null
    dice_connection?: dice_connectionCreateNestedOneWithoutUserInput
    user_2fa?: user_2faCreateNestedOneWithoutUserInput
    user_achievement?: user_achievementCreateNestedManyWithoutUserInput
    user_social_login?: user_social_loginCreateNestedManyWithoutUserInput
    user_sso_login?: user_sso_loginCreateNestedManyWithoutUserInput
    user_status?: user_statusCreateNestedManyWithoutUserInput
    user_email_xref?: user_email_xrefCreateNestedManyWithoutUserInput
    emails?: emailCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutUser_otp_emailInput = {
    user_id?: Decimal | DecimalJsLike | number | string
    first_name?: string | null
    last_name?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    handle: string
    last_login?: Date | string | null
    status: string
    activation_code?: string | null
    middle_name?: string | null
    handle_lower?: string | null
    timezone_id?: Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: Date | string | null
    name_in_another_language?: string | null
    password?: string | null
    open_id?: string | null
    reg_source?: string | null
    utm_source?: string | null
    utm_medium?: string | null
    utm_campaign?: string | null
    dice_connection?: dice_connectionUncheckedCreateNestedOneWithoutUserInput
    user_2fa?: user_2faUncheckedCreateNestedOneWithoutUserInput
    user_achievement?: user_achievementUncheckedCreateNestedManyWithoutUserInput
    user_social_login?: user_social_loginUncheckedCreateNestedManyWithoutUserInput
    user_sso_login?: user_sso_loginUncheckedCreateNestedManyWithoutUserInput
    user_status?: user_statusUncheckedCreateNestedManyWithoutUserInput
    user_email_xref?: user_email_xrefUncheckedCreateNestedManyWithoutUserInput
    emails?: emailUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutUser_otp_emailInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUser_otp_emailInput, userUncheckedCreateWithoutUser_otp_emailInput>
  }

  export type userUpsertWithoutUser_otp_emailInput = {
    update: XOR<userUpdateWithoutUser_otp_emailInput, userUncheckedUpdateWithoutUser_otp_emailInput>
    create: XOR<userCreateWithoutUser_otp_emailInput, userUncheckedCreateWithoutUser_otp_emailInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUser_otp_emailInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUser_otp_emailInput, userUncheckedUpdateWithoutUser_otp_emailInput>
  }

  export type userUpdateWithoutUser_otp_emailInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    handle?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    activation_code?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    handle_lower?: NullableStringFieldUpdateOperationsInput | string | null
    timezone_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_in_another_language?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    open_id?: NullableStringFieldUpdateOperationsInput | string | null
    reg_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_medium?: NullableStringFieldUpdateOperationsInput | string | null
    utm_campaign?: NullableStringFieldUpdateOperationsInput | string | null
    dice_connection?: dice_connectionUpdateOneWithoutUserNestedInput
    user_2fa?: user_2faUpdateOneWithoutUserNestedInput
    user_achievement?: user_achievementUpdateManyWithoutUserNestedInput
    user_social_login?: user_social_loginUpdateManyWithoutUserNestedInput
    user_sso_login?: user_sso_loginUpdateManyWithoutUserNestedInput
    user_status?: user_statusUpdateManyWithoutUserNestedInput
    user_email_xref?: user_email_xrefUpdateManyWithoutUserNestedInput
    emails?: emailUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutUser_otp_emailInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    handle?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    activation_code?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    handle_lower?: NullableStringFieldUpdateOperationsInput | string | null
    timezone_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_in_another_language?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    open_id?: NullableStringFieldUpdateOperationsInput | string | null
    reg_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_medium?: NullableStringFieldUpdateOperationsInput | string | null
    utm_campaign?: NullableStringFieldUpdateOperationsInput | string | null
    dice_connection?: dice_connectionUncheckedUpdateOneWithoutUserNestedInput
    user_2fa?: user_2faUncheckedUpdateOneWithoutUserNestedInput
    user_achievement?: user_achievementUncheckedUpdateManyWithoutUserNestedInput
    user_social_login?: user_social_loginUncheckedUpdateManyWithoutUserNestedInput
    user_sso_login?: user_sso_loginUncheckedUpdateManyWithoutUserNestedInput
    user_status?: user_statusUncheckedUpdateManyWithoutUserNestedInput
    user_email_xref?: user_email_xrefUncheckedUpdateManyWithoutUserNestedInput
    emails?: emailUncheckedUpdateManyWithoutUserNestedInput
  }

  export type social_login_providerCreateWithoutUser_social_loginInput = {
    social_login_provider_id: Decimal | DecimalJsLike | number | string
    name?: string | null
  }

  export type social_login_providerUncheckedCreateWithoutUser_social_loginInput = {
    social_login_provider_id: Decimal | DecimalJsLike | number | string
    name?: string | null
  }

  export type social_login_providerCreateOrConnectWithoutUser_social_loginInput = {
    where: social_login_providerWhereUniqueInput
    create: XOR<social_login_providerCreateWithoutUser_social_loginInput, social_login_providerUncheckedCreateWithoutUser_social_loginInput>
  }

  export type userCreateWithoutUser_social_loginInput = {
    user_id?: Decimal | DecimalJsLike | number | string
    first_name?: string | null
    last_name?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    handle: string
    last_login?: Date | string | null
    status: string
    activation_code?: string | null
    middle_name?: string | null
    handle_lower?: string | null
    timezone_id?: Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: Date | string | null
    name_in_another_language?: string | null
    password?: string | null
    open_id?: string | null
    reg_source?: string | null
    utm_source?: string | null
    utm_medium?: string | null
    utm_campaign?: string | null
    dice_connection?: dice_connectionCreateNestedOneWithoutUserInput
    user_2fa?: user_2faCreateNestedOneWithoutUserInput
    user_achievement?: user_achievementCreateNestedManyWithoutUserInput
    user_otp_email?: user_otp_emailCreateNestedManyWithoutUserInput
    user_sso_login?: user_sso_loginCreateNestedManyWithoutUserInput
    user_status?: user_statusCreateNestedManyWithoutUserInput
    user_email_xref?: user_email_xrefCreateNestedManyWithoutUserInput
    emails?: emailCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutUser_social_loginInput = {
    user_id?: Decimal | DecimalJsLike | number | string
    first_name?: string | null
    last_name?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    handle: string
    last_login?: Date | string | null
    status: string
    activation_code?: string | null
    middle_name?: string | null
    handle_lower?: string | null
    timezone_id?: Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: Date | string | null
    name_in_another_language?: string | null
    password?: string | null
    open_id?: string | null
    reg_source?: string | null
    utm_source?: string | null
    utm_medium?: string | null
    utm_campaign?: string | null
    dice_connection?: dice_connectionUncheckedCreateNestedOneWithoutUserInput
    user_2fa?: user_2faUncheckedCreateNestedOneWithoutUserInput
    user_achievement?: user_achievementUncheckedCreateNestedManyWithoutUserInput
    user_otp_email?: user_otp_emailUncheckedCreateNestedManyWithoutUserInput
    user_sso_login?: user_sso_loginUncheckedCreateNestedManyWithoutUserInput
    user_status?: user_statusUncheckedCreateNestedManyWithoutUserInput
    user_email_xref?: user_email_xrefUncheckedCreateNestedManyWithoutUserInput
    emails?: emailUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutUser_social_loginInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUser_social_loginInput, userUncheckedCreateWithoutUser_social_loginInput>
  }

  export type social_login_providerUpsertWithoutUser_social_loginInput = {
    update: XOR<social_login_providerUpdateWithoutUser_social_loginInput, social_login_providerUncheckedUpdateWithoutUser_social_loginInput>
    create: XOR<social_login_providerCreateWithoutUser_social_loginInput, social_login_providerUncheckedCreateWithoutUser_social_loginInput>
    where?: social_login_providerWhereInput
  }

  export type social_login_providerUpdateToOneWithWhereWithoutUser_social_loginInput = {
    where?: social_login_providerWhereInput
    data: XOR<social_login_providerUpdateWithoutUser_social_loginInput, social_login_providerUncheckedUpdateWithoutUser_social_loginInput>
  }

  export type social_login_providerUpdateWithoutUser_social_loginInput = {
    social_login_provider_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type social_login_providerUncheckedUpdateWithoutUser_social_loginInput = {
    social_login_provider_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type userUpsertWithoutUser_social_loginInput = {
    update: XOR<userUpdateWithoutUser_social_loginInput, userUncheckedUpdateWithoutUser_social_loginInput>
    create: XOR<userCreateWithoutUser_social_loginInput, userUncheckedCreateWithoutUser_social_loginInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUser_social_loginInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUser_social_loginInput, userUncheckedUpdateWithoutUser_social_loginInput>
  }

  export type userUpdateWithoutUser_social_loginInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    handle?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    activation_code?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    handle_lower?: NullableStringFieldUpdateOperationsInput | string | null
    timezone_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_in_another_language?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    open_id?: NullableStringFieldUpdateOperationsInput | string | null
    reg_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_medium?: NullableStringFieldUpdateOperationsInput | string | null
    utm_campaign?: NullableStringFieldUpdateOperationsInput | string | null
    dice_connection?: dice_connectionUpdateOneWithoutUserNestedInput
    user_2fa?: user_2faUpdateOneWithoutUserNestedInput
    user_achievement?: user_achievementUpdateManyWithoutUserNestedInput
    user_otp_email?: user_otp_emailUpdateManyWithoutUserNestedInput
    user_sso_login?: user_sso_loginUpdateManyWithoutUserNestedInput
    user_status?: user_statusUpdateManyWithoutUserNestedInput
    user_email_xref?: user_email_xrefUpdateManyWithoutUserNestedInput
    emails?: emailUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutUser_social_loginInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    handle?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    activation_code?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    handle_lower?: NullableStringFieldUpdateOperationsInput | string | null
    timezone_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_in_another_language?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    open_id?: NullableStringFieldUpdateOperationsInput | string | null
    reg_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_medium?: NullableStringFieldUpdateOperationsInput | string | null
    utm_campaign?: NullableStringFieldUpdateOperationsInput | string | null
    dice_connection?: dice_connectionUncheckedUpdateOneWithoutUserNestedInput
    user_2fa?: user_2faUncheckedUpdateOneWithoutUserNestedInput
    user_achievement?: user_achievementUncheckedUpdateManyWithoutUserNestedInput
    user_otp_email?: user_otp_emailUncheckedUpdateManyWithoutUserNestedInput
    user_sso_login?: user_sso_loginUncheckedUpdateManyWithoutUserNestedInput
    user_status?: user_statusUncheckedUpdateManyWithoutUserNestedInput
    user_email_xref?: user_email_xrefUncheckedUpdateManyWithoutUserNestedInput
    emails?: emailUncheckedUpdateManyWithoutUserNestedInput
  }

  export type sso_login_providerCreateWithoutUser_sso_loginInput = {
    sso_login_provider_id: Decimal | DecimalJsLike | number | string
    name?: string | null
    type: string
    identify_email_enabled?: boolean
    identify_handle_enabled?: boolean
  }

  export type sso_login_providerUncheckedCreateWithoutUser_sso_loginInput = {
    sso_login_provider_id: Decimal | DecimalJsLike | number | string
    name?: string | null
    type: string
    identify_email_enabled?: boolean
    identify_handle_enabled?: boolean
  }

  export type sso_login_providerCreateOrConnectWithoutUser_sso_loginInput = {
    where: sso_login_providerWhereUniqueInput
    create: XOR<sso_login_providerCreateWithoutUser_sso_loginInput, sso_login_providerUncheckedCreateWithoutUser_sso_loginInput>
  }

  export type userCreateWithoutUser_sso_loginInput = {
    user_id?: Decimal | DecimalJsLike | number | string
    first_name?: string | null
    last_name?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    handle: string
    last_login?: Date | string | null
    status: string
    activation_code?: string | null
    middle_name?: string | null
    handle_lower?: string | null
    timezone_id?: Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: Date | string | null
    name_in_another_language?: string | null
    password?: string | null
    open_id?: string | null
    reg_source?: string | null
    utm_source?: string | null
    utm_medium?: string | null
    utm_campaign?: string | null
    dice_connection?: dice_connectionCreateNestedOneWithoutUserInput
    user_2fa?: user_2faCreateNestedOneWithoutUserInput
    user_achievement?: user_achievementCreateNestedManyWithoutUserInput
    user_otp_email?: user_otp_emailCreateNestedManyWithoutUserInput
    user_social_login?: user_social_loginCreateNestedManyWithoutUserInput
    user_status?: user_statusCreateNestedManyWithoutUserInput
    user_email_xref?: user_email_xrefCreateNestedManyWithoutUserInput
    emails?: emailCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutUser_sso_loginInput = {
    user_id?: Decimal | DecimalJsLike | number | string
    first_name?: string | null
    last_name?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    handle: string
    last_login?: Date | string | null
    status: string
    activation_code?: string | null
    middle_name?: string | null
    handle_lower?: string | null
    timezone_id?: Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: Date | string | null
    name_in_another_language?: string | null
    password?: string | null
    open_id?: string | null
    reg_source?: string | null
    utm_source?: string | null
    utm_medium?: string | null
    utm_campaign?: string | null
    dice_connection?: dice_connectionUncheckedCreateNestedOneWithoutUserInput
    user_2fa?: user_2faUncheckedCreateNestedOneWithoutUserInput
    user_achievement?: user_achievementUncheckedCreateNestedManyWithoutUserInput
    user_otp_email?: user_otp_emailUncheckedCreateNestedManyWithoutUserInput
    user_social_login?: user_social_loginUncheckedCreateNestedManyWithoutUserInput
    user_status?: user_statusUncheckedCreateNestedManyWithoutUserInput
    user_email_xref?: user_email_xrefUncheckedCreateNestedManyWithoutUserInput
    emails?: emailUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutUser_sso_loginInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUser_sso_loginInput, userUncheckedCreateWithoutUser_sso_loginInput>
  }

  export type sso_login_providerUpsertWithoutUser_sso_loginInput = {
    update: XOR<sso_login_providerUpdateWithoutUser_sso_loginInput, sso_login_providerUncheckedUpdateWithoutUser_sso_loginInput>
    create: XOR<sso_login_providerCreateWithoutUser_sso_loginInput, sso_login_providerUncheckedCreateWithoutUser_sso_loginInput>
    where?: sso_login_providerWhereInput
  }

  export type sso_login_providerUpdateToOneWithWhereWithoutUser_sso_loginInput = {
    where?: sso_login_providerWhereInput
    data: XOR<sso_login_providerUpdateWithoutUser_sso_loginInput, sso_login_providerUncheckedUpdateWithoutUser_sso_loginInput>
  }

  export type sso_login_providerUpdateWithoutUser_sso_loginInput = {
    sso_login_provider_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    identify_email_enabled?: BoolFieldUpdateOperationsInput | boolean
    identify_handle_enabled?: BoolFieldUpdateOperationsInput | boolean
  }

  export type sso_login_providerUncheckedUpdateWithoutUser_sso_loginInput = {
    sso_login_provider_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    identify_email_enabled?: BoolFieldUpdateOperationsInput | boolean
    identify_handle_enabled?: BoolFieldUpdateOperationsInput | boolean
  }

  export type userUpsertWithoutUser_sso_loginInput = {
    update: XOR<userUpdateWithoutUser_sso_loginInput, userUncheckedUpdateWithoutUser_sso_loginInput>
    create: XOR<userCreateWithoutUser_sso_loginInput, userUncheckedCreateWithoutUser_sso_loginInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUser_sso_loginInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUser_sso_loginInput, userUncheckedUpdateWithoutUser_sso_loginInput>
  }

  export type userUpdateWithoutUser_sso_loginInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    handle?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    activation_code?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    handle_lower?: NullableStringFieldUpdateOperationsInput | string | null
    timezone_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_in_another_language?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    open_id?: NullableStringFieldUpdateOperationsInput | string | null
    reg_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_medium?: NullableStringFieldUpdateOperationsInput | string | null
    utm_campaign?: NullableStringFieldUpdateOperationsInput | string | null
    dice_connection?: dice_connectionUpdateOneWithoutUserNestedInput
    user_2fa?: user_2faUpdateOneWithoutUserNestedInput
    user_achievement?: user_achievementUpdateManyWithoutUserNestedInput
    user_otp_email?: user_otp_emailUpdateManyWithoutUserNestedInput
    user_social_login?: user_social_loginUpdateManyWithoutUserNestedInput
    user_status?: user_statusUpdateManyWithoutUserNestedInput
    user_email_xref?: user_email_xrefUpdateManyWithoutUserNestedInput
    emails?: emailUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutUser_sso_loginInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    handle?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    activation_code?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    handle_lower?: NullableStringFieldUpdateOperationsInput | string | null
    timezone_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_in_another_language?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    open_id?: NullableStringFieldUpdateOperationsInput | string | null
    reg_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_medium?: NullableStringFieldUpdateOperationsInput | string | null
    utm_campaign?: NullableStringFieldUpdateOperationsInput | string | null
    dice_connection?: dice_connectionUncheckedUpdateOneWithoutUserNestedInput
    user_2fa?: user_2faUncheckedUpdateOneWithoutUserNestedInput
    user_achievement?: user_achievementUncheckedUpdateManyWithoutUserNestedInput
    user_otp_email?: user_otp_emailUncheckedUpdateManyWithoutUserNestedInput
    user_social_login?: user_social_loginUncheckedUpdateManyWithoutUserNestedInput
    user_status?: user_statusUncheckedUpdateManyWithoutUserNestedInput
    user_email_xref?: user_email_xrefUncheckedUpdateManyWithoutUserNestedInput
    emails?: emailUncheckedUpdateManyWithoutUserNestedInput
  }

  export type userCreateWithoutUser_statusInput = {
    user_id?: Decimal | DecimalJsLike | number | string
    first_name?: string | null
    last_name?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    handle: string
    last_login?: Date | string | null
    status: string
    activation_code?: string | null
    middle_name?: string | null
    handle_lower?: string | null
    timezone_id?: Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: Date | string | null
    name_in_another_language?: string | null
    password?: string | null
    open_id?: string | null
    reg_source?: string | null
    utm_source?: string | null
    utm_medium?: string | null
    utm_campaign?: string | null
    dice_connection?: dice_connectionCreateNestedOneWithoutUserInput
    user_2fa?: user_2faCreateNestedOneWithoutUserInput
    user_achievement?: user_achievementCreateNestedManyWithoutUserInput
    user_otp_email?: user_otp_emailCreateNestedManyWithoutUserInput
    user_social_login?: user_social_loginCreateNestedManyWithoutUserInput
    user_sso_login?: user_sso_loginCreateNestedManyWithoutUserInput
    user_email_xref?: user_email_xrefCreateNestedManyWithoutUserInput
    emails?: emailCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutUser_statusInput = {
    user_id?: Decimal | DecimalJsLike | number | string
    first_name?: string | null
    last_name?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    handle: string
    last_login?: Date | string | null
    status: string
    activation_code?: string | null
    middle_name?: string | null
    handle_lower?: string | null
    timezone_id?: Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: Date | string | null
    name_in_another_language?: string | null
    password?: string | null
    open_id?: string | null
    reg_source?: string | null
    utm_source?: string | null
    utm_medium?: string | null
    utm_campaign?: string | null
    dice_connection?: dice_connectionUncheckedCreateNestedOneWithoutUserInput
    user_2fa?: user_2faUncheckedCreateNestedOneWithoutUserInput
    user_achievement?: user_achievementUncheckedCreateNestedManyWithoutUserInput
    user_otp_email?: user_otp_emailUncheckedCreateNestedManyWithoutUserInput
    user_social_login?: user_social_loginUncheckedCreateNestedManyWithoutUserInput
    user_sso_login?: user_sso_loginUncheckedCreateNestedManyWithoutUserInput
    user_email_xref?: user_email_xrefUncheckedCreateNestedManyWithoutUserInput
    emails?: emailUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutUser_statusInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUser_statusInput, userUncheckedCreateWithoutUser_statusInput>
  }

  export type user_status_luCreateWithoutUser_statusInput = {
    user_status_id: Decimal | DecimalJsLike | number | string
    description?: string | null
  }

  export type user_status_luUncheckedCreateWithoutUser_statusInput = {
    user_status_id: Decimal | DecimalJsLike | number | string
    description?: string | null
  }

  export type user_status_luCreateOrConnectWithoutUser_statusInput = {
    where: user_status_luWhereUniqueInput
    create: XOR<user_status_luCreateWithoutUser_statusInput, user_status_luUncheckedCreateWithoutUser_statusInput>
  }

  export type user_status_type_luCreateWithoutUser_statusInput = {
    user_status_type_id: Decimal | DecimalJsLike | number | string
    description?: string | null
  }

  export type user_status_type_luUncheckedCreateWithoutUser_statusInput = {
    user_status_type_id: Decimal | DecimalJsLike | number | string
    description?: string | null
  }

  export type user_status_type_luCreateOrConnectWithoutUser_statusInput = {
    where: user_status_type_luWhereUniqueInput
    create: XOR<user_status_type_luCreateWithoutUser_statusInput, user_status_type_luUncheckedCreateWithoutUser_statusInput>
  }

  export type userUpsertWithoutUser_statusInput = {
    update: XOR<userUpdateWithoutUser_statusInput, userUncheckedUpdateWithoutUser_statusInput>
    create: XOR<userCreateWithoutUser_statusInput, userUncheckedCreateWithoutUser_statusInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUser_statusInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUser_statusInput, userUncheckedUpdateWithoutUser_statusInput>
  }

  export type userUpdateWithoutUser_statusInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    handle?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    activation_code?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    handle_lower?: NullableStringFieldUpdateOperationsInput | string | null
    timezone_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_in_another_language?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    open_id?: NullableStringFieldUpdateOperationsInput | string | null
    reg_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_medium?: NullableStringFieldUpdateOperationsInput | string | null
    utm_campaign?: NullableStringFieldUpdateOperationsInput | string | null
    dice_connection?: dice_connectionUpdateOneWithoutUserNestedInput
    user_2fa?: user_2faUpdateOneWithoutUserNestedInput
    user_achievement?: user_achievementUpdateManyWithoutUserNestedInput
    user_otp_email?: user_otp_emailUpdateManyWithoutUserNestedInput
    user_social_login?: user_social_loginUpdateManyWithoutUserNestedInput
    user_sso_login?: user_sso_loginUpdateManyWithoutUserNestedInput
    user_email_xref?: user_email_xrefUpdateManyWithoutUserNestedInput
    emails?: emailUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutUser_statusInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    handle?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    activation_code?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    handle_lower?: NullableStringFieldUpdateOperationsInput | string | null
    timezone_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_in_another_language?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    open_id?: NullableStringFieldUpdateOperationsInput | string | null
    reg_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_medium?: NullableStringFieldUpdateOperationsInput | string | null
    utm_campaign?: NullableStringFieldUpdateOperationsInput | string | null
    dice_connection?: dice_connectionUncheckedUpdateOneWithoutUserNestedInput
    user_2fa?: user_2faUncheckedUpdateOneWithoutUserNestedInput
    user_achievement?: user_achievementUncheckedUpdateManyWithoutUserNestedInput
    user_otp_email?: user_otp_emailUncheckedUpdateManyWithoutUserNestedInput
    user_social_login?: user_social_loginUncheckedUpdateManyWithoutUserNestedInput
    user_sso_login?: user_sso_loginUncheckedUpdateManyWithoutUserNestedInput
    user_email_xref?: user_email_xrefUncheckedUpdateManyWithoutUserNestedInput
    emails?: emailUncheckedUpdateManyWithoutUserNestedInput
  }

  export type user_status_luUpsertWithoutUser_statusInput = {
    update: XOR<user_status_luUpdateWithoutUser_statusInput, user_status_luUncheckedUpdateWithoutUser_statusInput>
    create: XOR<user_status_luCreateWithoutUser_statusInput, user_status_luUncheckedCreateWithoutUser_statusInput>
    where?: user_status_luWhereInput
  }

  export type user_status_luUpdateToOneWithWhereWithoutUser_statusInput = {
    where?: user_status_luWhereInput
    data: XOR<user_status_luUpdateWithoutUser_statusInput, user_status_luUncheckedUpdateWithoutUser_statusInput>
  }

  export type user_status_luUpdateWithoutUser_statusInput = {
    user_status_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_status_luUncheckedUpdateWithoutUser_statusInput = {
    user_status_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_status_type_luUpsertWithoutUser_statusInput = {
    update: XOR<user_status_type_luUpdateWithoutUser_statusInput, user_status_type_luUncheckedUpdateWithoutUser_statusInput>
    create: XOR<user_status_type_luCreateWithoutUser_statusInput, user_status_type_luUncheckedCreateWithoutUser_statusInput>
    where?: user_status_type_luWhereInput
  }

  export type user_status_type_luUpdateToOneWithWhereWithoutUser_statusInput = {
    where?: user_status_type_luWhereInput
    data: XOR<user_status_type_luUpdateWithoutUser_statusInput, user_status_type_luUncheckedUpdateWithoutUser_statusInput>
  }

  export type user_status_type_luUpdateWithoutUser_statusInput = {
    user_status_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_status_type_luUncheckedUpdateWithoutUser_statusInput = {
    user_status_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_statusCreateWithoutUser_status_luInput = {
    user: userCreateNestedOneWithoutUser_statusInput
    user_status_type_lu: user_status_type_luCreateNestedOneWithoutUser_statusInput
  }

  export type user_statusUncheckedCreateWithoutUser_status_luInput = {
    user_id: Decimal | DecimalJsLike | number | string
    user_status_type_id: Decimal | DecimalJsLike | number | string
  }

  export type user_statusCreateOrConnectWithoutUser_status_luInput = {
    where: user_statusWhereUniqueInput
    create: XOR<user_statusCreateWithoutUser_status_luInput, user_statusUncheckedCreateWithoutUser_status_luInput>
  }

  export type user_statusCreateManyUser_status_luInputEnvelope = {
    data: user_statusCreateManyUser_status_luInput | user_statusCreateManyUser_status_luInput[]
    skipDuplicates?: boolean
  }

  export type user_statusUpsertWithWhereUniqueWithoutUser_status_luInput = {
    where: user_statusWhereUniqueInput
    update: XOR<user_statusUpdateWithoutUser_status_luInput, user_statusUncheckedUpdateWithoutUser_status_luInput>
    create: XOR<user_statusCreateWithoutUser_status_luInput, user_statusUncheckedCreateWithoutUser_status_luInput>
  }

  export type user_statusUpdateWithWhereUniqueWithoutUser_status_luInput = {
    where: user_statusWhereUniqueInput
    data: XOR<user_statusUpdateWithoutUser_status_luInput, user_statusUncheckedUpdateWithoutUser_status_luInput>
  }

  export type user_statusUpdateManyWithWhereWithoutUser_status_luInput = {
    where: user_statusScalarWhereInput
    data: XOR<user_statusUpdateManyMutationInput, user_statusUncheckedUpdateManyWithoutUser_status_luInput>
  }

  export type user_statusCreateWithoutUser_status_type_luInput = {
    user: userCreateNestedOneWithoutUser_statusInput
    user_status_lu?: user_status_luCreateNestedOneWithoutUser_statusInput
  }

  export type user_statusUncheckedCreateWithoutUser_status_type_luInput = {
    user_id: Decimal | DecimalJsLike | number | string
    user_status_id?: Decimal | DecimalJsLike | number | string | null
  }

  export type user_statusCreateOrConnectWithoutUser_status_type_luInput = {
    where: user_statusWhereUniqueInput
    create: XOR<user_statusCreateWithoutUser_status_type_luInput, user_statusUncheckedCreateWithoutUser_status_type_luInput>
  }

  export type user_statusCreateManyUser_status_type_luInputEnvelope = {
    data: user_statusCreateManyUser_status_type_luInput | user_statusCreateManyUser_status_type_luInput[]
    skipDuplicates?: boolean
  }

  export type user_statusUpsertWithWhereUniqueWithoutUser_status_type_luInput = {
    where: user_statusWhereUniqueInput
    update: XOR<user_statusUpdateWithoutUser_status_type_luInput, user_statusUncheckedUpdateWithoutUser_status_type_luInput>
    create: XOR<user_statusCreateWithoutUser_status_type_luInput, user_statusUncheckedCreateWithoutUser_status_type_luInput>
  }

  export type user_statusUpdateWithWhereUniqueWithoutUser_status_type_luInput = {
    where: user_statusWhereUniqueInput
    data: XOR<user_statusUpdateWithoutUser_status_type_luInput, user_statusUncheckedUpdateWithoutUser_status_type_luInput>
  }

  export type user_statusUpdateManyWithWhereWithoutUser_status_type_luInput = {
    where: user_statusScalarWhereInput
    data: XOR<user_statusUpdateManyMutationInput, user_statusUncheckedUpdateManyWithoutUser_status_type_luInput>
  }

  export type userCreateWithoutUser_email_xrefInput = {
    user_id?: Decimal | DecimalJsLike | number | string
    first_name?: string | null
    last_name?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    handle: string
    last_login?: Date | string | null
    status: string
    activation_code?: string | null
    middle_name?: string | null
    handle_lower?: string | null
    timezone_id?: Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: Date | string | null
    name_in_another_language?: string | null
    password?: string | null
    open_id?: string | null
    reg_source?: string | null
    utm_source?: string | null
    utm_medium?: string | null
    utm_campaign?: string | null
    dice_connection?: dice_connectionCreateNestedOneWithoutUserInput
    user_2fa?: user_2faCreateNestedOneWithoutUserInput
    user_achievement?: user_achievementCreateNestedManyWithoutUserInput
    user_otp_email?: user_otp_emailCreateNestedManyWithoutUserInput
    user_social_login?: user_social_loginCreateNestedManyWithoutUserInput
    user_sso_login?: user_sso_loginCreateNestedManyWithoutUserInput
    user_status?: user_statusCreateNestedManyWithoutUserInput
    emails?: emailCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutUser_email_xrefInput = {
    user_id?: Decimal | DecimalJsLike | number | string
    first_name?: string | null
    last_name?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    handle: string
    last_login?: Date | string | null
    status: string
    activation_code?: string | null
    middle_name?: string | null
    handle_lower?: string | null
    timezone_id?: Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: Date | string | null
    name_in_another_language?: string | null
    password?: string | null
    open_id?: string | null
    reg_source?: string | null
    utm_source?: string | null
    utm_medium?: string | null
    utm_campaign?: string | null
    dice_connection?: dice_connectionUncheckedCreateNestedOneWithoutUserInput
    user_2fa?: user_2faUncheckedCreateNestedOneWithoutUserInput
    user_achievement?: user_achievementUncheckedCreateNestedManyWithoutUserInput
    user_otp_email?: user_otp_emailUncheckedCreateNestedManyWithoutUserInput
    user_social_login?: user_social_loginUncheckedCreateNestedManyWithoutUserInput
    user_sso_login?: user_sso_loginUncheckedCreateNestedManyWithoutUserInput
    user_status?: user_statusUncheckedCreateNestedManyWithoutUserInput
    emails?: emailUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutUser_email_xrefInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutUser_email_xrefInput, userUncheckedCreateWithoutUser_email_xrefInput>
  }

  export type emailCreateWithoutUser_email_xrefInput = {
    email_id?: Decimal | DecimalJsLike | number | string
    address?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    primary_ind?: Decimal | DecimalJsLike | number | string | null
    email_status_lu?: email_status_luCreateNestedOneWithoutEmailInput
    email_type_lu?: email_type_luCreateNestedOneWithoutEmailInput
    user?: userCreateNestedOneWithoutEmailsInput
  }

  export type emailUncheckedCreateWithoutUser_email_xrefInput = {
    user_id?: Decimal | DecimalJsLike | number | string | null
    email_id?: Decimal | DecimalJsLike | number | string
    email_type_id?: Decimal | DecimalJsLike | number | string | null
    address?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    primary_ind?: Decimal | DecimalJsLike | number | string | null
    status_id?: Decimal | DecimalJsLike | number | string | null
  }

  export type emailCreateOrConnectWithoutUser_email_xrefInput = {
    where: emailWhereUniqueInput
    create: XOR<emailCreateWithoutUser_email_xrefInput, emailUncheckedCreateWithoutUser_email_xrefInput>
  }

  export type email_status_luCreateWithoutUser_email_xrefInput = {
    status_id: Decimal | DecimalJsLike | number | string
    status_desc?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    email?: emailCreateNestedManyWithoutEmail_status_luInput
  }

  export type email_status_luUncheckedCreateWithoutUser_email_xrefInput = {
    status_id: Decimal | DecimalJsLike | number | string
    status_desc?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    email?: emailUncheckedCreateNestedManyWithoutEmail_status_luInput
  }

  export type email_status_luCreateOrConnectWithoutUser_email_xrefInput = {
    where: email_status_luWhereUniqueInput
    create: XOR<email_status_luCreateWithoutUser_email_xrefInput, email_status_luUncheckedCreateWithoutUser_email_xrefInput>
  }

  export type userUpsertWithoutUser_email_xrefInput = {
    update: XOR<userUpdateWithoutUser_email_xrefInput, userUncheckedUpdateWithoutUser_email_xrefInput>
    create: XOR<userCreateWithoutUser_email_xrefInput, userUncheckedCreateWithoutUser_email_xrefInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutUser_email_xrefInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutUser_email_xrefInput, userUncheckedUpdateWithoutUser_email_xrefInput>
  }

  export type userUpdateWithoutUser_email_xrefInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    handle?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    activation_code?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    handle_lower?: NullableStringFieldUpdateOperationsInput | string | null
    timezone_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_in_another_language?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    open_id?: NullableStringFieldUpdateOperationsInput | string | null
    reg_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_medium?: NullableStringFieldUpdateOperationsInput | string | null
    utm_campaign?: NullableStringFieldUpdateOperationsInput | string | null
    dice_connection?: dice_connectionUpdateOneWithoutUserNestedInput
    user_2fa?: user_2faUpdateOneWithoutUserNestedInput
    user_achievement?: user_achievementUpdateManyWithoutUserNestedInput
    user_otp_email?: user_otp_emailUpdateManyWithoutUserNestedInput
    user_social_login?: user_social_loginUpdateManyWithoutUserNestedInput
    user_sso_login?: user_sso_loginUpdateManyWithoutUserNestedInput
    user_status?: user_statusUpdateManyWithoutUserNestedInput
    emails?: emailUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutUser_email_xrefInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    handle?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    activation_code?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    handle_lower?: NullableStringFieldUpdateOperationsInput | string | null
    timezone_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_site_hit_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_in_another_language?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    open_id?: NullableStringFieldUpdateOperationsInput | string | null
    reg_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_source?: NullableStringFieldUpdateOperationsInput | string | null
    utm_medium?: NullableStringFieldUpdateOperationsInput | string | null
    utm_campaign?: NullableStringFieldUpdateOperationsInput | string | null
    dice_connection?: dice_connectionUncheckedUpdateOneWithoutUserNestedInput
    user_2fa?: user_2faUncheckedUpdateOneWithoutUserNestedInput
    user_achievement?: user_achievementUncheckedUpdateManyWithoutUserNestedInput
    user_otp_email?: user_otp_emailUncheckedUpdateManyWithoutUserNestedInput
    user_social_login?: user_social_loginUncheckedUpdateManyWithoutUserNestedInput
    user_sso_login?: user_sso_loginUncheckedUpdateManyWithoutUserNestedInput
    user_status?: user_statusUncheckedUpdateManyWithoutUserNestedInput
    emails?: emailUncheckedUpdateManyWithoutUserNestedInput
  }

  export type emailUpsertWithoutUser_email_xrefInput = {
    update: XOR<emailUpdateWithoutUser_email_xrefInput, emailUncheckedUpdateWithoutUser_email_xrefInput>
    create: XOR<emailCreateWithoutUser_email_xrefInput, emailUncheckedCreateWithoutUser_email_xrefInput>
    where?: emailWhereInput
  }

  export type emailUpdateToOneWithWhereWithoutUser_email_xrefInput = {
    where?: emailWhereInput
    data: XOR<emailUpdateWithoutUser_email_xrefInput, emailUncheckedUpdateWithoutUser_email_xrefInput>
  }

  export type emailUpdateWithoutUser_email_xrefInput = {
    email_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    primary_ind?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    email_status_lu?: email_status_luUpdateOneWithoutEmailNestedInput
    email_type_lu?: email_type_luUpdateOneWithoutEmailNestedInput
    user?: userUpdateOneWithoutEmailsNestedInput
  }

  export type emailUncheckedUpdateWithoutUser_email_xrefInput = {
    user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    email_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    email_type_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    primary_ind?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type email_status_luUpsertWithoutUser_email_xrefInput = {
    update: XOR<email_status_luUpdateWithoutUser_email_xrefInput, email_status_luUncheckedUpdateWithoutUser_email_xrefInput>
    create: XOR<email_status_luCreateWithoutUser_email_xrefInput, email_status_luUncheckedCreateWithoutUser_email_xrefInput>
    where?: email_status_luWhereInput
  }

  export type email_status_luUpdateToOneWithWhereWithoutUser_email_xrefInput = {
    where?: email_status_luWhereInput
    data: XOR<email_status_luUpdateWithoutUser_email_xrefInput, email_status_luUncheckedUpdateWithoutUser_email_xrefInput>
  }

  export type email_status_luUpdateWithoutUser_email_xrefInput = {
    status_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status_desc?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: emailUpdateManyWithoutEmail_status_luNestedInput
  }

  export type email_status_luUncheckedUpdateWithoutUser_email_xrefInput = {
    status_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status_desc?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: emailUncheckedUpdateManyWithoutEmail_status_luNestedInput
  }

  export type RoleAssignmentCreateWithoutRoleInput = {
    subjectId: number
    createdBy?: number | null
    createdAt?: Date | string | null
    modifiedBy?: number | null
    modifiedAt?: Date | string | null
    subjectType?: number
  }

  export type RoleAssignmentUncheckedCreateWithoutRoleInput = {
    id?: number
    subjectId: number
    createdBy?: number | null
    createdAt?: Date | string | null
    modifiedBy?: number | null
    modifiedAt?: Date | string | null
    subjectType?: number
  }

  export type RoleAssignmentCreateOrConnectWithoutRoleInput = {
    where: RoleAssignmentWhereUniqueInput
    create: XOR<RoleAssignmentCreateWithoutRoleInput, RoleAssignmentUncheckedCreateWithoutRoleInput>
  }

  export type RoleAssignmentCreateManyRoleInputEnvelope = {
    data: RoleAssignmentCreateManyRoleInput | RoleAssignmentCreateManyRoleInput[]
    skipDuplicates?: boolean
  }

  export type RoleAssignmentUpsertWithWhereUniqueWithoutRoleInput = {
    where: RoleAssignmentWhereUniqueInput
    update: XOR<RoleAssignmentUpdateWithoutRoleInput, RoleAssignmentUncheckedUpdateWithoutRoleInput>
    create: XOR<RoleAssignmentCreateWithoutRoleInput, RoleAssignmentUncheckedCreateWithoutRoleInput>
  }

  export type RoleAssignmentUpdateWithWhereUniqueWithoutRoleInput = {
    where: RoleAssignmentWhereUniqueInput
    data: XOR<RoleAssignmentUpdateWithoutRoleInput, RoleAssignmentUncheckedUpdateWithoutRoleInput>
  }

  export type RoleAssignmentUpdateManyWithWhereWithoutRoleInput = {
    where: RoleAssignmentScalarWhereInput
    data: XOR<RoleAssignmentUpdateManyMutationInput, RoleAssignmentUncheckedUpdateManyWithoutRoleInput>
  }

  export type RoleAssignmentScalarWhereInput = {
    AND?: RoleAssignmentScalarWhereInput | RoleAssignmentScalarWhereInput[]
    OR?: RoleAssignmentScalarWhereInput[]
    NOT?: RoleAssignmentScalarWhereInput | RoleAssignmentScalarWhereInput[]
    id?: IntFilter<"RoleAssignment"> | number
    roleId?: IntFilter<"RoleAssignment"> | number
    subjectId?: IntFilter<"RoleAssignment"> | number
    createdBy?: IntNullableFilter<"RoleAssignment"> | number | null
    createdAt?: DateTimeNullableFilter<"RoleAssignment"> | Date | string | null
    modifiedBy?: IntNullableFilter<"RoleAssignment"> | number | null
    modifiedAt?: DateTimeNullableFilter<"RoleAssignment"> | Date | string | null
    subjectType?: IntFilter<"RoleAssignment"> | number
  }

  export type RoleCreateWithoutRoleAssignmentsInput = {
    name: string
    createdBy?: number | null
    createdAt?: Date | string | null
    modifiedBy?: number | null
    modifiedAt?: Date | string | null
  }

  export type RoleUncheckedCreateWithoutRoleAssignmentsInput = {
    id?: number
    name: string
    createdBy?: number | null
    createdAt?: Date | string | null
    modifiedBy?: number | null
    modifiedAt?: Date | string | null
  }

  export type RoleCreateOrConnectWithoutRoleAssignmentsInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutRoleAssignmentsInput, RoleUncheckedCreateWithoutRoleAssignmentsInput>
  }

  export type RoleUpsertWithoutRoleAssignmentsInput = {
    update: XOR<RoleUpdateWithoutRoleAssignmentsInput, RoleUncheckedUpdateWithoutRoleAssignmentsInput>
    create: XOR<RoleCreateWithoutRoleAssignmentsInput, RoleUncheckedCreateWithoutRoleAssignmentsInput>
    where?: RoleWhereInput
  }

  export type RoleUpdateToOneWithWhereWithoutRoleAssignmentsInput = {
    where?: RoleWhereInput
    data: XOR<RoleUpdateWithoutRoleAssignmentsInput, RoleUncheckedUpdateWithoutRoleAssignmentsInput>
  }

  export type RoleUpdateWithoutRoleAssignmentsInput = {
    name?: StringFieldUpdateOperationsInput | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    modifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RoleUncheckedUpdateWithoutRoleAssignmentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    modifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_achievementCreateManyAchievement_type_luInput = {
    user_id: Decimal | DecimalJsLike | number | string
    achievement_date: Date | string
    description?: string | null
    create_date?: Date | string | null
  }

  export type user_achievementUpdateWithoutAchievement_type_luInput = {
    achievement_date?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: userUpdateOneRequiredWithoutUser_achievementNestedInput
  }

  export type user_achievementUncheckedUpdateWithoutAchievement_type_luInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    achievement_date?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_achievementUncheckedUpdateManyWithoutAchievement_type_luInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    achievement_date?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_email_xrefCreateManyEmailInput = {
    user_id: Decimal | DecimalJsLike | number | string
    is_primary: boolean
    status_id: Decimal | DecimalJsLike | number | string
    create_date?: Date | string | null
    modify_date?: Date | string | null
  }

  export type user_email_xrefUpdateWithoutEmailInput = {
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: userUpdateOneRequiredWithoutUser_email_xrefNestedInput
    email_status_lu?: email_status_luUpdateOneWithoutUser_email_xrefNestedInput
  }

  export type user_email_xrefUncheckedUpdateWithoutEmailInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    status_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_email_xrefUncheckedUpdateManyWithoutEmailInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    status_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type emailCreateManyEmail_status_luInput = {
    user_id?: Decimal | DecimalJsLike | number | string | null
    email_id?: Decimal | DecimalJsLike | number | string
    email_type_id?: Decimal | DecimalJsLike | number | string | null
    address?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    primary_ind?: Decimal | DecimalJsLike | number | string | null
  }

  export type user_email_xrefCreateManyEmail_status_luInput = {
    user_id: Decimal | DecimalJsLike | number | string
    email_id: Decimal | DecimalJsLike | number | string
    is_primary: boolean
    create_date?: Date | string | null
    modify_date?: Date | string | null
  }

  export type emailUpdateWithoutEmail_status_luInput = {
    email_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    primary_ind?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    email_type_lu?: email_type_luUpdateOneWithoutEmailNestedInput
    user_email_xref?: user_email_xrefUpdateManyWithoutEmailNestedInput
    user?: userUpdateOneWithoutEmailsNestedInput
  }

  export type emailUncheckedUpdateWithoutEmail_status_luInput = {
    user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    email_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    email_type_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    primary_ind?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    user_email_xref?: user_email_xrefUncheckedUpdateManyWithoutEmailNestedInput
  }

  export type emailUncheckedUpdateManyWithoutEmail_status_luInput = {
    user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    email_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    email_type_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    primary_ind?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type user_email_xrefUpdateWithoutEmail_status_luInput = {
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: userUpdateOneRequiredWithoutUser_email_xrefNestedInput
    email?: emailUpdateOneRequiredWithoutUser_email_xrefNestedInput
  }

  export type user_email_xrefUncheckedUpdateWithoutEmail_status_luInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    email_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_email_xrefUncheckedUpdateManyWithoutEmail_status_luInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    email_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type emailCreateManyEmail_type_luInput = {
    user_id?: Decimal | DecimalJsLike | number | string | null
    email_id?: Decimal | DecimalJsLike | number | string
    address?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    primary_ind?: Decimal | DecimalJsLike | number | string | null
    status_id?: Decimal | DecimalJsLike | number | string | null
  }

  export type emailUpdateWithoutEmail_type_luInput = {
    email_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    primary_ind?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    email_status_lu?: email_status_luUpdateOneWithoutEmailNestedInput
    user_email_xref?: user_email_xrefUpdateManyWithoutEmailNestedInput
    user?: userUpdateOneWithoutEmailsNestedInput
  }

  export type emailUncheckedUpdateWithoutEmail_type_luInput = {
    user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    email_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    primary_ind?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    user_email_xref?: user_email_xrefUncheckedUpdateManyWithoutEmailNestedInput
  }

  export type emailUncheckedUpdateManyWithoutEmail_type_luInput = {
    user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    email_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    primary_ind?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type user_group_xrefCreateManySecurity_groupsInput = {
    user_group_id: Decimal | DecimalJsLike | number | string
    login_id?: Decimal | DecimalJsLike | number | string | null
    create_user_id?: Decimal | DecimalJsLike | number | string | null
    security_status_id?: Decimal | DecimalJsLike | number | string | null
    create_date?: Date | string | null
  }

  export type user_group_xrefUpdateWithoutSecurity_groupsInput = {
    user_group_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    create_user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    security_user?: security_userUpdateOneWithoutUser_group_xrefNestedInput
    security_status_lu?: security_status_luUpdateOneWithoutUser_group_xrefNestedInput
  }

  export type user_group_xrefUncheckedUpdateWithoutSecurity_groupsInput = {
    user_group_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    login_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    create_user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    security_status_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_group_xrefUncheckedUpdateManyWithoutSecurity_groupsInput = {
    user_group_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    login_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    create_user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    security_status_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_group_xrefCreateManySecurity_status_luInput = {
    user_group_id: Decimal | DecimalJsLike | number | string
    login_id?: Decimal | DecimalJsLike | number | string | null
    group_id?: Decimal | DecimalJsLike | number | string | null
    create_user_id?: Decimal | DecimalJsLike | number | string | null
    create_date?: Date | string | null
  }

  export type user_group_xrefUpdateWithoutSecurity_status_luInput = {
    user_group_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    create_user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    security_user?: security_userUpdateOneWithoutUser_group_xrefNestedInput
    security_groups?: security_groupsUpdateOneWithoutUser_group_xrefNestedInput
  }

  export type user_group_xrefUncheckedUpdateWithoutSecurity_status_luInput = {
    user_group_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    login_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    group_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    create_user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_group_xrefUncheckedUpdateManyWithoutSecurity_status_luInput = {
    user_group_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    login_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    group_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    create_user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_group_xrefCreateManySecurity_userInput = {
    user_group_id: Decimal | DecimalJsLike | number | string
    group_id?: Decimal | DecimalJsLike | number | string | null
    create_user_id?: Decimal | DecimalJsLike | number | string | null
    security_status_id?: Decimal | DecimalJsLike | number | string | null
    create_date?: Date | string | null
  }

  export type user_group_xrefUpdateWithoutSecurity_userInput = {
    user_group_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    create_user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    security_groups?: security_groupsUpdateOneWithoutUser_group_xrefNestedInput
    security_status_lu?: security_status_luUpdateOneWithoutUser_group_xrefNestedInput
  }

  export type user_group_xrefUncheckedUpdateWithoutSecurity_userInput = {
    user_group_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    group_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    create_user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    security_status_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_group_xrefUncheckedUpdateManyWithoutSecurity_userInput = {
    user_group_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    group_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    create_user_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    security_status_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_social_loginCreateManySocial_login_providerInput = {
    social_user_id?: string | null
    user_id: Decimal | DecimalJsLike | number | string
    social_user_name: string
    social_email?: string | null
    social_email_verified?: boolean | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
  }

  export type user_social_loginUpdateWithoutSocial_login_providerInput = {
    social_user_id?: NullableStringFieldUpdateOperationsInput | string | null
    social_user_name?: StringFieldUpdateOperationsInput | string
    social_email?: NullableStringFieldUpdateOperationsInput | string | null
    social_email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: userUpdateOneRequiredWithoutUser_social_loginNestedInput
  }

  export type user_social_loginUncheckedUpdateWithoutSocial_login_providerInput = {
    social_user_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    social_user_name?: StringFieldUpdateOperationsInput | string
    social_email?: NullableStringFieldUpdateOperationsInput | string | null
    social_email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_social_loginUncheckedUpdateManyWithoutSocial_login_providerInput = {
    social_user_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    social_user_name?: StringFieldUpdateOperationsInput | string
    social_email?: NullableStringFieldUpdateOperationsInput | string | null
    social_email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_sso_loginCreateManySso_login_providerInput = {
    user_id: Decimal | DecimalJsLike | number | string
    sso_user_id: string
    sso_user_name?: string | null
    email?: string | null
  }

  export type user_sso_loginUpdateWithoutSso_login_providerInput = {
    sso_user_id?: StringFieldUpdateOperationsInput | string
    sso_user_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    user?: userUpdateOneRequiredWithoutUser_sso_loginNestedInput
  }

  export type user_sso_loginUncheckedUpdateWithoutSso_login_providerInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    sso_user_id?: StringFieldUpdateOperationsInput | string
    sso_user_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_sso_loginUncheckedUpdateManyWithoutSso_login_providerInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    sso_user_id?: StringFieldUpdateOperationsInput | string
    sso_user_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_achievementCreateManyUserInput = {
    achievement_date: Date | string
    achievement_type_id: Decimal | DecimalJsLike | number | string
    description?: string | null
    create_date?: Date | string | null
  }

  export type user_otp_emailCreateManyUserInput = {
    id?: number
    mode: number
    otp: string
    expire_at: Date | string
    resend?: boolean
    fail_count?: number
  }

  export type user_social_loginCreateManyUserInput = {
    social_user_id?: string | null
    social_login_provider_id: Decimal | DecimalJsLike | number | string
    social_user_name: string
    social_email?: string | null
    social_email_verified?: boolean | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
  }

  export type user_sso_loginCreateManyUserInput = {
    sso_user_id: string
    sso_user_name?: string | null
    provider_id: Decimal | DecimalJsLike | number | string
    email?: string | null
  }

  export type user_statusCreateManyUserInput = {
    user_status_type_id: Decimal | DecimalJsLike | number | string
    user_status_id?: Decimal | DecimalJsLike | number | string | null
  }

  export type user_email_xrefCreateManyUserInput = {
    email_id: Decimal | DecimalJsLike | number | string
    is_primary: boolean
    status_id: Decimal | DecimalJsLike | number | string
    create_date?: Date | string | null
    modify_date?: Date | string | null
  }

  export type emailCreateManyUserInput = {
    email_id?: Decimal | DecimalJsLike | number | string
    email_type_id?: Decimal | DecimalJsLike | number | string | null
    address?: string | null
    create_date?: Date | string | null
    modify_date?: Date | string | null
    primary_ind?: Decimal | DecimalJsLike | number | string | null
    status_id?: Decimal | DecimalJsLike | number | string | null
  }

  export type user_achievementUpdateWithoutUserInput = {
    achievement_date?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievement_type_lu?: achievement_type_luUpdateOneRequiredWithoutUser_achievementNestedInput
  }

  export type user_achievementUncheckedUpdateWithoutUserInput = {
    achievement_date?: DateTimeFieldUpdateOperationsInput | Date | string
    achievement_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_achievementUncheckedUpdateManyWithoutUserInput = {
    achievement_date?: DateTimeFieldUpdateOperationsInput | Date | string
    achievement_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_otp_emailUpdateWithoutUserInput = {
    mode?: IntFieldUpdateOperationsInput | number
    otp?: StringFieldUpdateOperationsInput | string
    expire_at?: DateTimeFieldUpdateOperationsInput | Date | string
    resend?: BoolFieldUpdateOperationsInput | boolean
    fail_count?: IntFieldUpdateOperationsInput | number
  }

  export type user_otp_emailUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    mode?: IntFieldUpdateOperationsInput | number
    otp?: StringFieldUpdateOperationsInput | string
    expire_at?: DateTimeFieldUpdateOperationsInput | Date | string
    resend?: BoolFieldUpdateOperationsInput | boolean
    fail_count?: IntFieldUpdateOperationsInput | number
  }

  export type user_otp_emailUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    mode?: IntFieldUpdateOperationsInput | number
    otp?: StringFieldUpdateOperationsInput | string
    expire_at?: DateTimeFieldUpdateOperationsInput | Date | string
    resend?: BoolFieldUpdateOperationsInput | boolean
    fail_count?: IntFieldUpdateOperationsInput | number
  }

  export type user_social_loginUpdateWithoutUserInput = {
    social_user_id?: NullableStringFieldUpdateOperationsInput | string | null
    social_user_name?: StringFieldUpdateOperationsInput | string
    social_email?: NullableStringFieldUpdateOperationsInput | string | null
    social_email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    social_login_provider?: social_login_providerUpdateOneRequiredWithoutUser_social_loginNestedInput
  }

  export type user_social_loginUncheckedUpdateWithoutUserInput = {
    social_user_id?: NullableStringFieldUpdateOperationsInput | string | null
    social_login_provider_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    social_user_name?: StringFieldUpdateOperationsInput | string
    social_email?: NullableStringFieldUpdateOperationsInput | string | null
    social_email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_social_loginUncheckedUpdateManyWithoutUserInput = {
    social_user_id?: NullableStringFieldUpdateOperationsInput | string | null
    social_login_provider_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    social_user_name?: StringFieldUpdateOperationsInput | string
    social_email?: NullableStringFieldUpdateOperationsInput | string | null
    social_email_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_sso_loginUpdateWithoutUserInput = {
    sso_user_id?: StringFieldUpdateOperationsInput | string
    sso_user_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    sso_login_provider?: sso_login_providerUpdateOneRequiredWithoutUser_sso_loginNestedInput
  }

  export type user_sso_loginUncheckedUpdateWithoutUserInput = {
    sso_user_id?: StringFieldUpdateOperationsInput | string
    sso_user_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_sso_loginUncheckedUpdateManyWithoutUserInput = {
    sso_user_id?: StringFieldUpdateOperationsInput | string
    sso_user_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_statusUpdateWithoutUserInput = {
    user_status_lu?: user_status_luUpdateOneWithoutUser_statusNestedInput
    user_status_type_lu?: user_status_type_luUpdateOneRequiredWithoutUser_statusNestedInput
  }

  export type user_statusUncheckedUpdateWithoutUserInput = {
    user_status_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    user_status_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type user_statusUncheckedUpdateManyWithoutUserInput = {
    user_status_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    user_status_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type user_email_xrefUpdateWithoutUserInput = {
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: emailUpdateOneRequiredWithoutUser_email_xrefNestedInput
    email_status_lu?: email_status_luUpdateOneWithoutUser_email_xrefNestedInput
  }

  export type user_email_xrefUncheckedUpdateWithoutUserInput = {
    email_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    status_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_email_xrefUncheckedUpdateManyWithoutUserInput = {
    email_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    status_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type emailUpdateWithoutUserInput = {
    email_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    primary_ind?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    email_status_lu?: email_status_luUpdateOneWithoutEmailNestedInput
    email_type_lu?: email_type_luUpdateOneWithoutEmailNestedInput
    user_email_xref?: user_email_xrefUpdateManyWithoutEmailNestedInput
  }

  export type emailUncheckedUpdateWithoutUserInput = {
    email_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    email_type_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    primary_ind?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    user_email_xref?: user_email_xrefUncheckedUpdateManyWithoutEmailNestedInput
  }

  export type emailUncheckedUpdateManyWithoutUserInput = {
    email_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    email_type_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modify_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    primary_ind?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type user_statusCreateManyUser_status_luInput = {
    user_id: Decimal | DecimalJsLike | number | string
    user_status_type_id: Decimal | DecimalJsLike | number | string
  }

  export type user_statusUpdateWithoutUser_status_luInput = {
    user?: userUpdateOneRequiredWithoutUser_statusNestedInput
    user_status_type_lu?: user_status_type_luUpdateOneRequiredWithoutUser_statusNestedInput
  }

  export type user_statusUncheckedUpdateWithoutUser_status_luInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    user_status_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type user_statusUncheckedUpdateManyWithoutUser_status_luInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    user_status_type_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type user_statusCreateManyUser_status_type_luInput = {
    user_id: Decimal | DecimalJsLike | number | string
    user_status_id?: Decimal | DecimalJsLike | number | string | null
  }

  export type user_statusUpdateWithoutUser_status_type_luInput = {
    user?: userUpdateOneRequiredWithoutUser_statusNestedInput
    user_status_lu?: user_status_luUpdateOneWithoutUser_statusNestedInput
  }

  export type user_statusUncheckedUpdateWithoutUser_status_type_luInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    user_status_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type user_statusUncheckedUpdateManyWithoutUser_status_type_luInput = {
    user_id?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    user_status_id?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type RoleAssignmentCreateManyRoleInput = {
    id?: number
    subjectId: number
    createdBy?: number | null
    createdAt?: Date | string | null
    modifiedBy?: number | null
    modifiedAt?: Date | string | null
    subjectType?: number
  }

  export type RoleAssignmentUpdateWithoutRoleInput = {
    subjectId?: IntFieldUpdateOperationsInput | number
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    modifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subjectType?: IntFieldUpdateOperationsInput | number
  }

  export type RoleAssignmentUncheckedUpdateWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    subjectId?: IntFieldUpdateOperationsInput | number
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    modifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subjectType?: IntFieldUpdateOperationsInput | number
  }

  export type RoleAssignmentUncheckedUpdateManyWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    subjectId?: IntFieldUpdateOperationsInput | number
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    modifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subjectType?: IntFieldUpdateOperationsInput | number
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}