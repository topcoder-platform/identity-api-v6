
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.14.0
 * Query Engine version: 717184b7b35ea05dfa71a3236b7af656013e1e49
 */
Prisma.prismaVersion = {
  client: "6.14.0",
  engine: "717184b7b35ea05dfa71a3236b7af656013e1e49"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  user_id: 'user_id',
  first_name: 'first_name',
  last_name: 'last_name',
  create_date: 'create_date',
  modify_date: 'modify_date',
  handle: 'handle',
  last_login: 'last_login',
  status: 'status',
  activation_code: 'activation_code',
  middle_name: 'middle_name',
  handle_lower: 'handle_lower',
  timezone_id: 'timezone_id',
  last_site_hit_date: 'last_site_hit_date',
  name_in_another_language: 'name_in_another_language',
  password: 'password',
  open_id: 'open_id',
  reg_source: 'reg_source',
  utm_source: 'utm_source',
  utm_medium: 'utm_medium',
  utm_campaign: 'utm_campaign'
};

exports.Prisma.EmailScalarFieldEnum = {
  user_id: 'user_id',
  email_id: 'email_id',
  email_type_id: 'email_type_id',
  address: 'address',
  create_date: 'create_date',
  modify_date: 'modify_date',
  primary_ind: 'primary_ind',
  status_id: 'status_id'
};

exports.Prisma.Access_tokenScalarFieldEnum = {
  access_token_id: 'access_token_id',
  token_type: 'token_type',
  token_key: 'token_key',
  grant_type: 'grant_type',
  issued_at: 'issued_at',
  lifetime: 'lifetime',
  client_id: 'client_id',
  user_login_name: 'user_login_name'
};

exports.Prisma.Access_token_has_permissionScalarFieldEnum = {
  access_token_access_token_id: 'access_token_access_token_id',
  permission_permission_id: 'permission_permission_id'
};

exports.Prisma.Achievement_type_luScalarFieldEnum = {
  achievement_type_id: 'achievement_type_id',
  achievement_type_desc: 'achievement_type_desc'
};

exports.Prisma.AddressScalarFieldEnum = {
  address_id: 'address_id',
  address_type_id: 'address_type_id',
  address1: 'address1',
  address2: 'address2',
  city: 'city',
  state_code: 'state_code',
  zip: 'zip',
  country_code: 'country_code',
  create_date: 'create_date',
  modify_date: 'modify_date',
  address3: 'address3',
  province: 'province'
};

exports.Prisma.Address_type_luScalarFieldEnum = {
  address_type_id: 'address_type_id',
  address_type_desc: 'address_type_desc',
  create_date: 'create_date',
  modify_date: 'modify_date'
};

exports.Prisma.Authorization_code_grantScalarFieldEnum = {
  authorization_code_grant_id: 'authorization_code_grant_id',
  redirect_uri: 'redirect_uri',
  code: 'code',
  issued_at: 'issued_at',
  lifetime: 'lifetime',
  client_id: 'client_id',
  user_login_name: 'user_login_name'
};

exports.Prisma.Authorization_code_grant_has_permissionScalarFieldEnum = {
  code_grant_id: 'code_grant_id',
  permission_permission_id: 'permission_permission_id'
};

exports.Prisma.Bounce_type_luScalarFieldEnum = {
  bounce_type: 'bounce_type',
  bounce_type_desc: 'bounce_type_desc'
};

exports.Prisma.CalendarScalarFieldEnum = {
  calendar_id: 'calendar_id',
  year: 'year',
  month_numeric: 'month_numeric',
  month_alpha: 'month_alpha',
  day_of_month: 'day_of_month',
  day_of_week: 'day_of_week',
  week_day: 'week_day',
  year_month: 'year_month',
  week_of_year: 'week_of_year',
  day_of_year: 'day_of_year',
  holiday: 'holiday',
  weekend: 'weekend',
  date: 'date',
  week_year: 'week_year',
  quarter_of_year: 'quarter_of_year'
};

exports.Prisma.Client_terms_mappingScalarFieldEnum = {
  client_terms_mapping_id: 'client_terms_mapping_id',
  client_project_id: 'client_project_id',
  terms_of_use_id: 'terms_of_use_id',
  resource_role_id: 'resource_role_id',
  create_date: 'create_date',
  modify_date: 'modify_date'
};

exports.Prisma.CompanyScalarFieldEnum = {
  company_id: 'company_id',
  company_name: 'company_name',
  primary_contact_id: 'primary_contact_id',
  create_date: 'create_date',
  modify_date: 'modify_date',
  timezone_id: 'timezone_id'
};

exports.Prisma.Company_datasource_xrefScalarFieldEnum = {
  datasource_id: 'datasource_id',
  company_id: 'company_id',
  create_date: 'create_date'
};

exports.Prisma.Company_terms_of_use_xrefScalarFieldEnum = {
  company_id: 'company_id',
  terms_of_use_id: 'terms_of_use_id',
  create_date: 'create_date',
  modify_date: 'modify_date'
};

exports.Prisma.Contest_eligibilityScalarFieldEnum = {
  contest_eligibility_id: 'contest_eligibility_id',
  contest_id: 'contest_id',
  is_studio: 'is_studio'
};

exports.Prisma.ContinentScalarFieldEnum = {
  continent_id: 'continent_id',
  continent_name: 'continent_name'
};

exports.Prisma.Corona_eventScalarFieldEnum = {
  corona_event_id: 'corona_event_id',
  corona_event_type_id: 'corona_event_type_id',
  user_id: 'user_id',
  scanned_ind: 'scanned_ind',
  corona_event_timestamp: 'corona_event_timestamp'
};

exports.Prisma.Corona_event_typeScalarFieldEnum = {
  corona_event_type_id: 'corona_event_type_id',
  corona_event_type_name: 'corona_event_type_name'
};

exports.Prisma.CountryScalarFieldEnum = {
  country_code: 'country_code',
  country_name: 'country_name',
  modify_date: 'modify_date',
  participating: 'participating',
  default_taxform_id: 'default_taxform_id',
  longitude: 'longitude',
  latitude: 'latitude',
  region: 'region',
  iso_name: 'iso_name',
  iso_alpha2_code: 'iso_alpha2_code',
  iso_alpha3_code: 'iso_alpha3_code'
};

exports.Prisma.Datasource_luScalarFieldEnum = {
  datasource_id: 'datasource_id',
  datasource_name: 'datasource_name',
  datasource_desc: 'datasource_desc',
  datasource_type_id: 'datasource_type_id',
  create_date: 'create_date',
  modify_date: 'modify_date'
};

exports.Prisma.Datasource_type_luScalarFieldEnum = {
  datasource_type_desc: 'datasource_type_desc',
  datasource_type_id: 'datasource_type_id',
  create_date: 'create_date',
  modify_date: 'modify_date'
};

exports.Prisma.Demographic_answerScalarFieldEnum = {
  demographic_answer_id: 'demographic_answer_id',
  demographic_question_id: 'demographic_question_id',
  demographic_answer_text: 'demographic_answer_text',
  sort: 'sort',
  status: 'status'
};

exports.Prisma.Demographic_assignmentScalarFieldEnum = {
  demographic_question_id: 'demographic_question_id',
  coder_type_id: 'coder_type_id',
  registration_type_id: 'registration_type_id',
  sort: 'sort',
  status: 'status',
  is_required: 'is_required'
};

exports.Prisma.Demographic_questionScalarFieldEnum = {
  demographic_question_id: 'demographic_question_id',
  demographic_question_text: 'demographic_question_text',
  selectable: 'selectable',
  demographic_question_desc: 'demographic_question_desc'
};

exports.Prisma.Dice_connectionScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  connection: 'connection',
  accepted: 'accepted',
  created_at: 'created_at',
  short_url: 'short_url',
  con_created_at: 'con_created_at'
};

exports.Prisma.Email_requestScalarFieldEnum = {
  request_id: 'request_id',
  user_id: 'user_id',
  email: 'email',
  random_key: 'random_key',
  expired_at: 'expired_at',
  request_type: 'request_type'
};

exports.Prisma.Email_status_luScalarFieldEnum = {
  status_id: 'status_id',
  status_desc: 'status_desc',
  create_date: 'create_date',
  modify_date: 'modify_date'
};

exports.Prisma.Email_type_luScalarFieldEnum = {
  email_type_id: 'email_type_id',
  email_type_desc: 'email_type_desc',
  create_date: 'create_date',
  modify_date: 'modify_date'
};

exports.Prisma.EventScalarFieldEnum = {
  event_id: 'event_id',
  event_type_id: 'event_type_id',
  event_desc: 'event_desc',
  start_registration: 'start_registration',
  end_registration: 'end_registration',
  terms_of_use_id: 'terms_of_use_id',
  survey_id: 'survey_id',
  event_short_desc: 'event_short_desc',
  modify_date: 'modify_date',
  parent_event_id: 'parent_event_id'
};

exports.Prisma.Event_luScalarFieldEnum = {
  event_id: 'event_id',
  event_description: 'event_description',
  event_handler: 'event_handler'
};

exports.Prisma.Event_registrationScalarFieldEnum = {
  event_id: 'event_id',
  user_id: 'user_id',
  eligible_ind: 'eligible_ind',
  notes: 'notes',
  create_date: 'create_date',
  modify_date: 'modify_date'
};

exports.Prisma.Event_type_luScalarFieldEnum = {
  event_type_id: 'event_type_id',
  event_type_desc: 'event_type_desc'
};

exports.Prisma.Gov_id_documentScalarFieldEnum = {
  gov_id_document_id: 'gov_id_document_id',
  user_id: 'user_id',
  country_code: 'country_code',
  id_number: 'id_number',
  received_date: 'received_date',
  expire_date: 'expire_date'
};

exports.Prisma.Group_contest_eligibilityScalarFieldEnum = {
  contest_eligibility_id: 'contest_eligibility_id',
  group_id: 'group_id'
};

exports.Prisma.Group_role_xrefScalarFieldEnum = {
  group_role_id: 'group_role_id',
  group_id: 'group_id',
  role_id: 'role_id',
  create_user_id: 'create_user_id',
  security_status_id: 'security_status_id'
};

exports.Prisma.Http_uriScalarFieldEnum = {
  http_uri_id: 'http_uri_id',
  path: 'path'
};

exports.Prisma.Http_verbScalarFieldEnum = {
  http_verb_id: 'http_verb_id',
  name: 'name'
};

exports.Prisma.Id_sequencesScalarFieldEnum = {
  name: 'name',
  next_block_start: 'next_block_start',
  block_size: 'block_size',
  exhausted: 'exhausted'
};

exports.Prisma.Invalid_handlesScalarFieldEnum = {
  invalid_handle_id: 'invalid_handle_id',
  invalid_handle: 'invalid_handle'
};

exports.Prisma.Key_generationScalarFieldEnum = {
  user_def: 'user_def',
  high_value: 'high_value'
};

exports.Prisma.Member_imageScalarFieldEnum = {
  member_image_id: 'member_image_id',
  member_id: 'member_id',
  image_id: 'image_id',
  removed: 'removed',
  created_by: 'created_by',
  created_date: 'created_date',
  updated_by: 'updated_by',
  updated_date: 'updated_date'
};

exports.Prisma.NoteScalarFieldEnum = {
  note_id: 'note_id',
  text: 'text',
  submitted_by: 'submitted_by',
  note_type_id: 'note_type_id',
  modify_date: 'modify_date',
  create_date: 'create_date'
};

exports.Prisma.Note_type_luScalarFieldEnum = {
  note_type_id: 'note_type_id',
  note_type_desc: 'note_type_desc',
  create_date: 'create_date',
  modify_date: 'modify_date'
};

exports.Prisma.Notify_luScalarFieldEnum = {
  notify_id: 'notify_id',
  name: 'name',
  status: 'status',
  sort: 'sort',
  notify_type_id: 'notify_type_id'
};

exports.Prisma.Notify_type_luScalarFieldEnum = {
  notify_type_id: 'notify_type_id',
  notify_type_desc: 'notify_type_desc',
  notify_type_sort_order: 'notify_type_sort_order'
};

exports.Prisma.Oauth_permissionScalarFieldEnum = {
  permission_id: 'permission_id',
  name: 'name',
  description: 'description',
  default: 'default'
};

exports.Prisma.Oauth_permission_has_http_uriScalarFieldEnum = {
  permission_permission_id: 'permission_permission_id',
  http_uri_http_uri_id: 'http_uri_http_uri_id'
};

exports.Prisma.Oauth_permission_has_http_verbScalarFieldEnum = {
  permission_permission_id: 'permission_permission_id',
  http_verb_http_verb_id: 'http_verb_http_verb_id'
};

exports.Prisma.Page_trackerScalarFieldEnum = {
  tracking_id: 'tracking_id',
  user_id: 'user_id',
  action_id: 'action_id',
  action_time: 'action_time',
  next_page_url: 'next_page_url',
  source: 'source'
};

exports.Prisma.Page_tracker_actionScalarFieldEnum = {
  action_id: 'action_id',
  action_name: 'action_name',
  action_description: 'action_description'
};

exports.Prisma.Password_recoveryScalarFieldEnum = {
  password_recovery_id: 'password_recovery_id',
  user_id: 'user_id',
  recovery_address: 'recovery_address',
  expire_date: 'expire_date',
  used_ind: 'used_ind',
  random_key: 'random_key'
};

exports.Prisma.Password_reset_tokenScalarFieldEnum = {
  user_id: 'user_id',
  token: 'token',
  expired_at: 'expired_at',
  email_type_id: 'email_type_id'
};

exports.Prisma.Permission_codeScalarFieldEnum = {
  code: 'code',
  group_id: 'group_id',
  next_page: 'next_page'
};

exports.Prisma.Pgifx_tbl_channel_mappingScalarFieldEnum = {
  tabid: 'tabid',
  tablename: 'tablename',
  schemaname: 'schemaname',
  channel: 'channel',
  topic: 'topic',
  create_date: 'create_date'
};

exports.Prisma.PhoneScalarFieldEnum = {
  user_id: 'user_id',
  phone_id: 'phone_id',
  phone_type_id: 'phone_type_id',
  phone_number: 'phone_number',
  create_date: 'create_date',
  modify_date: 'modify_date',
  primary_ind: 'primary_ind'
};

exports.Prisma.Phone_type_luScalarFieldEnum = {
  phone_type_id: 'phone_type_id',
  phone_type_desc: 'phone_type_desc',
  create_date: 'create_date',
  modify_date: 'modify_date'
};

exports.Prisma.Photo_imageScalarFieldEnum = {
  image_id: 'image_id',
  file_name: 'file_name'
};

exports.Prisma.Preference_group_luScalarFieldEnum = {
  preference_group_id: 'preference_group_id',
  preference_group_desc: 'preference_group_desc',
  sort_order: 'sort_order'
};

exports.Prisma.Preference_luScalarFieldEnum = {
  preference_id: 'preference_id',
  preference_name: 'preference_name',
  preference_desc: 'preference_desc',
  preference_group_id: 'preference_group_id',
  preference_type_id: 'preference_type_id',
  sort_order: 'sort_order'
};

exports.Prisma.Preference_type_luScalarFieldEnum = {
  preference_type_id: 'preference_type_id',
  desc: 'desc'
};

exports.Prisma.Preference_valueScalarFieldEnum = {
  preference_value_id: 'preference_value_id',
  preference_id: 'preference_id',
  value: 'value',
  desc: 'desc',
  sort_order: 'sort_order'
};

exports.Prisma.ProfessorScalarFieldEnum = {
  user_id: 'user_id',
  status_id: 'status_id',
  create_date: 'create_date'
};

exports.Prisma.Professor_status_luScalarFieldEnum = {
  status_id: 'status_id',
  description: 'description'
};

exports.Prisma.Project_role_terms_of_use_xrefScalarFieldEnum = {
  project_id: 'project_id',
  resource_role_id: 'resource_role_id',
  terms_of_use_id: 'terms_of_use_id',
  create_date: 'create_date',
  modify_date: 'modify_date',
  sort_order: 'sort_order',
  group_ind: 'group_ind'
};

exports.Prisma.Registration_type_luScalarFieldEnum = {
  registration_type_id: 'registration_type_id',
  registration_type_name: 'registration_type_name',
  registration_type_desc: 'registration_type_desc',
  active_ind: 'active_ind',
  security_group_id: 'security_group_id',
  sort: 'sort'
};

exports.Prisma.Registration_type_notify_xrefScalarFieldEnum = {
  registration_type_id: 'registration_type_id',
  notify_id: 'notify_id'
};

exports.Prisma.Registration_type_preference_xrefScalarFieldEnum = {
  registration_type_id: 'registration_type_id',
  preference_id: 'preference_id'
};

exports.Prisma.SchoolScalarFieldEnum = {
  school_id: 'school_id',
  sort_letter: 'sort_letter',
  city: 'city',
  state_code: 'state_code',
  country_code: 'country_code',
  user_id: 'user_id',
  name: 'name',
  modify_date: 'modify_date',
  short_name: 'short_name',
  school_type_id: 'school_type_id',
  address_id: 'address_id',
  viewable: 'viewable',
  create_date: 'create_date'
};

exports.Prisma.School_association_type_luScalarFieldEnum = {
  school_association_type_id: 'school_association_type_id',
  school_association_type_desc: 'school_association_type_desc'
};

exports.Prisma.School_type_luScalarFieldEnum = {
  school_type_id: 'school_type_id',
  school_type_desc: 'school_type_desc'
};

exports.Prisma.Secret_questionScalarFieldEnum = {
  user_id: 'user_id',
  question: 'question',
  response: 'response'
};

exports.Prisma.Security_groupsScalarFieldEnum = {
  group_id: 'group_id',
  description: 'description',
  challenge_group_ind: 'challenge_group_ind',
  create_user_id: 'create_user_id'
};

exports.Prisma.Security_permsScalarFieldEnum = {
  role_id: 'role_id',
  permission: 'permission',
  create_user_id: 'create_user_id',
  security_status_id: 'security_status_id'
};

exports.Prisma.Security_rolesScalarFieldEnum = {
  role_id: 'role_id',
  description: 'description',
  create_user_id: 'create_user_id'
};

exports.Prisma.Security_status_luScalarFieldEnum = {
  security_status_id: 'security_status_id',
  status_desc: 'status_desc'
};

exports.Prisma.Security_userScalarFieldEnum = {
  login_id: 'login_id',
  user_id: 'user_id',
  password: 'password',
  create_user_id: 'create_user_id',
  modify_date: 'modify_date'
};

exports.Prisma.Sequence_objectScalarFieldEnum = {
  name: 'name',
  id: 'id',
  current_value: 'current_value'
};

exports.Prisma.Social_login_providerScalarFieldEnum = {
  social_login_provider_id: 'social_login_provider_id',
  name: 'name'
};

exports.Prisma.Sso_login_providerScalarFieldEnum = {
  sso_login_provider_id: 'sso_login_provider_id',
  name: 'name',
  type: 'type',
  identify_email_enabled: 'identify_email_enabled',
  identify_handle_enabled: 'identify_handle_enabled'
};

exports.Prisma.StateScalarFieldEnum = {
  state_code: 'state_code',
  state_name: 'state_name',
  region_code: 'region_code',
  modify_date: 'modify_date',
  demographic_decline: 'demographic_decline'
};

exports.Prisma.Sync_test_idScalarFieldEnum = {
  uniqid: 'uniqid',
  description: 'description',
  created_at: 'created_at'
};

exports.Prisma.Terms_of_useScalarFieldEnum = {
  terms_of_use_id: 'terms_of_use_id',
  terms_text: 'terms_text',
  terms_of_use_type_id: 'terms_of_use_type_id',
  create_date: 'create_date',
  modify_date: 'modify_date',
  title: 'title',
  url: 'url',
  terms_of_use_agreeability_type_id: 'terms_of_use_agreeability_type_id'
};

exports.Prisma.Terms_of_use_agreeability_type_luScalarFieldEnum = {
  terms_of_use_agreeability_type_id: 'terms_of_use_agreeability_type_id',
  name: 'name',
  description: 'description'
};

exports.Prisma.Terms_of_use_dependencyScalarFieldEnum = {
  dependency_terms_of_use_id: 'dependency_terms_of_use_id',
  dependent_terms_of_use_id: 'dependent_terms_of_use_id'
};

exports.Prisma.Terms_of_use_docusign_template_xrefScalarFieldEnum = {
  terms_of_use_id: 'terms_of_use_id',
  docusign_template_id: 'docusign_template_id'
};

exports.Prisma.Terms_of_use_typeScalarFieldEnum = {
  terms_of_use_type_id: 'terms_of_use_type_id',
  terms_of_use_type_desc: 'terms_of_use_type_desc',
  create_date: 'create_date',
  modify_date: 'modify_date'
};

exports.Prisma.Timezone_luScalarFieldEnum = {
  timezone_id: 'timezone_id',
  timezone_desc: 'timezone_desc',
  create_date: 'create_date'
};

exports.Prisma.User_2faScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  mfa_enabled: 'mfa_enabled',
  dice_enabled: 'dice_enabled',
  created_by: 'created_by',
  created_at: 'created_at',
  modified_by: 'modified_by',
  modified_at: 'modified_at'
};

exports.Prisma.User_address_xrefScalarFieldEnum = {
  user_id: 'user_id',
  address_id: 'address_id'
};

exports.Prisma.User_eventScalarFieldEnum = {
  user_event_id: 'user_event_id',
  user_id: 'user_id',
  status_id: 'status_id',
  event_id: 'event_id',
  event_date: 'event_date'
};

exports.Prisma.User_event_status_luScalarFieldEnum = {
  status_id: 'status_id',
  status_desc: 'status_desc'
};

exports.Prisma.User_group_xrefScalarFieldEnum = {
  user_group_id: 'user_group_id',
  login_id: 'login_id',
  group_id: 'group_id',
  create_user_id: 'create_user_id',
  security_status_id: 'security_status_id',
  create_date: 'create_date'
};

exports.Prisma.User_note_xrefScalarFieldEnum = {
  user_id: 'user_id',
  note_id: 'note_id',
  modify_date: 'modify_date',
  create_date: 'create_date'
};

exports.Prisma.User_notify_xrefScalarFieldEnum = {
  user_id: 'user_id',
  notify_id: 'notify_id'
};

exports.Prisma.User_otp_emailScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  mode: 'mode',
  otp: 'otp',
  expire_at: 'expire_at',
  resend: 'resend',
  fail_count: 'fail_count'
};

exports.Prisma.User_preferenceScalarFieldEnum = {
  user_id: 'user_id',
  preference_id: 'preference_id',
  value: 'value',
  preference_value_id: 'preference_value_id',
  create_date: 'create_date',
  modify_date: 'modify_date'
};

exports.Prisma.User_role_xrefScalarFieldEnum = {
  user_role_id: 'user_role_id',
  login_id: 'login_id',
  role_id: 'role_id',
  create_user_id: 'create_user_id',
  security_status_id: 'security_status_id'
};

exports.Prisma.User_schoolScalarFieldEnum = {
  user_school_id: 'user_school_id',
  user_id: 'user_id',
  school_id: 'school_id',
  school_association_type_id: 'school_association_type_id',
  primary_ind: 'primary_ind',
  modify_date: 'modify_date',
  create_date: 'create_date'
};

exports.Prisma.User_social_loginScalarFieldEnum = {
  social_user_id: 'social_user_id',
  user_id: 'user_id',
  social_login_provider_id: 'social_login_provider_id',
  social_user_name: 'social_user_name',
  social_email: 'social_email',
  social_email_verified: 'social_email_verified',
  create_date: 'create_date',
  modify_date: 'modify_date'
};

exports.Prisma.User_sso_loginScalarFieldEnum = {
  user_id: 'user_id',
  sso_user_id: 'sso_user_id',
  sso_user_name: 'sso_user_name',
  provider_id: 'provider_id',
  email: 'email'
};

exports.Prisma.User_statusScalarFieldEnum = {
  user_id: 'user_id',
  user_status_type_id: 'user_status_type_id',
  user_status_id: 'user_status_id'
};

exports.Prisma.User_status_luScalarFieldEnum = {
  user_status_id: 'user_status_id',
  description: 'description'
};

exports.Prisma.User_status_type_luScalarFieldEnum = {
  user_status_type_id: 'user_status_type_id',
  description: 'description'
};

exports.Prisma.User_terms_of_use_ban_xrefScalarFieldEnum = {
  user_id: 'user_id',
  terms_of_use_id: 'terms_of_use_id',
  create_date: 'create_date'
};

exports.Prisma.User_terms_of_use_xrefScalarFieldEnum = {
  user_id: 'user_id',
  terms_of_use_id: 'terms_of_use_id',
  create_date: 'create_date',
  modify_date: 'modify_date'
};

exports.Prisma.Vm_accountScalarFieldEnum = {
  vm_account_id: 'vm_account_id',
  aws_access_key_id: 'aws_access_key_id',
  aws_security_access_key: 'aws_security_access_key',
  create_date: 'create_date',
  modify_date: 'modify_date',
  account_name: 'account_name'
};

exports.Prisma.Vm_account_userScalarFieldEnum = {
  vm_account_user_id: 'vm_account_user_id',
  vm_account_id: 'vm_account_id',
  user_id: 'user_id',
  create_date: 'create_date',
  modify_date: 'modify_date'
};

exports.Prisma.Vm_availability_zoneScalarFieldEnum = {
  vm_availability_zone_id: 'vm_availability_zone_id',
  name: 'name',
  create_date: 'create_date',
  modify_date: 'modify_date'
};

exports.Prisma.Vm_contest_typeScalarFieldEnum = {
  vm_contest_type_id: 'vm_contest_type_id',
  name: 'name',
  create_date: 'create_date',
  modify_date: 'modify_date'
};

exports.Prisma.Vm_imageScalarFieldEnum = {
  vm_image_id: 'vm_image_id',
  vm_image_tc_name: 'vm_image_tc_name',
  aws_image_id: 'aws_image_id',
  vm_security_group_id: 'vm_security_group_id',
  vm_instance_type_id: 'vm_instance_type_id',
  vm_availability_zone_id: 'vm_availability_zone_id',
  vm_key_pair_id: 'vm_key_pair_id',
  vm_account_id: 'vm_account_id',
  create_date: 'create_date',
  modify_date: 'modify_date',
  vm_provider_id: 'vm_provider_id'
};

exports.Prisma.Vm_image_user_dataScalarFieldEnum = {
  vm_image_id: 'vm_image_id',
  vm_user_data_id: 'vm_user_data_id'
};

exports.Prisma.Vm_instanceScalarFieldEnum = {
  vm_instance_id: 'vm_instance_id',
  aws_instance_id: 'aws_instance_id',
  create_date: 'create_date',
  modify_date: 'modify_date',
  vm_image_id: 'vm_image_id',
  tc_member_handle: 'tc_member_handle',
  svn_branch: 'svn_branch',
  contest_id: 'contest_id',
  contest_name: 'contest_name',
  vm_contest_type_id: 'vm_contest_type_id',
  is_terminated: 'is_terminated',
  public_ip: 'public_ip',
  vm_usage_id: 'vm_usage_id',
  vm_creation_time: 'vm_creation_time',
  vm_account_user_id: 'vm_account_user_id'
};

exports.Prisma.Vm_instance_auditScalarFieldEnum = {
  vm_instance_audit_id: 'vm_instance_audit_id',
  vm_instance_id: 'vm_instance_id',
  create_date: 'create_date',
  modify_date: 'modify_date',
  action: 'action',
  user_id: 'user_id'
};

exports.Prisma.Vm_instance_typeScalarFieldEnum = {
  vm_instance_type_id: 'vm_instance_type_id',
  name: 'name',
  create_date: 'create_date',
  modify_date: 'modify_date'
};

exports.Prisma.Vm_key_pairScalarFieldEnum = {
  vm_key_pair_id: 'vm_key_pair_id',
  name: 'name',
  create_date: 'create_date',
  modify_date: 'modify_date'
};

exports.Prisma.Vm_providerScalarFieldEnum = {
  vm_provider_id: 'vm_provider_id',
  name: 'name',
  create_date: 'create_date',
  modify_date: 'modify_date'
};

exports.Prisma.Vm_security_groupScalarFieldEnum = {
  vm_security_group_id: 'vm_security_group_id',
  name: 'name',
  create_date: 'create_date',
  modify_date: 'modify_date'
};

exports.Prisma.Vm_usageScalarFieldEnum = {
  vm_usage_id: 'vm_usage_id',
  name: 'name',
  create_date: 'create_date',
  modify_date: 'modify_date'
};

exports.Prisma.Vm_user_dataScalarFieldEnum = {
  vm_user_data_id: 'vm_user_data_id',
  key: 'key',
  value: 'value',
  create_date: 'create_date',
  modify_date: 'modify_date',
  encrypted: 'encrypted'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  user: 'user',
  email: 'email',
  access_token: 'access_token',
  access_token_has_permission: 'access_token_has_permission',
  achievement_type_lu: 'achievement_type_lu',
  address: 'address',
  address_type_lu: 'address_type_lu',
  authorization_code_grant: 'authorization_code_grant',
  authorization_code_grant_has_permission: 'authorization_code_grant_has_permission',
  bounce_type_lu: 'bounce_type_lu',
  calendar: 'calendar',
  client_terms_mapping: 'client_terms_mapping',
  company: 'company',
  company_datasource_xref: 'company_datasource_xref',
  company_terms_of_use_xref: 'company_terms_of_use_xref',
  contest_eligibility: 'contest_eligibility',
  continent: 'continent',
  corona_event: 'corona_event',
  corona_event_type: 'corona_event_type',
  country: 'country',
  datasource_lu: 'datasource_lu',
  datasource_type_lu: 'datasource_type_lu',
  demographic_answer: 'demographic_answer',
  demographic_assignment: 'demographic_assignment',
  demographic_question: 'demographic_question',
  dice_connection: 'dice_connection',
  email_request: 'email_request',
  email_status_lu: 'email_status_lu',
  email_type_lu: 'email_type_lu',
  event: 'event',
  event_lu: 'event_lu',
  event_registration: 'event_registration',
  event_type_lu: 'event_type_lu',
  gov_id_document: 'gov_id_document',
  group_contest_eligibility: 'group_contest_eligibility',
  group_role_xref: 'group_role_xref',
  http_uri: 'http_uri',
  http_verb: 'http_verb',
  id_sequences: 'id_sequences',
  invalid_handles: 'invalid_handles',
  key_generation: 'key_generation',
  member_image: 'member_image',
  note: 'note',
  note_type_lu: 'note_type_lu',
  notify_lu: 'notify_lu',
  notify_type_lu: 'notify_type_lu',
  oauth_permission: 'oauth_permission',
  oauth_permission_has_http_uri: 'oauth_permission_has_http_uri',
  oauth_permission_has_http_verb: 'oauth_permission_has_http_verb',
  page_tracker: 'page_tracker',
  page_tracker_action: 'page_tracker_action',
  password_recovery: 'password_recovery',
  password_reset_token: 'password_reset_token',
  permission_code: 'permission_code',
  pgifx_tbl_channel_mapping: 'pgifx_tbl_channel_mapping',
  phone: 'phone',
  phone_type_lu: 'phone_type_lu',
  photo_image: 'photo_image',
  preference_group_lu: 'preference_group_lu',
  preference_lu: 'preference_lu',
  preference_type_lu: 'preference_type_lu',
  preference_value: 'preference_value',
  professor: 'professor',
  professor_status_lu: 'professor_status_lu',
  project_role_terms_of_use_xref: 'project_role_terms_of_use_xref',
  registration_type_lu: 'registration_type_lu',
  registration_type_notify_xref: 'registration_type_notify_xref',
  registration_type_preference_xref: 'registration_type_preference_xref',
  school: 'school',
  school_association_type_lu: 'school_association_type_lu',
  school_type_lu: 'school_type_lu',
  secret_question: 'secret_question',
  security_groups: 'security_groups',
  security_perms: 'security_perms',
  security_roles: 'security_roles',
  security_status_lu: 'security_status_lu',
  security_user: 'security_user',
  sequence_object: 'sequence_object',
  social_login_provider: 'social_login_provider',
  sso_login_provider: 'sso_login_provider',
  state: 'state',
  sync_test_id: 'sync_test_id',
  terms_of_use: 'terms_of_use',
  terms_of_use_agreeability_type_lu: 'terms_of_use_agreeability_type_lu',
  terms_of_use_dependency: 'terms_of_use_dependency',
  terms_of_use_docusign_template_xref: 'terms_of_use_docusign_template_xref',
  terms_of_use_type: 'terms_of_use_type',
  timezone_lu: 'timezone_lu',
  user_2fa: 'user_2fa',
  user_address_xref: 'user_address_xref',
  user_event: 'user_event',
  user_event_status_lu: 'user_event_status_lu',
  user_group_xref: 'user_group_xref',
  user_note_xref: 'user_note_xref',
  user_notify_xref: 'user_notify_xref',
  user_otp_email: 'user_otp_email',
  user_preference: 'user_preference',
  user_role_xref: 'user_role_xref',
  user_school: 'user_school',
  user_social_login: 'user_social_login',
  user_sso_login: 'user_sso_login',
  user_status: 'user_status',
  user_status_lu: 'user_status_lu',
  user_status_type_lu: 'user_status_type_lu',
  user_terms_of_use_ban_xref: 'user_terms_of_use_ban_xref',
  user_terms_of_use_xref: 'user_terms_of_use_xref',
  vm_account: 'vm_account',
  vm_account_user: 'vm_account_user',
  vm_availability_zone: 'vm_availability_zone',
  vm_contest_type: 'vm_contest_type',
  vm_image: 'vm_image',
  vm_image_user_data: 'vm_image_user_data',
  vm_instance: 'vm_instance',
  vm_instance_audit: 'vm_instance_audit',
  vm_instance_type: 'vm_instance_type',
  vm_key_pair: 'vm_key_pair',
  vm_provider: 'vm_provider',
  vm_security_group: 'vm_security_group',
  vm_usage: 'vm_usage',
  vm_user_data: 'vm_user_data'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
