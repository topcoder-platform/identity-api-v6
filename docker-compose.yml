services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${COMMON_OLTP_DB_NAME:-common_oltp_db}
      COMMON_OLTP_DB_NAME: ${COMMON_OLTP_DB_NAME:-common_oltp_db}
      AUTHORIZATION_DB_NAME: ${AUTHORIZATION_DB_NAME:-authorization_db}
    ports:
      - "5432:5432"
    volumes:
      - ./docker/init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${COMMON_OLTP_DB_NAME:-common_oltp_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis-cache
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- New MySQL Service ---
  mysql:
    image: mysql:8 # Using MySQL version 8
    container_name: mysql-legacy-auth
    environment:
      MYSQL_ROOT_PASSWORD: mysql-user-root-password
      MYSQL_DATABASE: authorization_db
      MYSQL_USER: mysql-user
      MYSQL_PASSWORD: mysql-password
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "$${MYSQL_USER}", "-p$${MYSQL_PASSWORD}"] # Check requires user/pw
      interval: 15s
      timeout: 5s
      retries: 5
  # ------------------------

# Define named volumes
volumes:
  postgres_data: # Define the postgres volume
  mysql_legacy_data: # Define the new volume